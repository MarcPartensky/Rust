{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2","program":"/Users/marcpartensky/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","tetra","--edition=2018","/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"ab_glyph\"","--cfg","feature=\"audio\"","--cfg","feature=\"audio_flac\"","--cfg","feature=\"audio_mp3\"","--cfg","feature=\"audio_vorbis\"","--cfg","feature=\"audio_wav\"","--cfg","feature=\"default\"","--cfg","feature=\"font_ttf\"","--cfg","feature=\"rodio\"","--cfg","feature=\"texture_bmp\"","--cfg","feature=\"texture_gif\"","--cfg","feature=\"texture_jpeg\"","--cfg","feature=\"texture_png\"","-C","metadata=923152a39218f08f","-C","extra-filename=-923152a39218f08f","--out-dir","/Users/marcpartensky/Programs/Rust/Pong-Tutorial/pong/target/rls/debug/deps","-L","dependency=/Users/marcpartensky/Programs/Rust/Pong-Tutorial/pong/target/rls/debug/deps","--extern","ab_glyph=/Users/marcpartensky/Programs/Rust/Pong-Tutorial/pong/target/rls/debug/deps/libab_glyph-e64f88922b751d3f.rmeta","--extern","bytemuck=/Users/marcpartensky/Programs/Rust/Pong-Tutorial/pong/target/rls/debug/deps/libbytemuck-ea70d62e73dd093b.rmeta","--extern","glow=/Users/marcpartensky/Programs/Rust/Pong-Tutorial/pong/target/rls/debug/deps/libglow-feeb4b14848e9686.rmeta","--extern","hashbrown=/Users/marcpartensky/Programs/Rust/Pong-Tutorial/pong/target/rls/debug/deps/libhashbrown-6e0283e9a51c4458.rmeta","--extern","image=/Users/marcpartensky/Programs/Rust/Pong-Tutorial/pong/target/rls/debug/deps/libimage-e4ccea3c94bcb581.rmeta","--extern","rodio=/Users/marcpartensky/Programs/Rust/Pong-Tutorial/pong/target/rls/debug/deps/librodio-5d9522b35248f3e4.rmeta","--extern","sdl2=/Users/marcpartensky/Programs/Rust/Pong-Tutorial/pong/target/rls/debug/deps/libsdl2-00b41c44ff2b7cd9.rmeta","--extern","unicode_normalization=/Users/marcpartensky/Programs/Rust/Pong-Tutorial/pong/target/rls/debug/deps/libunicode_normalization-be1d0f73266dfab8.rmeta","--extern","vek=/Users/marcpartensky/Programs/Rust/Pong-Tutorial/pong/target/rls/debug/deps/libvek-986e786543687aff.rmeta","--cap-lints","allow","-L","native=/Users/marcpartensky/Programs/Rust/Pong-Tutorial/pong/target/rls/debug/build/minimp3-sys-a37e97d4ad31f7f9/out","--error-format=json","--sysroot","/Users/marcpartensky/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/marcpartensky/Programs/Rust/Pong-Tutorial/pong/target/rls/debug/deps/libtetra-923152a39218f08f.rmeta"},"prelude":{"crate_id":{"name":"tetra","disambiguator":[14520880024438438454,5664062438467904842]},"crate_root":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src","external_crates":[{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9176452395873514981,10525323411957323785]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[15010738070622620763,9605760616786660431]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8211843569075862794,5370502913999467694]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5168977417888994485,12129851499920233632]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9254821246596336482,1562696929571001984]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4867494102928472883,16549916413327868340]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12208796569805280475,9421298070223625802]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[16776259526442764164,2692171601035033462]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[8506315589905780113,7752550639658555424]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6004073670142137807,10055010459345902388]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[13812981793209371227,10465105188798852626]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[12279896640040761358,16819944754252654372]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[502125910674001101,4874613814734389117]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[6964077277237141888,7151316435171244180]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[5505266058476155326,9550778519957076375]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","num":16,"id":{"name":"rodio","disambiguator":[2426596336761670751,15362768092582640132]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","num":17,"id":{"name":"claxon","disambiguator":[16636298277437522480,12529289335291083410]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","num":18,"id":{"name":"cpal","disambiguator":[15073414673846913054,1353645007706376034]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","num":19,"id":{"name":"thiserror","disambiguator":[12975265161977704930,6816541863109932205]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","num":20,"id":{"name":"thiserror_impl","disambiguator":[6796221752730650830,16960093605678427307]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","num":21,"id":{"name":"coreaudio","disambiguator":[17664367931519541577,10056485891202083877]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","num":22,"id":{"name":"bitflags","disambiguator":[16116468340896408149,12780401407780675886]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","num":23,"id":{"name":"coreaudio_sys","disambiguator":[8011611833854510411,9243060703284945529]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","num":24,"id":{"name":"core_foundation_sys","disambiguator":[16865125840248483238,1688087439248186473]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","num":25,"id":{"name":"hound","disambiguator":[16329373399611394823,4100108030193116478]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","num":26,"id":{"name":"lazy_static","disambiguator":[10699606976910705946,13251100683905982789]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","num":27,"id":{"name":"lewton","disambiguator":[7898743655279528073,12846968060753692466]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","num":28,"id":{"name":"byteorder","disambiguator":[8100689518988960638,1706710057921452686]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","num":29,"id":{"name":"tinyvec","disambiguator":[12697859640485865258,6749729496889433697]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","num":30,"id":{"name":"ogg","disambiguator":[5784952443384711612,12802741172354209416]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","num":31,"id":{"name":"minimp3","disambiguator":[4936406413313833334,1562139401500157842]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","num":32,"id":{"name":"minimp3_sys","disambiguator":[7425967755665428804,11661768939811501865]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","num":33,"id":{"name":"slice_deque","disambiguator":[5779270905156349733,5434863622373196219]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","num":34,"id":{"name":"mach","disambiguator":[6045939169269690460,14115832064195824264]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","num":35,"id":{"name":"libc","disambiguator":[13590427990575096869,7285383817766672940]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","num":36,"id":{"name":"image","disambiguator":[8987493345310585541,15599453513109364174]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","num":37,"id":{"name":"num_traits","disambiguator":[2187919300340126041,15326872639173662768]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","num":38,"id":{"name":"gif","disambiguator":[7584374974849420212,2758902774187060588]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","num":39,"id":{"name":"color_quant","disambiguator":[5913017604879052591,16011614591089837859]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","num":40,"id":{"name":"weezl","disambiguator":[2407607343720048586,1918124179607286839]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","num":41,"id":{"name":"num_rational","disambiguator":[17216135064323613916,17626132374345098875]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","num":42,"id":{"name":"num_integer","disambiguator":[15442726777171473026,4236330964141687349]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","num":43,"id":{"name":"jpeg_decoder","disambiguator":[9147064113414015420,8593524217276843277]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","num":44,"id":{"name":"rayon","disambiguator":[13482988502072394961,5341452013106807312]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","num":45,"id":{"name":"either","disambiguator":[6840162145648027142,11570858844429452840]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","num":46,"id":{"name":"rayon_core","disambiguator":[7906721944558906062,12822829303791109664]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","num":47,"id":{"name":"crossbeam_channel","disambiguator":[96482058019987782,10049745359990201099]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","num":48,"id":{"name":"cfg_if","disambiguator":[6571007890905016343,5363374063943722247]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","num":49,"id":{"name":"crossbeam_utils","disambiguator":[15920459522211560194,17488893388094700471]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","num":50,"id":{"name":"const_fn","disambiguator":[12119794419944630728,363572901849253722]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","num":51,"id":{"name":"crossbeam_deque","disambiguator":[18277813011991207035,14348922882586262632]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","num":52,"id":{"name":"crossbeam_epoch","disambiguator":[6594559243876785556,16078967009545711141]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","num":53,"id":{"name":"scopeguard","disambiguator":[9225924681975274669,17251300067473531448]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","num":54,"id":{"name":"memoffset","disambiguator":[750861885489191778,8989627628777223909]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","num":55,"id":{"name":"num_cpus","disambiguator":[4085810363256194036,5847214990752377542]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","num":56,"id":{"name":"num_iter","disambiguator":[2888646180017252446,12935696569904960811]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","num":57,"id":{"name":"png","disambiguator":[8828557017916840014,17646141604630254962]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","num":58,"id":{"name":"deflate","disambiguator":[7207444767134470718,1456527242072854467]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","num":59,"id":{"name":"adler32","disambiguator":[11124242391470085160,17612107284133465246]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","num":60,"id":{"name":"crc32fast","disambiguator":[12661369090980535911,6349860293495720925]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","num":61,"id":{"name":"miniz_oxide","disambiguator":[2007018816125322066,6361282046468640186]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/platform/device_gl.rs","num":62,"id":{"name":"bytemuck","disambiguator":[12894801332933928272,415272307425923105]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","num":63,"id":{"name":"hashbrown","disambiguator":[7910765539790496828,12134846239725411383]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","num":64,"id":{"name":"ahash","disambiguator":[15394522178659589857,4028185650127576676]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/cache.rs","num":65,"id":{"name":"unicode_normalization","disambiguator":[10904737934686486952,13461444154761512075]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","num":66,"id":{"name":"ab_glyph","disambiguator":[3133218088601855088,15923891057221708188]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","num":67,"id":{"name":"ab_glyph_rasterizer","disambiguator":[9545170818989790484,10114207637370207554]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","num":68,"id":{"name":"owned_ttf_parser","disambiguator":[3687781241294176180,9096460819328630078]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","num":69,"id":{"name":"ttf_parser","disambiguator":[11089943562455015494,3644703571750891102]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/math.rs","num":70,"id":{"name":"vek","disambiguator":[16266361102826692797,3850985662760882383]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/math.rs","num":71,"id":{"name":"approx","disambiguator":[14904918389831386736,10068560530058630953]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/math.rs","num":72,"id":{"name":"static_assertions","disambiguator":[11292856544832691802,11800730731306792873]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/platform/device_gl.rs","num":73,"id":{"name":"glow","disambiguator":[9268653840554574635,3159028157405059042]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/platform/window_sdl.rs","num":74,"id":{"name":"sdl2","disambiguator":[15559709278707289824,15691469650710506941]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/platform/window_sdl.rs","num":75,"id":{"name":"sdl2_sys","disambiguator":[276728513577988333,4424508307702818299]}}],"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":0,"byte_end":2603,"line_start":1,"line_end":79,"column_start":1,"column_end":42}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1459},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":122964,"byte_end":122981,"line_start":23,"line_end":23,"column_start":40,"column_end":57},"alias_span":null,"name":"VectorFontBuilder","value":"","parent":{"krate":0,"index":456}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":37171,"byte_end":37172,"line_start":20,"line_end":20,"column_start":17,"column_end":18},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":192}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":37171,"byte_end":37172,"line_start":20,"line_end":20,"column_start":17,"column_end":18},"alias_span":null,"name":"*","value":"Canvas","parent":{"krate":0,"index":192}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":37171,"byte_end":37172,"line_start":20,"line_end":20,"column_start":17,"column_end":18},"alias_span":null,"name":"*","value":"Color","parent":{"krate":0,"index":192}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":37171,"byte_end":37172,"line_start":20,"line_end":20,"column_start":17,"column_end":18},"alias_span":null,"name":"*","value":"Drawable, DrawParams","parent":{"krate":0,"index":192}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":37171,"byte_end":37172,"line_start":20,"line_end":20,"column_start":17,"column_end":18},"alias_span":null,"name":"*","value":"Rectangle","parent":{"krate":0,"index":192}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":37171,"byte_end":37172,"line_start":20,"line_end":20,"column_start":17,"column_end":18},"alias_span":null,"name":"*","value":"Shader","parent":{"krate":0,"index":192}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":37171,"byte_end":37172,"line_start":20,"line_end":20,"column_start":17,"column_end":18},"alias_span":null,"name":"*","value":"FilterMode, Texture","parent":{"krate":0,"index":192}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":164983,"byte_end":164984,"line_start":35,"line_end":35,"column_start":18,"column_end":19},"alias_span":null,"name":"*","value":"remove_gamepad, GamepadStick, get_gamepad_stick_position, GamepadState, get_gamepad_mut, GamepadAxis, add_gamepad, GamepadButton","parent":{"krate":0,"index":727}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":164983,"byte_end":164984,"line_start":35,"line_end":35,"column_start":18,"column_end":19},"alias_span":null,"name":"*","value":"Key, set_key_down, set_key_up","parent":{"krate":0,"index":727}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":164983,"byte_end":164984,"line_start":35,"line_end":35,"column_start":18,"column_end":19},"alias_span":null,"name":"*","value":"get_mouse_x, set_mouse_button_down, apply_mouse_wheel_movement, MouseButton, get_mouse_position, set_mouse_button_up, get_mouse_y, set_mouse_position","parent":{"krate":0,"index":727}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/math.rs","byte_start":192773,"byte_end":192774,"line_start":17,"line_end":17,"column_start":14,"column_end":15},"alias_span":null,"name":"*","value":"Vec2, Vec4, Mat2, FrustumPlanes, Mat4, Vec3, Mat3","parent":{"krate":0,"index":861}},{"kind":"Use","ref_id":{"krate":0,"index":117},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":2492,"byte_end":2499,"line_start":77,"line_end":77,"column_start":26,"column_end":33},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1204},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":2501,"byte_end":2515,"line_start":77,"line_end":77,"column_start":35,"column_end":49},"alias_span":null,"name":"ContextBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":167},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":2541,"byte_end":2547,"line_start":78,"line_end":78,"column_start":24,"column_end":30},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1224},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":2549,"byte_end":2559,"line_start":78,"line_end":78,"column_start":32,"column_end":42},"alias_span":null,"name":"TetraError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1964},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":2589,"byte_end":2594,"line_start":79,"line_end":79,"column_start":28,"column_end":33},"alias_span":null,"name":"Event","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":856},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":2596,"byte_end":2601,"line_start":79,"line_end":79,"column_start":35,"column_end":40},"alias_span":null,"name":"State","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":0,"byte_end":2603,"line_start":1,"line_end":79,"column_start":1,"column_end":42},"name":"","qualname":"::","value":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":96},{"krate":0,"index":156},{"krate":0,"index":173},{"krate":0,"index":192},{"krate":0,"index":727},{"krate":0,"index":844},{"krate":0,"index":861},{"krate":0,"index":863},{"krate":0,"index":1090},{"krate":0,"index":1118},{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1160},{"krate":0,"index":1161},{"krate":0,"index":1162},{"krate":0,"index":1163},{"krate":0,"index":1164}],"decl_id":null,"docs":" Tetra is a simple 2D game framework written in Rust. It uses SDL2 for event handling and OpenGL 3.2+ for rendering.","sig":null,"attributes":[{"value":"/ Tetra is a simple 2D game framework written in Rust. It uses SDL2 for event handling and OpenGL 3.2+ for rendering.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":0,"byte_end":119,"line_start":1,"line_end":1,"column_start":1,"column_end":120}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":120,"byte_end":123,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ * [Website](https://tetra.seventeencups.net)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":124,"byte_end":172,"line_start":3,"line_end":3,"column_start":1,"column_end":49}},{"value":"/ * [Tutorial](https://tetra.seventeencups.net/tutorial)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":173,"byte_end":231,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ * [API Docs](https://docs.rs/tetra)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":232,"byte_end":271,"line_start":5,"line_end":5,"column_start":1,"column_end":40}},{"value":"/ * [FAQ](https://tetra.seventeencups.net/FAQ)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":272,"byte_end":320,"line_start":6,"line_end":6,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":321,"byte_end":324,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ## Features","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":325,"byte_end":340,"line_start":8,"line_end":8,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":341,"byte_end":344,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * XNA/MonoGame-inspired API","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":345,"byte_end":376,"line_start":10,"line_end":10,"column_start":1,"column_end":32}},{"value":"/ * Efficient 2D rendering, with draw call batching by default","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":377,"byte_end":441,"line_start":11,"line_end":11,"column_start":1,"column_end":65}},{"value":"/ * Easy input handling, via polling or events, with support for gamepads","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":442,"byte_end":517,"line_start":12,"line_end":12,"column_start":1,"column_end":76}},{"value":"/ * Deterministic game loop by default, à la [Fix Your Timestep](https://gafferongames.com/post/fix_your_timestep/)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":518,"byte_end":636,"line_start":13,"line_end":13,"column_start":1,"column_end":118}},{"value":"/ * Common building blocks built-in, such as:","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":637,"byte_end":684,"line_start":14,"line_end":14,"column_start":1,"column_end":48}},{"value":"/     * Font rendering","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":685,"byte_end":709,"line_start":15,"line_end":15,"column_start":1,"column_end":25}},{"value":"/     * Cameras","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":710,"byte_end":727,"line_start":16,"line_end":16,"column_start":1,"column_end":18}},{"value":"/     * Screen scaling","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":728,"byte_end":752,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":753,"byte_end":756,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ## Installation","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":757,"byte_end":776,"line_start":19,"line_end":19,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":777,"byte_end":780,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ To add Tetra to your project, add the following line to your `Cargo.toml` file:","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":781,"byte_end":864,"line_start":21,"line_end":21,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":865,"byte_end":868,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":869,"byte_end":880,"line_start":23,"line_end":23,"column_start":1,"column_end":12}},{"value":"/ tetra = \"0.5\"","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":881,"byte_end":898,"line_start":24,"line_end":24,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":899,"byte_end":906,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":907,"byte_end":910,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ You will also need to install the SDL2 native libraries - full details are provided in the [documentation](https://tetra.seventeencups.net/installation).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":911,"byte_end":1068,"line_start":27,"line_end":27,"column_start":1,"column_end":158}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":1069,"byte_end":1072,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":1073,"byte_end":1088,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":1089,"byte_end":1092,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ To get a simple window displayed on screen, the following code can be used:","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":1093,"byte_end":1172,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":1173,"byte_end":1176,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":1177,"byte_end":1190,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/ use tetra::graphics::{self, Color};","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":1191,"byte_end":1230,"line_start":34,"line_end":34,"column_start":1,"column_end":40}},{"value":"/ use tetra::{Context, ContextBuilder, State};","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":1231,"byte_end":1279,"line_start":35,"line_end":35,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":1280,"byte_end":1283,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ struct GameState;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":1284,"byte_end":1305,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":1306,"byte_end":1309,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ impl State for GameState {","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":1310,"byte_end":1340,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/     fn draw(&mut self, ctx: &mut Context) -> tetra::Result {","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":1341,"byte_end":1405,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/         // Cornflower blue, as is tradition","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":1406,"byte_end":1453,"line_start":41,"line_end":41,"column_start":1,"column_end":48}},{"value":"/         graphics::clear(ctx, Color::rgb(0.392, 0.584, 0.929));","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":1454,"byte_end":1520,"line_start":42,"line_end":42,"column_start":1,"column_end":67}},{"value":"/         Ok(())","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":1521,"byte_end":1539,"line_start":43,"line_end":43,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":1540,"byte_end":1549,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":1550,"byte_end":1555,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":1556,"byte_end":1559,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ fn main() -> tetra::Result {","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":1560,"byte_end":1592,"line_start":47,"line_end":47,"column_start":1,"column_end":33}},{"value":"/     ContextBuilder::new(\"Hello, world!\", 1280, 720)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":1593,"byte_end":1648,"line_start":48,"line_end":48,"column_start":1,"column_end":56}},{"value":"/         .build()?","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":1649,"byte_end":1670,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/         .run(|_| Ok(GameState))","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":1671,"byte_end":1706,"line_start":50,"line_end":50,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":1707,"byte_end":1712,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":1713,"byte_end":1720,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":1721,"byte_end":1724,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ You can see this example in action by running `cargo run --example hello_world`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":1725,"byte_end":1809,"line_start":54,"line_end":54,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":1810,"byte_end":1813,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The full list of examples is available [here](https://github.com/17cupsofcoffee/tetra/tree/main/examples).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":1814,"byte_end":1924,"line_start":56,"line_end":56,"column_start":1,"column_end":111}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":1925,"byte_end":1928,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ## Support/Feedback","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":1929,"byte_end":1952,"line_start":58,"line_end":58,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":1953,"byte_end":1956,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Tetra is fairly early in development, so you might run into bugs/flaky docs/general weirdness. Please feel free to open an issue/PR if you find something! You can also contact me via [Twitter](https://twitter.com/17cupsofcoffee) or the [Rust Game Development Discord](https://discord.gg/yNtPTb2).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":1957,"byte_end":2257,"line_start":60,"line_end":60,"column_start":1,"column_end":301}},{"value":"warn(missing_docs)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":2259,"byte_end":2281,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"audio","qualname":"::audio","value":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":1165},{"krate":0,"index":1173},{"krate":0,"index":1171},{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":27},{"krate":0,"index":1175},{"krate":0,"index":1179},{"krate":0,"index":1177},{"krate":0,"index":43},{"krate":0,"index":1181},{"krate":0,"index":1195},{"krate":0,"index":1193},{"krate":0,"index":1191},{"krate":0,"index":1188},{"krate":0,"index":1189},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":1196},{"krate":0,"index":1202},{"krate":0,"index":55},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":84},{"krate":0,"index":91}],"decl_id":null,"docs":" Functions and types relating to audio playback.\n","sig":null,"attributes":[{"value":"cfg(feature = \"audio\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":2283,"byte_end":2308,"line_start":64,"line_end":64,"column_start":1,"column_end":26}},{"value":"/ Functions and types relating to audio playback.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":2684,"byte_end":2735,"line_start":1,"line_end":1,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1165},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":4287,"byte_end":4292,"line_start":46,"line_end":46,"column_start":12,"column_end":17},"name":"Sound","qualname":"::audio::Sound","value":"Sound {  }","parent":null,"children":[{"krate":0,"index":1166}],"decl_id":null,"docs":" Sound data that can be played back.","sig":null,"attributes":[{"value":"/ Sound data that can be played back.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":3063,"byte_end":3102,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":3103,"byte_end":3106,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ All of the playback methods on this type return a [`SoundInstance`](./struct.SoundInstance.html) that","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":3107,"byte_end":3212,"line_start":18,"line_end":18,"column_start":1,"column_end":106}},{"value":"/ can be used to control the sound after it has started. If you just want","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":3213,"byte_end":3288,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/ to 'fire and forget' a sound, you can discard it - the sound will","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":3289,"byte_end":3358,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/ continue playing regardless.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":3359,"byte_end":3391,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":3392,"byte_end":3395,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Supported Formats","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":3396,"byte_end":3419,"line_start":23,"line_end":23,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":3420,"byte_end":3423,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Various file formats are supported, and can be enabled or disabled via Cargo features:","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":3424,"byte_end":3514,"line_start":25,"line_end":25,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":3515,"byte_end":3518,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ | Format | Cargo feature | Enabled by default? |","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":3519,"byte_end":3571,"line_start":27,"line_end":27,"column_start":1,"column_end":53}},{"value":"/ |-|-|-|","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":3572,"byte_end":3583,"line_start":28,"line_end":28,"column_start":1,"column_end":12}},{"value":"/ | WAV | `audio_wav` | Yes |","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":3584,"byte_end":3615,"line_start":29,"line_end":29,"column_start":1,"column_end":32}},{"value":"/ | OGG Vorbis | `audio_vorbis | Yes |","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":3616,"byte_end":3656,"line_start":30,"line_end":30,"column_start":1,"column_end":41}},{"value":"/ | FLAC | `audio_flac` | Yes |","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":3657,"byte_end":3690,"line_start":31,"line_end":31,"column_start":1,"column_end":34}},{"value":"/ | MP3 | `audio_mp3` | Yes |","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":3691,"byte_end":3722,"line_start":32,"line_end":32,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":3723,"byte_end":3726,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Performance","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":3727,"byte_end":3744,"line_start":34,"line_end":34,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":3745,"byte_end":3748,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Creating a `Sound` is a fairly cheap operation, as the data is not decoded until playback begins.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":3749,"byte_end":3850,"line_start":36,"line_end":36,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":3851,"byte_end":3854,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Cloning a `Sound` is a very cheap operation, as the underlying data is shared between the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":3855,"byte_end":3948,"line_start":38,"line_end":38,"column_start":1,"column_end":94}},{"value":"/ original instance and the clone via [reference-counting](https://doc.rust-lang.org/std/rc/struct.Rc.html).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":3949,"byte_end":4059,"line_start":39,"line_end":39,"column_start":1,"column_end":111}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":4060,"byte_end":4063,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":4064,"byte_end":4078,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":4079,"byte_end":4082,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ The [`audio`](https://github.com/17cupsofcoffee/tetra/blob/main/examples/audio.rs)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":4083,"byte_end":4169,"line_start":43,"line_end":43,"column_start":1,"column_end":87}},{"value":"/ example demonstrates how to play several different kinds of sound.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":4170,"byte_end":4240,"line_start":44,"line_end":44,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":4693,"byte_end":4696,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"new","qualname":"<Sound>::new","value":"pub fn new<P>(P) -> Result<Sound> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new sound from the given file.","sig":null,"attributes":[{"value":"/ Creates a new sound from the given file.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":4347,"byte_end":4391,"line_start":51,"line_end":51,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":4396,"byte_end":4399,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Note that the data is not decoded until playback begins, so this function will not","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":4404,"byte_end":4490,"line_start":53,"line_end":53,"column_start":5,"column_end":91}},{"value":"/ validate that the data being read is formatted correctly.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":4495,"byte_end":4556,"line_start":54,"line_end":54,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":4561,"byte_end":4564,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":4569,"byte_end":4581,"line_start":56,"line_end":56,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":4586,"byte_end":4589,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ * `TetraError::FailedToLoadAsset` will be returned if the file could not be loaded.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":4594,"byte_end":4681,"line_start":58,"line_end":58,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":5280,"byte_end":5294,"line_start":76,"line_end":76,"column_start":12,"column_end":26},"name":"from_file_data","qualname":"<Sound>::from_file_data","value":"pub fn from_file_data(&[u8]) -> Sound","parent":null,"children":[],"decl_id":null,"docs":" Creates a new sound from a slice of binary data, encoded in one of Tetra's supported\n file formats.","sig":null,"attributes":[{"value":"/ Creates a new sound from a slice of binary data, encoded in one of Tetra's supported","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":4849,"byte_end":4937,"line_start":68,"line_end":68,"column_start":5,"column_end":93}},{"value":"/ file formats.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":4942,"byte_end":4959,"line_start":69,"line_end":69,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":4964,"byte_end":4967,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ This is useful in combination with `include_bytes`, as it allows you to include","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":4972,"byte_end":5055,"line_start":71,"line_end":71,"column_start":5,"column_end":88}},{"value":"/ your audio data directly in the binary.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":5060,"byte_end":5103,"line_start":72,"line_end":72,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":5108,"byte_end":5111,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that the data is not decoded until playback begins, so this function will not","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":5116,"byte_end":5202,"line_start":74,"line_end":74,"column_start":5,"column_end":91}},{"value":"/ validate that the data being read is formatted correctly.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":5207,"byte_end":5268,"line_start":75,"line_end":75,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":5610,"byte_end":5614,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"play","qualname":"<Sound>::play","value":"pub fn play(&Self, &Context) -> Result<SoundInstance>","parent":null,"children":[],"decl_id":null,"docs":" Plays the sound.","sig":null,"attributes":[{"value":"/ Plays the sound.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":5366,"byte_end":5386,"line_start":80,"line_end":80,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":5391,"byte_end":5394,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":5399,"byte_end":5411,"line_start":82,"line_end":82,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":5416,"byte_end":5419,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ * `TetraError::NoAudioDevice` will be returned if no audio device is active.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":5424,"byte_end":5504,"line_start":84,"line_end":84,"column_start":5,"column_end":85}},{"value":"/ * `TetraError::InvalidSound` will be returned if the sound data could not be decoded.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":5509,"byte_end":5598,"line_start":85,"line_end":85,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":6075,"byte_end":6081,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"repeat","qualname":"<Sound>::repeat","value":"pub fn repeat(&Self, &Context) -> Result<SoundInstance>","parent":null,"children":[],"decl_id":null,"docs":" Plays the sound repeatedly.","sig":null,"attributes":[{"value":"/ Plays the sound repeatedly.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":5820,"byte_end":5851,"line_start":92,"line_end":92,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":5856,"byte_end":5859,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":5864,"byte_end":5876,"line_start":94,"line_end":94,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":5881,"byte_end":5884,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ * `TetraError::NoAudioDevice` will be returned if no audio device is active.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":5889,"byte_end":5969,"line_start":96,"line_end":96,"column_start":5,"column_end":85}},{"value":"/ * `TetraError::InvalidSound` will be returned if the sound data could not be decoded.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":5974,"byte_end":6063,"line_start":97,"line_end":97,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":6573,"byte_end":6578,"line_start":110,"line_end":110,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Sound>::spawn","value":"pub fn spawn(&Self, &Context) -> Result<SoundInstance>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a new instance of the sound that is not playing yet.","sig":null,"attributes":[{"value":"/ Spawns a new instance of the sound that is not playing yet.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":6286,"byte_end":6349,"line_start":104,"line_end":104,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":6354,"byte_end":6357,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":6362,"byte_end":6374,"line_start":106,"line_end":106,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":6379,"byte_end":6382,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ * `TetraError::NoAudioDevice` will be returned if no audio device is active.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":6387,"byte_end":6467,"line_start":108,"line_end":108,"column_start":5,"column_end":85}},{"value":"/ * `TetraError::InvalidSound` will be returned if the sound data could not be decoded.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":6472,"byte_end":6561,"line_start":109,"line_end":109,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":7057,"byte_end":7066,"line_start":122,"line_end":122,"column_start":12,"column_end":21},"name":"play_with","qualname":"<Sound>::play_with","value":"pub fn play_with(&Self, &Context, f32, f32) -> Result<SoundInstance>","parent":null,"children":[],"decl_id":null,"docs":" Plays the sound, with the provided settings.","sig":null,"attributes":[{"value":"/ Plays the sound, with the provided settings.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":6785,"byte_end":6833,"line_start":116,"line_end":116,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":6838,"byte_end":6841,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":6846,"byte_end":6858,"line_start":118,"line_end":118,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":6863,"byte_end":6866,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ * `TetraError::NoAudioDevice` will be returned if no audio device is active.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":6871,"byte_end":6951,"line_start":120,"line_end":120,"column_start":5,"column_end":85}},{"value":"/ * `TetraError::InvalidSound` will be returned if the sound data could not be decoded.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":6956,"byte_end":7045,"line_start":121,"line_end":121,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":7585,"byte_end":7596,"line_start":134,"line_end":134,"column_start":12,"column_end":23},"name":"repeat_with","qualname":"<Sound>::repeat_with","value":"pub fn repeat_with(&Self, &Context, f32, f32) -> Result<SoundInstance>","parent":null,"children":[],"decl_id":null,"docs":" Plays the sound repeatedly, with the provided settings.","sig":null,"attributes":[{"value":"/ Plays the sound repeatedly, with the provided settings.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":7302,"byte_end":7361,"line_start":128,"line_end":128,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":7366,"byte_end":7369,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":7374,"byte_end":7386,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":7391,"byte_end":7394,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ * `TetraError::NoAudioDevice` will be returned if no audio device is active.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":7399,"byte_end":7479,"line_start":132,"line_end":132,"column_start":5,"column_end":85}},{"value":"/ * `TetraError::InvalidSound` will be returned if the sound data could not be decoded.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":7484,"byte_end":7573,"line_start":133,"line_end":133,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":8146,"byte_end":8156,"line_start":146,"line_end":146,"column_start":12,"column_end":22},"name":"spawn_with","qualname":"<Sound>::spawn_with","value":"pub fn spawn_with(&Self, &Context, f32, f32) -> Result<SoundInstance>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a new instance of the sound that is not playing yet, with the provided settings.","sig":null,"attributes":[{"value":"/ Spawns a new instance of the sound that is not playing yet, with the provided settings.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":7831,"byte_end":7922,"line_start":140,"line_end":140,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":7927,"byte_end":7930,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":7935,"byte_end":7947,"line_start":142,"line_end":142,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":7952,"byte_end":7955,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ * `TetraError::NoAudioDevice` will be returned if no audio device is active.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":7960,"byte_end":8040,"line_start":144,"line_end":144,"column_start":5,"column_end":85}},{"value":"/ * `TetraError::InvalidSound` will be returned if the sound data could not be decoded.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":8045,"byte_end":8134,"line_start":145,"line_end":145,"column_start":5,"column_end":94}}]},{"kind":"Struct","id":{"krate":0,"index":1175},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":8808,"byte_end":8821,"line_start":163,"line_end":163,"column_start":12,"column_end":25},"name":"SoundInstance","qualname":"::audio::SoundInstance","value":"SoundInstance {  }","parent":null,"children":[{"krate":0,"index":1176}],"decl_id":null,"docs":" A handle to a single instance of a [`Sound`](./struct.Sound.html).","sig":null,"attributes":[{"value":"/ A handle to a single instance of a [`Sound`](./struct.Sound.html).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":8391,"byte_end":8461,"line_start":153,"line_end":153,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":8462,"byte_end":8465,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ The audio thread will poll this for updates every 220 samples (roughly","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":8466,"byte_end":8540,"line_start":155,"line_end":155,"column_start":1,"column_end":75}},{"value":"/ every 5ms at a 44100hz sample rate).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":8541,"byte_end":8581,"line_start":156,"line_end":156,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":8582,"byte_end":8585,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ Cloning a `SoundInstance` will create a new handle to the same instance,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":8586,"byte_end":8662,"line_start":158,"line_end":158,"column_start":1,"column_end":77}},{"value":"/ rather than creating a new instance.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":8663,"byte_end":8703,"line_start":159,"line_end":159,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":8704,"byte_end":8707,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ Note that dropping a `SoundInstance` does not stop playback.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":8708,"byte_end":8772,"line_start":161,"line_end":161,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":8973,"byte_end":8977,"line_start":169,"line_end":169,"column_start":12,"column_end":16},"name":"play","qualname":"<SoundInstance>::play","value":"pub fn play(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Plays the sound if it is stopped, or resumes the sound if it is paused.\n","sig":null,"attributes":[{"value":"/ Plays the sound if it is stopped, or resumes the sound if it is paused.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":8886,"byte_end":8961,"line_start":168,"line_end":168,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":9145,"byte_end":9149,"line_start":175,"line_end":175,"column_start":12,"column_end":16},"name":"stop","qualname":"<SoundInstance>::stop","value":"pub fn stop(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Stops the sound. If playback is resumed, it will start over from the\n beginning.\n","sig":null,"attributes":[{"value":"/ Stops the sound. If playback is resumed, it will start over from the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":9042,"byte_end":9114,"line_start":173,"line_end":173,"column_start":5,"column_end":77}},{"value":"/ beginning.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":9119,"byte_end":9133,"line_start":174,"line_end":174,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":9333,"byte_end":9338,"line_start":181,"line_end":181,"column_start":12,"column_end":17},"name":"pause","qualname":"<SoundInstance>::pause","value":"pub fn pause(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Pauses the sound. If playback is resumed, it will continue\n from the point where it was paused.\n","sig":null,"attributes":[{"value":"/ Pauses the sound. If playback is resumed, it will continue","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":9215,"byte_end":9277,"line_start":179,"line_end":179,"column_start":5,"column_end":67}},{"value":"/ from the point where it was paused.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":9282,"byte_end":9321,"line_start":180,"line_end":180,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":9457,"byte_end":9462,"line_start":186,"line_end":186,"column_start":12,"column_end":17},"name":"state","qualname":"<SoundInstance>::state","value":"pub fn state(&Self) -> SoundState","parent":null,"children":[],"decl_id":null,"docs":" Returns the current state of playback.\n","sig":null,"attributes":[{"value":"/ Returns the current state of playback.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":9403,"byte_end":9445,"line_start":185,"line_end":185,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":9803,"byte_end":9812,"line_start":195,"line_end":195,"column_start":12,"column_end":21},"name":"set_state","qualname":"<SoundInstance>::set_state","value":"pub fn set_state(&Self, SoundState)","parent":null,"children":[],"decl_id":null,"docs":" Sets the current state of playback.","sig":null,"attributes":[{"value":"/ Sets the current state of playback.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":9527,"byte_end":9566,"line_start":190,"line_end":190,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":9571,"byte_end":9574,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ In most cases, using the `play`, `stop` and `pause` methods is easier than explicitly","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":9579,"byte_end":9668,"line_start":192,"line_end":192,"column_start":5,"column_end":94}},{"value":"/ setting a state, but this may be useful when, for example, defining transitions from","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":9673,"byte_end":9761,"line_start":193,"line_end":193,"column_start":5,"column_end":93}},{"value":"/ one state to another.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":9766,"byte_end":9791,"line_start":194,"line_end":194,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":10087,"byte_end":10097,"line_start":203,"line_end":203,"column_start":12,"column_end":22},"name":"set_volume","qualname":"<SoundInstance>::set_volume","value":"pub fn set_volume(&Self, f32)","parent":null,"children":[],"decl_id":null,"docs":" Sets the volume of the sound.","sig":null,"attributes":[{"value":"/ Sets the volume of the sound.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":9891,"byte_end":9924,"line_start":199,"line_end":199,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":9929,"byte_end":9932,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ The parameter is used as a multiplier - for example, `1.0` would result in the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":9937,"byte_end":10019,"line_start":201,"line_end":201,"column_start":5,"column_end":87}},{"value":"/ sound being played back at its original volume.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":10024,"byte_end":10075,"line_start":202,"line_end":202,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":10397,"byte_end":10406,"line_start":211,"line_end":211,"column_start":12,"column_end":21},"name":"set_speed","qualname":"<SoundInstance>::set_speed","value":"pub fn set_speed(&Self, f32)","parent":null,"children":[],"decl_id":null,"docs":" Sets the speed (and by extension, the pitch) of the sound.","sig":null,"attributes":[{"value":"/ Sets the speed (and by extension, the pitch) of the sound.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":10173,"byte_end":10235,"line_start":207,"line_end":207,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":10240,"byte_end":10243,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ The parameter is used as a multiplier - for example, `1.0` would result in the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":10248,"byte_end":10330,"line_start":209,"line_end":209,"column_start":5,"column_end":87}},{"value":"/ sound being played back at its original speed.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":10335,"byte_end":10385,"line_start":210,"line_end":210,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":10539,"byte_end":10552,"line_start":216,"line_end":216,"column_start":12,"column_end":25},"name":"set_repeating","qualname":"<SoundInstance>::set_repeating","value":"pub fn set_repeating(&Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets whether the sound should repeat or not.\n","sig":null,"attributes":[{"value":"/ Sets whether the sound should repeat or not.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":10479,"byte_end":10527,"line_start":215,"line_end":215,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":10701,"byte_end":10717,"line_start":221,"line_end":221,"column_start":12,"column_end":28},"name":"toggle_repeating","qualname":"<SoundInstance>::toggle_repeating","value":"pub fn toggle_repeating(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Toggles whether the sound should repeat or not.\n","sig":null,"attributes":[{"value":"/ Toggles whether the sound should repeat or not.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":10638,"byte_end":10689,"line_start":220,"line_end":220,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1182},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":11149,"byte_end":11156,"line_start":234,"line_end":234,"column_start":5,"column_end":12},"name":"Playing","qualname":"::audio::SoundState::Playing","value":"SoundState::Playing","parent":{"krate":0,"index":1181},"children":[],"decl_id":null,"docs":" The sound is currently playing.","sig":null,"attributes":[{"value":"/ The sound is currently playing.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":10929,"byte_end":10964,"line_start":229,"line_end":229,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":10969,"byte_end":10972,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ If a `SoundInstance` is created via `Sound::play`, `Sound::play_with`,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":10977,"byte_end":11051,"line_start":231,"line_end":231,"column_start":5,"column_end":79}},{"value":"/ `Sound::repeat` or `Sound::repeat_with`, it will be in this state","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":11056,"byte_end":11125,"line_start":232,"line_end":232,"column_start":5,"column_end":74}},{"value":"/ initially.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":11130,"byte_end":11144,"line_start":233,"line_end":233,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1184},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":11412,"byte_end":11418,"line_start":241,"line_end":241,"column_start":5,"column_end":11},"name":"Paused","qualname":"::audio::SoundState::Paused","value":"SoundState::Paused","parent":{"krate":0,"index":1181},"children":[],"decl_id":null,"docs":" The sound is paused. If playback is resumed, it will continue\n from the point where it was paused.","sig":null,"attributes":[{"value":"/ The sound is paused. If playback is resumed, it will continue","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":11163,"byte_end":11228,"line_start":236,"line_end":236,"column_start":5,"column_end":70}},{"value":"/ from the point where it was paused.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":11233,"byte_end":11272,"line_start":237,"line_end":237,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":11277,"byte_end":11280,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ If a `SoundInstance` is created via `Sound::spawn` or `Sound::spawn_with`,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":11285,"byte_end":11363,"line_start":239,"line_end":239,"column_start":5,"column_end":83}},{"value":"/ it will be in this state initially.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":11368,"byte_end":11407,"line_start":240,"line_end":240,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1186},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":11723,"byte_end":11730,"line_start":249,"line_end":249,"column_start":5,"column_end":12},"name":"Stopped","qualname":"::audio::SoundState::Stopped","value":"SoundState::Stopped","parent":{"krate":0,"index":1181},"children":[],"decl_id":null,"docs":" The sound has stopped, either manually or as a result of it reaching\n the end of the audio data. If playback is resumed, it will start\n over from the beginning of the sound.","sig":null,"attributes":[{"value":"/ The sound has stopped, either manually or as a result of it reaching","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":11425,"byte_end":11497,"line_start":243,"line_end":243,"column_start":5,"column_end":77}},{"value":"/ the end of the audio data. If playback is resumed, it will start","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":11502,"byte_end":11570,"line_start":244,"line_end":244,"column_start":5,"column_end":73}},{"value":"/ over from the beginning of the sound.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":11575,"byte_end":11616,"line_start":245,"line_end":245,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":11621,"byte_end":11624,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ This state will never occur while a `SoundInstance` is set","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":11629,"byte_end":11691,"line_start":247,"line_end":247,"column_start":5,"column_end":67}},{"value":"/ to be `repeating`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":11696,"byte_end":11718,"line_start":248,"line_end":248,"column_start":5,"column_end":27}}]},{"kind":"Enum","id":{"krate":0,"index":1181},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":10912,"byte_end":10922,"line_start":228,"line_end":228,"column_start":10,"column_end":20},"name":"SoundState","qualname":"::audio::SoundState","value":"pub enum SoundState {\n\n    /// The sound is currently playing.\n    ///\n    /// If a `SoundInstance` is created via `Sound::play`, `Sound::play_with`,\n    /// `Sound::repeat` or `Sound::repeat_with`, it will be in this state\n    /// initially.\n    Playing,\n\n    /// The sound is paused. If playback is resumed, it will continue\n    /// from the point where it was paused.\n    ///\n    /// If a `SoundInstance` is created via `Sound::spawn` or `Sound::spawn_with`,\n    /// it will be in this state initially.\n    Paused,\n\n    /// The sound has stopped, either manually or as a result of it reaching\n    /// the end of the audio data. If playback is resumed, it will start\n    /// over from the beginning of the sound.\n    ///\n    /// This state will never occur while a `SoundInstance` is set\n    /// to be `repeating`.\n    Stopped,\n}","parent":null,"children":[{"krate":0,"index":1182},{"krate":0,"index":1184},{"krate":0,"index":1186}],"decl_id":null,"docs":" The states that playback of a `SoundInstance` can be in.\n","sig":null,"attributes":[{"value":"/ The states that playback of a `SoundInstance` can be in.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":10801,"byte_end":10861,"line_start":226,"line_end":226,"column_start":1,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":53},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":11921,"byte_end":11938,"line_start":256,"line_end":256,"column_start":8,"column_end":25},"name":"set_master_volume","qualname":"::audio::set_master_volume","value":"pub fn set_master_volume(&mut Context, f32)","parent":null,"children":[],"decl_id":null,"docs":" Sets the master volume for the game.","sig":null,"attributes":[{"value":"/ Sets the master volume for the game.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":11735,"byte_end":11775,"line_start":252,"line_end":252,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":11776,"byte_end":11779,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ The parameter is used as a multiplier - for example, `1.0` would result in","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":11780,"byte_end":11858,"line_start":254,"line_end":254,"column_start":1,"column_end":79}},{"value":"/ sounds being played back at their original volume.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":11859,"byte_end":11913,"line_start":255,"line_end":255,"column_start":1,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":54},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":12065,"byte_end":12082,"line_start":261,"line_end":261,"column_start":8,"column_end":25},"name":"get_master_volume","qualname":"::audio::get_master_volume","value":"pub fn get_master_volume(&mut Context) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Gets the master volume for the game.\n","sig":null,"attributes":[{"value":"/ Gets the master volume for the game.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":12017,"byte_end":12057,"line_start":260,"line_end":260,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":117},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":20193,"byte_end":20200,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"Context","qualname":"::context::Context","value":"Context {  }","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125}],"decl_id":null,"docs":" A struct containing all of the 'global' state within the framework.\n","sig":null,"attributes":[{"value":"/ A struct containing all of the 'global' state within the framework.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":20110,"byte_end":20181,"line_start":12,"line_end":12,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":23098,"byte_end":23101,"line_start":101,"line_end":101,"column_start":12,"column_end":15},"name":"run","qualname":"<Context>::run","value":"pub fn run<S, F, E>(&mut Self, F) -> result::Result<(), E> where S: State<E>,\nF: FnOnce(&mut Context) -> result::Result<S, E>, E: From<TetraError>","parent":null,"children":[],"decl_id":null,"docs":" Runs the game.","sig":null,"attributes":[{"value":"/ Runs the game.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":21717,"byte_end":21735,"line_start":61,"line_end":61,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":21740,"byte_end":21743,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ The `init` parameter takes a function or closure that creates a","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":21748,"byte_end":21815,"line_start":63,"line_end":63,"column_start":5,"column_end":72}},{"value":"/ `State` implementation. A common pattern is to use method references","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":21820,"byte_end":21892,"line_start":64,"line_end":64,"column_start":5,"column_end":77}},{"value":"/ to pass in your state's constructor directly - see the example below","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":21897,"byte_end":21969,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/ for how this works.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":21974,"byte_end":21997,"line_start":66,"line_end":66,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":22002,"byte_end":22005,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ The error type returned by your `init` closure currently must match the error","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":22010,"byte_end":22091,"line_start":68,"line_end":68,"column_start":5,"column_end":86}},{"value":"/ type returned by your `State` methods. This limitation may be lifted","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":22096,"byte_end":22168,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ in the future.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":22173,"byte_end":22191,"line_start":70,"line_end":70,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":22196,"byte_end":22199,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":22204,"byte_end":22216,"line_start":72,"line_end":72,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":22221,"byte_end":22224,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ If the `State` returns an error from `update`, `draw` or `event`, the game","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":22229,"byte_end":22307,"line_start":74,"line_end":74,"column_start":5,"column_end":83}},{"value":"/ will stop running and this method will return the error.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":22312,"byte_end":22372,"line_start":75,"line_end":75,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":22377,"byte_end":22380,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":22385,"byte_end":22399,"line_start":77,"line_end":77,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":22404,"byte_end":22407,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":22412,"byte_end":22425,"line_start":79,"line_end":79,"column_start":5,"column_end":18}},{"value":"/ use tetra::{Context, ContextBuilder, State};","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":22430,"byte_end":22478,"line_start":80,"line_end":80,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":22483,"byte_end":22486,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ struct GameState;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":22491,"byte_end":22512,"line_start":82,"line_end":82,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":22517,"byte_end":22520,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ impl GameState {","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":22525,"byte_end":22545,"line_start":84,"line_end":84,"column_start":5,"column_end":25}},{"value":"/     fn new(ctx: &mut Context) -> tetra::Result<GameState> {","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":22550,"byte_end":22613,"line_start":85,"line_end":85,"column_start":5,"column_end":68}},{"value":"/         Ok(GameState)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":22618,"byte_end":22643,"line_start":86,"line_end":86,"column_start":5,"column_end":30}},{"value":"/     }","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":22648,"byte_end":22657,"line_start":87,"line_end":87,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":22662,"byte_end":22667,"line_start":88,"line_end":88,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":22672,"byte_end":22675,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ impl State for GameState { }","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":22680,"byte_end":22712,"line_start":90,"line_end":90,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":22717,"byte_end":22720,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ fn main() -> tetra::Result {","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":22725,"byte_end":22757,"line_start":92,"line_end":92,"column_start":5,"column_end":37}},{"value":"/     // Because GameState::new takes `&mut Context` and returns a `State` implementation","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":22762,"byte_end":22853,"line_start":93,"line_end":93,"column_start":5,"column_end":96}},{"value":"/     // wrapped in a `Result`, you can use it without a closure wrapper:","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":22858,"byte_end":22933,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/     ContextBuilder::new(\"Hello, world!\", 1280, 720)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":22938,"byte_end":22993,"line_start":95,"line_end":95,"column_start":5,"column_end":60}},{"value":"/         .build()?","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":22998,"byte_end":23019,"line_start":96,"line_end":96,"column_start":5,"column_end":26}},{"value":"/         .run(GameState::new)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":23024,"byte_end":23056,"line_start":97,"line_end":97,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":23061,"byte_end":23066,"line_start":98,"line_end":98,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":23071,"byte_end":23078,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":23083,"byte_end":23086,"line_start":100,"line_end":100,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1204},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":25059,"byte_end":25073,"line_start":177,"line_end":177,"column_start":12,"column_end":26},"name":"ContextBuilder","qualname":"::context::ContextBuilder","value":"ContextBuilder {  }","parent":null,"children":[{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":1208},{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213},{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1218},{"krate":0,"index":1219}],"decl_id":null,"docs":" Settings that can be configured when starting up a game.","sig":null,"attributes":[{"value":"/ Settings that can be configured when starting up a game.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":24408,"byte_end":24468,"line_start":160,"line_end":160,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":24469,"byte_end":24472,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ # Serde","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":24473,"byte_end":24484,"line_start":162,"line_end":162,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":24485,"byte_end":24488,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ Serialization and deserialization of this type (via [Serde](https://serde.rs/))","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":24489,"byte_end":24572,"line_start":164,"line_end":164,"column_start":1,"column_end":84}},{"value":"/ can be enabled via the `serde_support` feature.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":24573,"byte_end":24624,"line_start":165,"line_end":165,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":24625,"byte_end":24628,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ Note that the available settings could change between releases of","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":24629,"byte_end":24698,"line_start":167,"line_end":167,"column_start":1,"column_end":70}},{"value":"/ Tetra (semver permitting). If you need a config file schema that will","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":24699,"byte_end":24772,"line_start":168,"line_end":168,"column_start":1,"column_end":74}},{"value":"/ be stable in the long term, consider making your own and then mapping","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":24773,"byte_end":24846,"line_start":169,"line_end":169,"column_start":1,"column_end":74}},{"value":"/ it to Tetra's API, rather than relying on `ContextBuilder` to not","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":24847,"byte_end":24916,"line_start":170,"line_end":170,"column_start":1,"column_end":70}},{"value":"/ change.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":24917,"byte_end":24928,"line_start":171,"line_end":171,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":25683,"byte_end":25686,"line_start":197,"line_end":197,"column_start":12,"column_end":15},"name":"new","qualname":"<ContextBuilder>::new","value":"pub fn new<S>(S, i32, i32) -> ContextBuilder where S: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ContextBuilder`, with a title and window size.\n","sig":null,"attributes":[{"value":"/ Create a new `ContextBuilder`, with a title and window size.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":25607,"byte_end":25671,"line_start":196,"line_end":196,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":26055,"byte_end":26060,"line_start":213,"line_end":213,"column_start":12,"column_end":17},"name":"title","qualname":"<ContextBuilder>::title","value":"pub fn title<S>(&mut Self, S) -> &mut ContextBuilder where S: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Sets the title of the window.","sig":null,"attributes":[{"value":"/ Sets the title of the window.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":25971,"byte_end":26004,"line_start":210,"line_end":210,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":26009,"byte_end":26012,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ Defaults to `\"Tetra\"`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":26017,"byte_end":26043,"line_start":212,"line_end":212,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":26297,"byte_end":26301,"line_start":224,"line_end":224,"column_start":12,"column_end":16},"name":"size","qualname":"<ContextBuilder>::size","value":"pub fn size(&mut Self, i32, i32) -> &mut ContextBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the window.","sig":null,"attributes":[{"value":"/ Sets the size of the window.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":26208,"byte_end":26240,"line_start":221,"line_end":221,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":26245,"byte_end":26248,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Defaults to `1280` by `720`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":26253,"byte_end":26285,"line_start":223,"line_end":223,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":26537,"byte_end":26542,"line_start":233,"line_end":233,"column_start":12,"column_end":17},"name":"vsync","qualname":"<ContextBuilder>::vsync","value":"pub fn vsync(&mut Self, bool) -> &mut ContextBuilder","parent":null,"children":[],"decl_id":null,"docs":" Enables or disables vsync.","sig":null,"attributes":[{"value":"/ Enables or disables vsync.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":26459,"byte_end":26489,"line_start":230,"line_end":230,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":26494,"byte_end":26497,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ Defaults to `true`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":26502,"byte_end":26525,"line_start":232,"line_end":232,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":26738,"byte_end":26746,"line_start":241,"line_end":241,"column_start":12,"column_end":20},"name":"timestep","qualname":"<ContextBuilder>::timestep","value":"pub fn timestep(&mut Self, Timestep) -> &mut ContextBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the game's timestep.","sig":null,"attributes":[{"value":"/ Sets the game's timestep.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":26644,"byte_end":26673,"line_start":238,"line_end":238,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":26678,"byte_end":26681,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ Defaults to `Timestep::Fixed(60.0)`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":26686,"byte_end":26726,"line_start":240,"line_end":240,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":26972,"byte_end":26982,"line_start":249,"line_end":249,"column_start":12,"column_end":22},"name":"fullscreen","qualname":"<ContextBuilder>::fullscreen","value":"pub fn fullscreen(&mut Self, bool) -> &mut ContextBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not the window should start in fullscreen.","sig":null,"attributes":[{"value":"/ Sets whether or not the window should start in fullscreen.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":26861,"byte_end":26923,"line_start":246,"line_end":246,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":26928,"byte_end":26931,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ Defaults to `false`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":26936,"byte_end":26960,"line_start":248,"line_end":248,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":27206,"byte_end":27215,"line_start":257,"line_end":257,"column_start":12,"column_end":21},"name":"maximized","qualname":"<ContextBuilder>::maximized","value":"pub fn maximized(&mut Self, bool) -> &mut ContextBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not the window should start maximized.","sig":null,"attributes":[{"value":"/ Sets whether or not the window should start maximized.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":27099,"byte_end":27157,"line_start":254,"line_end":254,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":27162,"byte_end":27165,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ Defaults to `false`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":27170,"byte_end":27194,"line_start":256,"line_end":256,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":27436,"byte_end":27445,"line_start":265,"line_end":265,"column_start":12,"column_end":21},"name":"minimized","qualname":"<ContextBuilder>::minimized","value":"pub fn minimized(&mut Self, bool) -> &mut ContextBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not the window should start minimized.","sig":null,"attributes":[{"value":"/ Sets whether or not the window should start minimized.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":27329,"byte_end":27387,"line_start":262,"line_end":262,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":27392,"byte_end":27395,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ Defaults to `false`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":27400,"byte_end":27424,"line_start":264,"line_end":264,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":27663,"byte_end":27672,"line_start":273,"line_end":273,"column_start":12,"column_end":21},"name":"resizable","qualname":"<ContextBuilder>::resizable","value":"pub fn resizable(&mut Self, bool) -> &mut ContextBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not the window should be resizable.","sig":null,"attributes":[{"value":"/ Sets whether or not the window should be resizable.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":27559,"byte_end":27614,"line_start":270,"line_end":270,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":27619,"byte_end":27622,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ Defaults to `false`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":27627,"byte_end":27651,"line_start":272,"line_end":272,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":27891,"byte_end":27901,"line_start":281,"line_end":281,"column_start":12,"column_end":22},"name":"borderless","qualname":"<ContextBuilder>::borderless","value":"pub fn borderless(&mut Self, bool) -> &mut ContextBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not the window should be borderless.","sig":null,"attributes":[{"value":"/ Sets whether or not the window should be borderless.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":27786,"byte_end":27842,"line_start":278,"line_end":278,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":27847,"byte_end":27850,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ Defaults to `false`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":27855,"byte_end":27879,"line_start":280,"line_end":280,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":28168,"byte_end":28178,"line_start":290,"line_end":290,"column_start":12,"column_end":22},"name":"show_mouse","qualname":"<ContextBuilder>::show_mouse","value":"pub fn show_mouse(&mut Self, bool) -> &mut ContextBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not the mouse cursor should be visible when it is within the\n game window.","sig":null,"attributes":[{"value":"/ Sets whether or not the mouse cursor should be visible when it is within the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":28018,"byte_end":28098,"line_start":286,"line_end":286,"column_start":5,"column_end":85}},{"value":"/ game window.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":28103,"byte_end":28119,"line_start":287,"line_end":287,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":28124,"byte_end":28127,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ Defaults to `false`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":28132,"byte_end":28156,"line_start":289,"line_end":289,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":28441,"byte_end":28451,"line_start":299,"line_end":299,"column_start":12,"column_end":22},"name":"grab_mouse","qualname":"<ContextBuilder>::grab_mouse","value":"pub fn grab_mouse(&mut Self, bool) -> &mut ContextBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not the mouse cursor should be grabbed by the game window\n at startup.","sig":null,"attributes":[{"value":"/ Sets whether or not the mouse cursor should be grabbed by the game window","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":28295,"byte_end":28372,"line_start":295,"line_end":295,"column_start":5,"column_end":82}},{"value":"/ at startup.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":28377,"byte_end":28392,"line_start":296,"line_end":296,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":28397,"byte_end":28400,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ Defaults to `false`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":28405,"byte_end":28429,"line_start":298,"line_end":298,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":29282,"byte_end":29301,"line_start":316,"line_end":316,"column_start":12,"column_end":31},"name":"relative_mouse_mode","qualname":"<ContextBuilder>::relative_mouse_mode","value":"pub fn relative_mouse_mode(&mut Self, bool) -> &mut ContextBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not relative mouse mode should be enabled.","sig":null,"attributes":[{"value":"/ Sets whether or not relative mouse mode should be enabled.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":28568,"byte_end":28630,"line_start":304,"line_end":304,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":28635,"byte_end":28638,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ While the mouse is in relative mode, the cursor is hidden and can move beyond the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":28643,"byte_end":28728,"line_start":306,"line_end":306,"column_start":5,"column_end":90}},{"value":"/ bounds of the window. The [`delta` field of `Event::MouseMoved`](./enum.Event.html#variant.MouseMoved.field.delta)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":28733,"byte_end":28851,"line_start":307,"line_end":307,"column_start":5,"column_end":123}},{"value":"/ can then be used to track the cursor's changes in position. This is useful when","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":28856,"byte_end":28939,"line_start":308,"line_end":308,"column_start":5,"column_end":88}},{"value":"/ implementing control schemes that require the mouse to be able to move infinitely","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":28944,"byte_end":29029,"line_start":309,"line_end":309,"column_start":5,"column_end":90}},{"value":"/ in any direction (for example, FPS-style movement).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":29034,"byte_end":29089,"line_start":310,"line_end":310,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":29094,"byte_end":29097,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ While this mode is enabled, the absolute position of the mouse may not be updated -","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":29102,"byte_end":29189,"line_start":312,"line_end":312,"column_start":5,"column_end":92}},{"value":"/ as such, you should not rely on it.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":29194,"byte_end":29233,"line_start":313,"line_end":313,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":29238,"byte_end":29241,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ Defaults to `false`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":29246,"byte_end":29270,"line_start":315,"line_end":315,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":29571,"byte_end":29585,"line_start":324,"line_end":324,"column_start":12,"column_end":26},"name":"quit_on_escape","qualname":"<ContextBuilder>::quit_on_escape","value":"pub fn quit_on_escape(&mut Self, bool) -> &mut ContextBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not the game should close when the Escape key is pressed.","sig":null,"attributes":[{"value":"/ Sets whether or not the game should close when the Escape key is pressed.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":29445,"byte_end":29522,"line_start":321,"line_end":321,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":29527,"byte_end":29530,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Defaults to `false`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":29535,"byte_end":29559,"line_start":323,"line_end":323,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":29861,"byte_end":29871,"line_start":331,"line_end":331,"column_start":12,"column_end":22},"name":"debug_info","qualname":"<ContextBuilder>::debug_info","value":"pub fn debug_info(&mut Self, bool) -> &mut ContextBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not the game should print out debug info at startup.\n Please include this if you're submitting a bug report!\n","sig":null,"attributes":[{"value":"/ Sets whether or not the game should print out debug info at startup.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":29714,"byte_end":29786,"line_start":329,"line_end":329,"column_start":5,"column_end":77}},{"value":"/ Please include this if you're submitting a bug report!","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":29791,"byte_end":29849,"line_start":330,"line_end":330,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":30149,"byte_end":30154,"line_start":341,"line_end":341,"column_start":12,"column_end":17},"name":"build","qualname":"<ContextBuilder>::build","value":"pub fn build(&Self) -> Result<Context>","parent":null,"children":[],"decl_id":null,"docs":" Builds the context.","sig":null,"attributes":[{"value":"/ Builds the context.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":29988,"byte_end":30011,"line_start":336,"line_end":336,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":30016,"byte_end":30019,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":30024,"byte_end":30036,"line_start":338,"line_end":338,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":30041,"byte_end":30044,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ * `TetraError::PlatformError` will be returned if the context cannot be initialized.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":30049,"byte_end":30137,"line_start":340,"line_end":340,"column_start":5,"column_end":93}}]},{"kind":"Mod","id":{"krate":0,"index":156},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":1224},{"krate":0,"index":1252},{"krate":0,"index":169},{"krate":0,"index":171}],"decl_id":null,"docs":" Functions and types relating to error handling.\n","sig":null,"attributes":[{"value":"/ Functions and types relating to error handling.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","byte_start":31189,"byte_end":31240,"line_start":1,"line_end":1,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":167},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","byte_start":31677,"byte_end":31683,"line_start":18,"line_end":18,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"result::Result<T, TetraError>","parent":null,"children":[],"decl_id":null,"docs":" A specialized `Result` type for Tetra.","sig":null,"attributes":[{"value":"/ A specialized `Result` type for Tetra.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","byte_start":31447,"byte_end":31489,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","byte_start":31490,"byte_end":31493,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ All Tetra functions with a recoverable failure condition will return this type.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","byte_start":31494,"byte_end":31577,"line_start":16,"line_end":16,"column_start":1,"column_end":84}},{"value":"/ In your game code, you can either use it directly, or wrap it in your own error type.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","byte_start":31578,"byte_end":31667,"line_start":17,"line_end":17,"column_start":1,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1225},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","byte_start":32008,"byte_end":32021,"line_start":26,"line_end":26,"column_start":5,"column_end":18},"name":"PlatformError","qualname":"::error::TetraError::PlatformError","value":"TetraError::PlatformError(String)","parent":{"krate":0,"index":1224},"children":[],"decl_id":null,"docs":" Returned when the underlying platform returns an unexpected error.\n This usually isn't something your game can reasonably be expected to recover from.\n","sig":null,"attributes":[{"value":"/ Returned when the underlying platform returns an unexpected error.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","byte_start":31842,"byte_end":31912,"line_start":24,"line_end":24,"column_start":5,"column_end":75}},{"value":"/ This usually isn't something your game can reasonably be expected to recover from.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","byte_start":31917,"byte_end":32003,"line_start":25,"line_end":25,"column_start":5,"column_end":91}}]},{"kind":"StructVariant","id":{"krate":0,"index":1228},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","byte_start":32185,"byte_end":32202,"line_start":30,"line_end":30,"column_start":5,"column_end":22},"name":"FailedToLoadAsset","qualname":"::error::TetraError::FailedToLoadAsset","value":"TetraError::FailedToLoadAsset { reason, path }","parent":{"krate":0,"index":1224},"children":[],"decl_id":null,"docs":" Returned when your game fails to load an asset. This is usually caused by an\n incorrect file path, or some form of permission issues.\n","sig":null,"attributes":[{"value":"/ Returned when your game fails to load an asset. This is usually caused by an","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","byte_start":32036,"byte_end":32116,"line_start":28,"line_end":28,"column_start":5,"column_end":85}},{"value":"/ incorrect file path, or some form of permission issues.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","byte_start":32121,"byte_end":32180,"line_start":29,"line_end":29,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1231},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","byte_start":32414,"byte_end":32426,"line_start":39,"line_end":39,"column_start":5,"column_end":17},"name":"InvalidColor","qualname":"::error::TetraError::InvalidColor","value":"TetraError::InvalidColor","parent":{"krate":0,"index":1224},"children":[],"decl_id":null,"docs":" Returned when a color is invalid.\n","sig":null,"attributes":[{"value":"/ Returned when a color is invalid.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","byte_start":32372,"byte_end":32409,"line_start":38,"line_end":38,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1233},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","byte_start":32484,"byte_end":32498,"line_start":42,"line_end":42,"column_start":5,"column_end":19},"name":"InvalidTexture","qualname":"::error::TetraError::InvalidTexture","value":"TetraError::InvalidTexture(ImageError)","parent":{"krate":0,"index":1224},"children":[],"decl_id":null,"docs":" Returned when a texture's data is invalid.\n","sig":null,"attributes":[{"value":"/ Returned when a texture's data is invalid.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","byte_start":32433,"byte_end":32479,"line_start":41,"line_end":41,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1236},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","byte_start":32566,"byte_end":32579,"line_start":45,"line_end":45,"column_start":5,"column_end":18},"name":"InvalidShader","qualname":"::error::TetraError::InvalidShader","value":"TetraError::InvalidShader(String)","parent":{"krate":0,"index":1224},"children":[],"decl_id":null,"docs":" Returned when a shader fails to compile.\n","sig":null,"attributes":[{"value":"/ Returned when a shader fails to compile.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","byte_start":32517,"byte_end":32561,"line_start":44,"line_end":44,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1239},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","byte_start":32642,"byte_end":32653,"line_start":48,"line_end":48,"column_start":5,"column_end":16},"name":"InvalidFont","qualname":"::error::TetraError::InvalidFont","value":"TetraError::InvalidFont","parent":{"krate":0,"index":1224},"children":[],"decl_id":null,"docs":" Returned when a font could not be read.\n","sig":null,"attributes":[{"value":"/ Returned when a font could not be read.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","byte_start":32594,"byte_end":32637,"line_start":47,"line_end":47,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1241},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","byte_start":32739,"byte_end":32751,"line_start":52,"line_end":52,"column_start":5,"column_end":17},"name":"InvalidSound","qualname":"::error::TetraError::InvalidSound","value":"TetraError::InvalidSound(DecoderError)","parent":{"krate":0,"index":1224},"children":[],"decl_id":null,"docs":" Returned when a sound cannot be decoded.\n","sig":null,"attributes":[{"value":"/ Returned when a sound cannot be decoded.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","byte_start":32660,"byte_end":32704,"line_start":50,"line_end":50,"column_start":5,"column_end":49}},{"value":"cfg(feature = \"audio\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","byte_start":32709,"byte_end":32734,"line_start":51,"line_end":51,"column_start":5,"column_end":30}}]},{"kind":"StructVariant","id":{"krate":0,"index":1244},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","byte_start":32950,"byte_end":32963,"line_start":57,"line_end":57,"column_start":5,"column_end":18},"name":"NotEnoughData","qualname":"::error::TetraError::NotEnoughData","value":"TetraError::NotEnoughData { expected, actual }","parent":{"krate":0,"index":1224},"children":[],"decl_id":null,"docs":" Returned when not enough data is provided to fill a buffer.\n This may happen if you're creating a texture from raw data and you don't provide\n enough data.\n","sig":null,"attributes":[{"value":"/ Returned when not enough data is provided to fill a buffer.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","byte_start":32772,"byte_end":32835,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"/ This may happen if you're creating a texture from raw data and you don't provide","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","byte_start":32840,"byte_end":32924,"line_start":55,"line_end":55,"column_start":5,"column_end":89}},{"value":"/ enough data.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","byte_start":32929,"byte_end":32945,"line_start":56,"line_end":56,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1247},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","byte_start":33208,"byte_end":33221,"line_start":66,"line_end":66,"column_start":5,"column_end":18},"name":"NoAudioDevice","qualname":"::error::TetraError::NoAudioDevice","value":"TetraError::NoAudioDevice","parent":{"krate":0,"index":1224},"children":[],"decl_id":null,"docs":" Returned when trying to play back audio without an available device.\n","sig":null,"attributes":[{"value":"/ Returned when trying to play back audio without an available device.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","byte_start":33131,"byte_end":33203,"line_start":65,"line_end":65,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1249},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","byte_start":33355,"byte_end":33380,"line_start":70,"line_end":70,"column_start":5,"column_end":30},"name":"FailedToChangeDisplayMode","qualname":"::error::TetraError::FailedToChangeDisplayMode","value":"TetraError::FailedToChangeDisplayMode(String)","parent":{"krate":0,"index":1224},"children":[],"decl_id":null,"docs":" Returned when your game tried to change the display settings (e.g. fullscreen, vsync)\n but was unable to do so.\n","sig":null,"attributes":[{"value":"/ Returned when your game tried to change the display settings (e.g. fullscreen, vsync)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","byte_start":33228,"byte_end":33317,"line_start":68,"line_end":68,"column_start":5,"column_end":94}},{"value":"/ but was unable to do so.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","byte_start":33322,"byte_end":33350,"line_start":69,"line_end":69,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":1224},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","byte_start":31825,"byte_end":31835,"line_start":23,"line_end":23,"column_start":10,"column_end":20},"name":"TetraError","qualname":"::error::TetraError","value":"pub enum TetraError {\n\n    /// Returned when the underlying platform returns an unexpected error.\n    /// This usually isn't something your game can reasonably be expected to recover from.\n    PlatformError(String),\n\n    /// Returned when your game fails to load an asset. This is usually caused by an\n    /// incorrect file path, or some form of permission issues.\n    FailedToLoadAsset {\n        /// The underlying reason for the error.\n        reason: io::Error,\n        /// The path to the asset that failed to load.\n        path: PathBuf,\n    },\n\n    /// Returned when a color is invalid.\n    InvalidColor,\n\n    /// Returned when a texture's data is invalid.\n    InvalidTexture(ImageError),\n\n    /// Returned when a shader fails to compile.\n    InvalidShader(String),\n\n    /// Returned when a font could not be read.\n    InvalidFont,\n\n    /// Returned when a sound cannot be decoded.\n    #[cfg(feature = \"audio\")]\n    InvalidSound(DecoderError),\n\n    /// Returned when not enough data is provided to fill a buffer.\n    /// This may happen if you're creating a texture from raw data and you don't provide\n    /// enough data.\n    NotEnoughData {\n        /// The number of bytes that were expected.\n        expected: usize,\n        /// The number of bytes that were provided.\n        actual: usize,\n    },\n\n    /// Returned when trying to play back audio without an available device.\n    NoAudioDevice,\n\n    /// Returned when your game tried to change the display settings (e.g. fullscreen, vsync)\n    /// but was unable to do so.\n    FailedToChangeDisplayMode(String),\n}","parent":null,"children":[{"krate":0,"index":1225},{"krate":0,"index":1228},{"krate":0,"index":1231},{"krate":0,"index":1233},{"krate":0,"index":1236},{"krate":0,"index":1239},{"krate":0,"index":1241},{"krate":0,"index":1244},{"krate":0,"index":1247},{"krate":0,"index":1249}],"decl_id":null,"docs":" The types of error that can occur in a Tetra game.\n","sig":null,"attributes":[{"value":"/ The types of error that can occur in a Tetra game.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","byte_start":31726,"byte_end":31780,"line_start":20,"line_end":20,"column_start":1,"column_end":55}},{"value":"non_exhaustive","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","byte_start":31781,"byte_end":31798,"line_start":21,"line_end":21,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":192},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"graphics","qualname":"::graphics","value":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":223},{"krate":0,"index":244},{"krate":0,"index":270},{"krate":0,"index":325},{"krate":0,"index":346},{"krate":0,"index":372},{"krate":0,"index":402},{"krate":0,"index":456},{"krate":0,"index":605},{"krate":0,"index":640},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":1511},{"krate":0,"index":1517},{"krate":0,"index":1518},{"krate":0,"index":1521},{"krate":0,"index":1527},{"krate":0,"index":1528},{"krate":0,"index":1531},{"krate":0,"index":1537},{"krate":0,"index":1538},{"krate":0,"index":688},{"krate":0,"index":701},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":1541},{"krate":0,"index":1548},{"krate":0,"index":1546},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726}],"decl_id":null,"docs":" Functions and types relating to rendering.","sig":null,"attributes":[{"value":"/ Functions and types relating to rendering.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":36681,"byte_end":36727,"line_start":1,"line_end":1,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":36728,"byte_end":36731,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module implements a (hopefully!) efficent quad renderer, which will queue up","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":36732,"byte_end":36817,"line_start":3,"line_end":3,"column_start":1,"column_end":86}},{"value":"/ drawing operations until it is absolutely necessary to send them to the graphics","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":36818,"byte_end":36902,"line_start":4,"line_end":4,"column_start":1,"column_end":85}},{"value":"/ hardware. This allows us to minimize the number of draw calls made, speeding up","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":36903,"byte_end":36986,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"/ rendering.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":36987,"byte_end":37001,"line_start":6,"line_end":6,"column_start":1,"column_end":15}}]},{"kind":"Mod","id":{"krate":0,"index":193},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"animation","qualname":"::graphics::animation","value":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","parent":null,"children":[{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":1254},{"krate":0,"index":1263},{"krate":0,"index":1261},{"krate":0,"index":202},{"krate":0,"index":220}],"decl_id":null,"docs":" Functions and types relating to animations.\n","sig":null,"attributes":[{"value":"/ Functions and types relating to animations.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":51549,"byte_end":51596,"line_start":1,"line_end":1,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":1254},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":52503,"byte_end":52512,"line_start":25,"line_end":25,"column_start":12,"column_end":21},"name":"Animation","qualname":"::graphics::animation::Animation","value":"Animation {  }","parent":null,"children":[{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1260}],"decl_id":null,"docs":" An animation, cycling between regions of a texture at a regular interval.","sig":null,"attributes":[{"value":"/ An animation, cycling between regions of a texture at a regular interval.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":51757,"byte_end":51834,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":51835,"byte_end":51838,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Calling [`advance`](#method.advance) or [`advance_by`](#method.advance_by)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":51839,"byte_end":51917,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ within your `State`'s `draw` method will drive the animation, switching","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":51918,"byte_end":51993,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ the texture region once the specified time has passed.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":51994,"byte_end":52052,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":52053,"byte_end":52056,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":52057,"byte_end":52071,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":52072,"byte_end":52075,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The [`animation`](https://github.com/17cupsofcoffee/tetra/blob/main/examples/animation.rs)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":52076,"byte_end":52170,"line_start":18,"line_end":18,"column_start":1,"column_end":95}},{"value":"/ example demonstrates basic usage of an `Animation` with a spritesheet.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":52171,"byte_end":52245,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":52246,"byte_end":52249,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The [`animation_controller`](https://github.com/17cupsofcoffee/tetra/blob/main/examples/animation_controller.rs)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":52250,"byte_end":52366,"line_start":21,"line_end":21,"column_start":1,"column_end":117}},{"value":"/ example demonstrates how multiple `Animation`s can be combined using a","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":52367,"byte_end":52441,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ simple state machine.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":52442,"byte_end":52467,"line_start":23,"line_end":23,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":52734,"byte_end":52737,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<Animation>::new","value":"pub fn new(Texture, Vec<Rectangle>, Duration) -> Animation","parent":null,"children":[],"decl_id":null,"docs":" Creates a new looping animation.\n","sig":null,"attributes":[{"value":"/ Creates a new looping animation.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":52686,"byte_end":52722,"line_start":36,"line_end":36,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":53134,"byte_end":53138,"line_start":50,"line_end":50,"column_start":12,"column_end":16},"name":"once","qualname":"<Animation>::once","value":"pub fn once(Texture, Vec<Rectangle>, Duration) -> Animation","parent":null,"children":[],"decl_id":null,"docs":" Creates a new animation that does not repeat once all of the frames have been displayed.\n","sig":null,"attributes":[{"value":"/ Creates a new animation that does not repeat once all of the frames have been displayed.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":53030,"byte_end":53122,"line_start":49,"line_end":49,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":54002,"byte_end":54009,"line_start":71,"line_end":71,"column_start":12,"column_end":19},"name":"advance","qualname":"<Animation>::advance","value":"pub fn advance(&mut Self, &Context)","parent":null,"children":[],"decl_id":null,"docs":" Advances the animation's timer, switching the texture region if required.","sig":null,"attributes":[{"value":"/ Advances the animation's timer, switching the texture region if required.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":53432,"byte_end":53509,"line_start":62,"line_end":62,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":53514,"byte_end":53517,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ This method uses the current [delta time](../../time/fn.get_delta_time.html)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":53522,"byte_end":53602,"line_start":64,"line_end":64,"column_start":5,"column_end":85}},{"value":"/ to calculate how much time has passed - as such, you should call it in your","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":53607,"byte_end":53686,"line_start":65,"line_end":65,"column_start":5,"column_end":84}},{"value":"/ `State`'s `draw` method for accurate results.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":53691,"byte_end":53740,"line_start":66,"line_end":66,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":53745,"byte_end":53748,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ If you need greater control over the timing of your animation (e.g. if you","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":53753,"byte_end":53831,"line_start":68,"line_end":68,"column_start":5,"column_end":83}},{"value":"/ want to update it deterministically via your `State`'s `update` method),","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":53836,"byte_end":53912,"line_start":69,"line_end":69,"column_start":5,"column_end":81}},{"value":"/ consider using the [`advance_by`](#method.advance_by) method instead.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":53917,"byte_end":53990,"line_start":70,"line_end":70,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":54327,"byte_end":54337,"line_start":80,"line_end":80,"column_start":12,"column_end":22},"name":"advance_by","qualname":"<Animation>::advance_by","value":"pub fn advance_by(&mut Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Advances the animation's timer by a specified amount, switching the texture\n region if required.","sig":null,"attributes":[{"value":"/ Advances the animation's timer by a specified amount, switching the texture","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":54101,"byte_end":54180,"line_start":75,"line_end":75,"column_start":5,"column_end":84}},{"value":"/ region if required.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":54185,"byte_end":54208,"line_start":76,"line_end":76,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":54213,"byte_end":54216,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ If the specified duration is longer than the frame length, frames will be","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":54221,"byte_end":54298,"line_start":78,"line_end":78,"column_start":5,"column_end":82}},{"value":"/ skipped.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":54303,"byte_end":54315,"line_start":79,"line_end":79,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":54902,"byte_end":54909,"line_start":96,"line_end":96,"column_start":12,"column_end":19},"name":"restart","qualname":"<Animation>::restart","value":"pub fn restart(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Restarts the animation from the first frame.\n","sig":null,"attributes":[{"value":"/ Restarts the animation from the first frame.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":54842,"byte_end":54890,"line_start":95,"line_end":95,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":55100,"byte_end":55107,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"texture","qualname":"<Animation>::texture","value":"pub fn texture(&Self) -> &Texture","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the texture currently being used by the animation.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the texture currently being used by the animation.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":55011,"byte_end":55088,"line_start":101,"line_end":101,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":55471,"byte_end":55482,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"set_texture","qualname":"<Animation>::set_texture","value":"pub fn set_texture(&mut Self, Texture)","parent":null,"children":[],"decl_id":null,"docs":" Sets the texture that will be used by the animation.","sig":null,"attributes":[{"value":"/ Sets the texture that will be used by the animation.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":55162,"byte_end":55218,"line_start":106,"line_end":106,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":55223,"byte_end":55226,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ This method will not change the frame definitions or current state of the animation,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":55231,"byte_end":55319,"line_start":108,"line_end":108,"column_start":5,"column_end":93}},{"value":"/ so it can be used for e.g. swapping spritesheets. If you need to change the slicing","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":55324,"byte_end":55411,"line_start":109,"line_end":109,"column_start":5,"column_end":92}},{"value":"/ for the new texture, call `set_frames`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":55416,"byte_end":55459,"line_start":110,"line_end":110,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":55654,"byte_end":55660,"line_start":116,"line_end":116,"column_start":12,"column_end":18},"name":"frames","qualname":"<Animation>::frames","value":"pub fn frames(&Self) -> &[Rectangle]","parent":null,"children":[],"decl_id":null,"docs":" Gets the sections of the texture being displayed for each frame of the animation.\n","sig":null,"attributes":[{"value":"/ Gets the sections of the texture being displayed for each frame of the animation.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":55557,"byte_end":55642,"line_start":115,"line_end":115,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":55888,"byte_end":55898,"line_start":123,"line_end":123,"column_start":12,"column_end":22},"name":"set_frames","qualname":"<Animation>::set_frames","value":"pub fn set_frames(&mut Self, Vec<Rectangle>)","parent":null,"children":[],"decl_id":null,"docs":" Sets the sections of the texture being displayed for each frame of the animation.","sig":null,"attributes":[{"value":"/ Sets the sections of the texture being displayed for each frame of the animation.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":55718,"byte_end":55803,"line_start":120,"line_end":120,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":55808,"byte_end":55811,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ This method will reset the animation back to frame zero.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":55816,"byte_end":55876,"line_start":122,"line_end":122,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":56093,"byte_end":56105,"line_start":130,"line_end":130,"column_start":12,"column_end":24},"name":"frame_length","qualname":"<Animation>::frame_length","value":"pub fn frame_length(&Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Gets the amount of time that each frame of the animation lasts for.\n","sig":null,"attributes":[{"value":"/ Gets the amount of time that each frame of the animation lasts for.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":56010,"byte_end":56081,"line_start":129,"line_end":129,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":56247,"byte_end":56263,"line_start":135,"line_end":135,"column_start":12,"column_end":28},"name":"set_frame_length","qualname":"<Animation>::set_frame_length","value":"pub fn set_frame_length(&mut Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Sets the amount of time that each frame of the animation lasts for.\n","sig":null,"attributes":[{"value":"/ Sets the amount of time that each frame of the animation lasts for.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":56164,"byte_end":56235,"line_start":134,"line_end":134,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":56485,"byte_end":56494,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"repeating","qualname":"<Animation>::repeating","value":"pub fn repeating(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets whether or not the animation is currently set to repeat when it reaches the end\n of the frames.\n","sig":null,"attributes":[{"value":"/ Gets whether or not the animation is currently set to repeat when it reaches the end","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":56362,"byte_end":56450,"line_start":139,"line_end":139,"column_start":5,"column_end":93}},{"value":"/ of the frames.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":56455,"byte_end":56473,"line_start":140,"line_end":140,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":56648,"byte_end":56661,"line_start":146,"line_end":146,"column_start":12,"column_end":25},"name":"set_repeating","qualname":"<Animation>::set_repeating","value":"pub fn set_repeating(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not the animation should repeat when it reaches the end of the frames.\n","sig":null,"attributes":[{"value":"/ Sets whether or not the animation should repeat when it reaches the end of the frames.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":56546,"byte_end":56636,"line_start":145,"line_end":145,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":56990,"byte_end":57009,"line_start":154,"line_end":154,"column_start":12,"column_end":31},"name":"current_frame_index","qualname":"<Animation>::current_frame_index","value":"pub fn current_frame_index(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the index of the frame that is currently being displayed.","sig":null,"attributes":[{"value":"/ Gets the index of the frame that is currently being displayed.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":56739,"byte_end":56805,"line_start":150,"line_end":150,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":56810,"byte_end":56813,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This index is zero-based, and can be used in combination with the [`frames`](#method.frames)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":56818,"byte_end":56914,"line_start":152,"line_end":152,"column_start":5,"column_end":101}},{"value":"/ method in order to track the progress of the animation.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":56919,"byte_end":56978,"line_start":153,"line_end":153,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":57512,"byte_end":57535,"line_start":166,"line_end":166,"column_start":12,"column_end":35},"name":"set_current_frame_index","qualname":"<Animation>::set_current_frame_index","value":"pub fn set_current_frame_index(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets which frame of the animation should be displayed.","sig":null,"attributes":[{"value":"/ Sets which frame of the animation should be displayed.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":57066,"byte_end":57124,"line_start":158,"line_end":158,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":57129,"byte_end":57132,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Usually you will want to control the animation by calling [`advance`](#method.advance)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":57137,"byte_end":57227,"line_start":160,"line_end":160,"column_start":5,"column_end":95}},{"value":"/ or [`advance_by`](#method.advance), but this method can be useful for more fine-grained","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":57232,"byte_end":57323,"line_start":161,"line_end":161,"column_start":5,"column_end":96}},{"value":"/ control.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":57328,"byte_end":57340,"line_start":162,"line_end":162,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":57345,"byte_end":57348,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ The index is zero-based, and must be within the bounds of the animation's","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":57353,"byte_end":57430,"line_start":164,"line_end":164,"column_start":5,"column_end":82}},{"value":"/ [`frames`](#method.frames), otherwise this method will panic.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":57435,"byte_end":57500,"line_start":165,"line_end":165,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":58081,"byte_end":58099,"line_start":178,"line_end":178,"column_start":12,"column_end":30},"name":"current_frame_time","qualname":"<Animation>::current_frame_time","value":"pub fn current_frame_time(&Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Gets the duration that the current frame has been visible.","sig":null,"attributes":[{"value":"/ Gets the duration that the current frame has been visible.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":57847,"byte_end":57909,"line_start":174,"line_end":174,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":57914,"byte_end":57917,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the [`frame_length`](#method.frame_length) method","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":57922,"byte_end":58012,"line_start":176,"line_end":176,"column_start":5,"column_end":95}},{"value":"/ in order to track the progress of the animation.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":58017,"byte_end":58069,"line_start":177,"line_end":177,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":58741,"byte_end":58763,"line_start":191,"line_end":191,"column_start":12,"column_end":34},"name":"set_current_frame_time","qualname":"<Animation>::set_current_frame_time","value":"pub fn set_current_frame_time(&mut Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Sets the duration that the current frame has been visible.","sig":null,"attributes":[{"value":"/ Sets the duration that the current frame has been visible.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":58151,"byte_end":58213,"line_start":182,"line_end":182,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":58218,"byte_end":58221,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ Usually you will want to control the animation by calling [`advance`](#method.advance)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":58226,"byte_end":58316,"line_start":184,"line_end":184,"column_start":5,"column_end":95}},{"value":"/ or [`advance_by`](#method.advance), but this method can be useful for more fine-grained","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":58321,"byte_end":58412,"line_start":185,"line_end":185,"column_start":5,"column_end":96}},{"value":"/ control.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":58417,"byte_end":58429,"line_start":186,"line_end":186,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":58434,"byte_end":58437,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ The animation will not advance past the end of the current frame until the next call","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":58442,"byte_end":58530,"line_start":188,"line_end":188,"column_start":5,"column_end":93}},{"value":"/ to [`advance`](#method.advance) or [`advance_by`](#method.advance_by). If a value is","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":58535,"byte_end":58623,"line_start":189,"line_end":189,"column_start":5,"column_end":93}},{"value":"/ given that is larger than [`frame_length`](#method.frame_length), this animation may skip frames.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":58628,"byte_end":58729,"line_start":190,"line_end":190,"column_start":5,"column_end":106}}]},{"kind":"Struct","id":{"krate":0,"index":1265},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":60538,"byte_end":60544,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"name":"Camera","qualname":"::graphics::camera::Camera","value":"Camera { position, rotation, zoom, viewport_width, viewport_height }","parent":null,"children":[{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1268},{"krate":0,"index":1269},{"krate":0,"index":1270},{"krate":0,"index":1271}],"decl_id":null,"docs":" A camera that can be used to transform the player's view of the scene.","sig":null,"attributes":[{"value":"/ A camera that can be used to transform the player's view of the scene.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":59792,"byte_end":59866,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":59867,"byte_end":59870,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ To apply the transformation, call the `as_matrix` method and pass the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":59871,"byte_end":59944,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ resulting `Mat4` to [`graphics::set_transform_matrix`](../fn.set_transform_matrix.html).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":59945,"byte_end":60037,"line_start":10,"line_end":10,"column_start":1,"column_end":93}},{"value":"/ To disable it, call [`graphics::reset_transform_matrix`](../fn.set_transform_matrix.html).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":60038,"byte_end":60132,"line_start":11,"line_end":11,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":60133,"byte_end":60136,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The camera's matrix is cached internally as an optimization. After adjusting parameters","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":60137,"byte_end":60228,"line_start":13,"line_end":13,"column_start":1,"column_end":92}},{"value":"/ on the camera, you can call the `update` method to recalculate the matrix.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":60229,"byte_end":60307,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":60308,"byte_end":60311,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":60312,"byte_end":60326,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":60327,"byte_end":60330,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The [`camera`](https://github.com/17cupsofcoffee/tetra/blob/main/examples/camera.rs)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":60331,"byte_end":60419,"line_start":18,"line_end":18,"column_start":1,"column_end":89}},{"value":"/ example demonstrates how a camera can be used to transform a simple","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":60420,"byte_end":60491,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"/ scene.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":60492,"byte_end":60502,"line_start":20,"line_end":20,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":1266},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":61247,"byte_end":61255,"line_start":34,"line_end":34,"column_start":9,"column_end":17},"name":"position","qualname":"::graphics::camera::Camera::position","value":"vek::Vec2<f32>","parent":{"krate":0,"index":1265},"children":[],"decl_id":null,"docs":" The position of the camera.","sig":null,"attributes":[{"value":"/ The position of the camera.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":60551,"byte_end":60582,"line_start":23,"line_end":23,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":60587,"byte_end":60590,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ Note that this defines the center point of the view, rather than the top-left.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":60595,"byte_end":60677,"line_start":25,"line_end":25,"column_start":5,"column_end":87}},{"value":"/ This makes it easy to position the camera relative to your game objects - for","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":60682,"byte_end":60763,"line_start":26,"line_end":26,"column_start":5,"column_end":86}},{"value":"/ example, to focus the camera on the player, you can just set the camera","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":60768,"byte_end":60843,"line_start":27,"line_end":27,"column_start":5,"column_end":80}},{"value":"/ position to match the player's position.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":60848,"byte_end":60892,"line_start":28,"line_end":28,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":60897,"byte_end":60900,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ You may need to take this behaviour into account when positioning the camera,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":60905,"byte_end":60986,"line_start":30,"line_end":30,"column_start":5,"column_end":86}},{"value":"/ however. For example, if the viewport width or height is an odd number, setting","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":60991,"byte_end":61074,"line_start":31,"line_end":31,"column_start":5,"column_end":88}},{"value":"/ the position to a whole number will mean that the view will not be aligned with","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":61079,"byte_end":61162,"line_start":32,"line_end":32,"column_start":5,"column_end":88}},{"value":"/ the pixel grid, which may cause issues for pixel-perfect rendering.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":61167,"byte_end":61238,"line_start":33,"line_end":33,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":1267},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":61325,"byte_end":61333,"line_start":37,"line_end":37,"column_start":9,"column_end":17},"name":"rotation","qualname":"::graphics::camera::Camera::rotation","value":"f32","parent":{"krate":0,"index":1265},"children":[],"decl_id":null,"docs":" The rotation of the camera, in radians.\n","sig":null,"attributes":[{"value":"/ The rotation of the camera, in radians.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":61273,"byte_end":61316,"line_start":36,"line_end":36,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":1268},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":61534,"byte_end":61538,"line_start":43,"line_end":43,"column_start":9,"column_end":13},"name":"zoom","qualname":"::graphics::camera::Camera::zoom","value":"f32","parent":{"krate":0,"index":1265},"children":[],"decl_id":null,"docs":" The zoom level of the camera.","sig":null,"attributes":[{"value":"/ The zoom level of the camera.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":61345,"byte_end":61378,"line_start":39,"line_end":39,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":61383,"byte_end":61386,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ This is expressed as a scale factor - `0.5` will shrink everything by half,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":61391,"byte_end":61470,"line_start":41,"line_end":41,"column_start":5,"column_end":84}},{"value":"/ while `2.0` will make everything twice as big.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":61475,"byte_end":61525,"line_start":42,"line_end":42,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1269},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":61816,"byte_end":61830,"line_start":50,"line_end":50,"column_start":9,"column_end":23},"name":"viewport_width","qualname":"::graphics::camera::Camera::viewport_width","value":"f32","parent":{"krate":0,"index":1265},"children":[],"decl_id":null,"docs":" The width of the camera's viewport.","sig":null,"attributes":[{"value":"/ The width of the camera's viewport.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":61550,"byte_end":61589,"line_start":45,"line_end":45,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":61594,"byte_end":61597,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ This is primarily used for calculating where the center of the screen is,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":61602,"byte_end":61679,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ and usually should match the size of the target you're currently rendering to","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":61684,"byte_end":61765,"line_start":48,"line_end":48,"column_start":5,"column_end":86}},{"value":"/ (e.g. the screen, or a `Canvas`).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":61770,"byte_end":61807,"line_start":49,"line_end":49,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1270},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":62109,"byte_end":62124,"line_start":57,"line_end":57,"column_start":9,"column_end":24},"name":"viewport_height","qualname":"::graphics::camera::Camera::viewport_height","value":"f32","parent":{"krate":0,"index":1265},"children":[],"decl_id":null,"docs":" The height of the camera's viewport.","sig":null,"attributes":[{"value":"/ The height of the camera's viewport.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":61842,"byte_end":61882,"line_start":52,"line_end":52,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":61887,"byte_end":61890,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ This is primarily used for calculating where the center of the screen is,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":61895,"byte_end":61972,"line_start":54,"line_end":54,"column_start":5,"column_end":82}},{"value":"/ and usually should match the size of the target you're currently rendering to","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":61977,"byte_end":62058,"line_start":55,"line_end":55,"column_start":5,"column_end":86}},{"value":"/ (e.g. the screen, or a `Canvas`).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":62063,"byte_end":62100,"line_start":56,"line_end":56,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":62392,"byte_end":62395,"line_start":67,"line_end":67,"column_start":12,"column_end":15},"name":"new","qualname":"<Camera>::new","value":"pub fn new(f32, f32) -> Camera","parent":null,"children":[],"decl_id":null,"docs":" Creates a new camera with the given viewport size.","sig":null,"attributes":[{"value":"/ Creates a new camera with the given viewport size.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":62176,"byte_end":62230,"line_start":63,"line_end":63,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":62235,"byte_end":62238,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The provided size usually should match the size of the target you're currently rendering to","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":62243,"byte_end":62338,"line_start":65,"line_end":65,"column_start":5,"column_end":100}},{"value":"/ (e.g. the screen, or a `Canvas`).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":62343,"byte_end":62380,"line_start":66,"line_end":66,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":63392,"byte_end":63408,"line_start":89,"line_end":89,"column_start":12,"column_end":28},"name":"with_window_size","qualname":"<Camera>::with_window_size","value":"pub fn with_window_size(&Context) -> Camera","parent":null,"children":[],"decl_id":null,"docs":" Creates a new camera, with the viewport size set to match the size of the window.","sig":null,"attributes":[{"value":"/ Creates a new camera, with the viewport size set to match the size of the window.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":62731,"byte_end":62816,"line_start":79,"line_end":79,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":62821,"byte_end":62824,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ This is a useful shortcut if your game renders at a 1:1 ratio with the game window.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":62829,"byte_end":62916,"line_start":81,"line_end":81,"column_start":5,"column_end":92}},{"value":"/ If you're rendering to a differently sized target (e.g. a `Canvas` or a","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":62921,"byte_end":62996,"line_start":82,"line_end":82,"column_start":5,"column_end":80}},{"value":"/ `ScreenScaler`), then you should use call `new` with the target size","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":63001,"byte_end":63073,"line_start":83,"line_end":83,"column_start":5,"column_end":77}},{"value":"/ instead.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":63078,"byte_end":63090,"line_start":84,"line_end":84,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":63095,"byte_end":63098,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Note that if the window is resized, the camera's viewport size will *not* automatically","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":63103,"byte_end":63194,"line_start":86,"line_end":86,"column_start":5,"column_end":96}},{"value":"/ update. If you need to keep the window size and the viewport size in sync, then call","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":63199,"byte_end":63287,"line_start":87,"line_end":87,"column_start":5,"column_end":93}},{"value":"/ `set_viewport_size` in your `State`'s `event` method when `Event::Resized` is fired.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":63292,"byte_end":63380,"line_start":88,"line_end":88,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":63754,"byte_end":63771,"line_start":98,"line_end":98,"column_start":12,"column_end":29},"name":"set_viewport_size","qualname":"<Camera>::set_viewport_size","value":"pub fn set_viewport_size(&mut Self, f32, f32)","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the camera's viewport.","sig":null,"attributes":[{"value":"/ Sets the size of the camera's viewport.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":63549,"byte_end":63592,"line_start":94,"line_end":94,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":63597,"byte_end":63600,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ The provided size usually should match the size of the target you're currently rendering to","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":63605,"byte_end":63700,"line_start":96,"line_end":96,"column_start":5,"column_end":100}},{"value":"/ (e.g. the screen, or a `Canvas`).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":63705,"byte_end":63742,"line_start":97,"line_end":97,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":64017,"byte_end":64023,"line_start":105,"line_end":105,"column_start":12,"column_end":18},"name":"update","qualname":"<Camera>::update","value":"pub fn update(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Recalculates the transformation matrix, based on the data currently contained\n within the camera.\n","sig":null,"attributes":[{"value":"/ Recalculates the transformation matrix, based on the data currently contained","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":63897,"byte_end":63978,"line_start":103,"line_end":103,"column_start":5,"column_end":86}},{"value":"/ within the camera.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":63983,"byte_end":64005,"line_start":104,"line_end":104,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":64745,"byte_end":64754,"line_start":122,"line_end":122,"column_start":12,"column_end":21},"name":"as_matrix","qualname":"<Camera>::as_matrix","value":"pub fn as_matrix(&Self) -> Mat4<f32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the current transformation matrix.","sig":null,"attributes":[{"value":"/ Returns the current transformation matrix.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":64356,"byte_end":64402,"line_start":115,"line_end":115,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":64407,"byte_end":64410,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ Pass this to `graphics::set_transform_matrix` to apply the transformation to","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":64415,"byte_end":64495,"line_start":117,"line_end":117,"column_start":5,"column_end":85}},{"value":"/ your scene. To disable the transformation, call `graphics::reset_transform_matrix`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":64500,"byte_end":64587,"line_start":118,"line_end":118,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":64592,"byte_end":64595,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ The matrix is cached internally, so calling this method multiple times will not","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":64600,"byte_end":64683,"line_start":120,"line_end":120,"column_start":5,"column_end":88}},{"value":"/ cause it to be recalculated from scratch.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":64688,"byte_end":64733,"line_start":121,"line_end":121,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":64888,"byte_end":64895,"line_start":127,"line_end":127,"column_start":12,"column_end":19},"name":"project","qualname":"<Camera>::project","value":"pub fn project(&Self, Vec2<f32>) -> Vec2<f32>","parent":null,"children":[],"decl_id":null,"docs":" Projects a point from world co-ordinates to camera co-ordinates.\n","sig":null,"attributes":[{"value":"/ Projects a point from world co-ordinates to camera co-ordinates.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":64808,"byte_end":64876,"line_start":126,"line_end":126,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":65284,"byte_end":65293,"line_start":140,"line_end":140,"column_start":12,"column_end":21},"name":"unproject","qualname":"<Camera>::unproject","value":"pub fn unproject(&Self, Vec2<f32>) -> Vec2<f32>","parent":null,"children":[],"decl_id":null,"docs":" Projects a point from camera co-ordinates to world co-ordinates.\n","sig":null,"attributes":[{"value":"/ Projects a point from camera co-ordinates to world co-ordinates.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":65204,"byte_end":65272,"line_start":139,"line_end":139,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":65874,"byte_end":65888,"line_start":155,"line_end":155,"column_start":12,"column_end":26},"name":"mouse_position","qualname":"<Camera>::mouse_position","value":"pub fn mouse_position(&Self, &Context) -> Vec2<f32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the mouse's position in camera co-ordinates.","sig":null,"attributes":[{"value":"/ Returns the mouse's position in camera co-ordinates.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":65589,"byte_end":65645,"line_start":150,"line_end":150,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":65650,"byte_end":65653,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This is a shortcut for calling `project(input::get_mouse_position(ctx))`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":65658,"byte_end":65735,"line_start":152,"line_end":152,"column_start":5,"column_end":82}},{"value":"/ As such, it does not take into account any other transformations","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":65740,"byte_end":65808,"line_start":153,"line_end":153,"column_start":5,"column_end":73}},{"value":"/ being made to the view (e.g. screen scaling).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":65813,"byte_end":65862,"line_start":154,"line_end":154,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":66298,"byte_end":66305,"line_start":164,"line_end":164,"column_start":12,"column_end":19},"name":"mouse_x","qualname":"<Camera>::mouse_x","value":"pub fn mouse_x(&Self, &Context) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the X co-ordinate of the mouse's position in camera co-ordinates.","sig":null,"attributes":[{"value":"/ Returns the X co-ordinate of the mouse's position in camera co-ordinates.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":65990,"byte_end":66067,"line_start":159,"line_end":159,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":66072,"byte_end":66075,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ This is a shortcut for calling `project(input::get_mouse_position(ctx)).x`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":66080,"byte_end":66159,"line_start":161,"line_end":161,"column_start":5,"column_end":84}},{"value":"/ As such, it does not take into account any other transformations","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":66164,"byte_end":66232,"line_start":162,"line_end":162,"column_start":5,"column_end":73}},{"value":"/ being made to the view (e.g. screen scaling).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":66237,"byte_end":66286,"line_start":163,"line_end":163,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":66691,"byte_end":66698,"line_start":173,"line_end":173,"column_start":12,"column_end":19},"name":"mouse_y","qualname":"<Camera>::mouse_y","value":"pub fn mouse_y(&Self, &Context) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the Y co-ordinate of the mouse's position in camera co-ordinates.","sig":null,"attributes":[{"value":"/ Returns the Y co-ordinate of the mouse's position in camera co-ordinates.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":66383,"byte_end":66460,"line_start":168,"line_end":168,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":66465,"byte_end":66468,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ This is a shortcut for calling `project(input::get_mouse_position(ctx)).y`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":66473,"byte_end":66552,"line_start":170,"line_end":170,"column_start":5,"column_end":84}},{"value":"/ As such, it does not take into account any other transformations","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":66557,"byte_end":66625,"line_start":171,"line_end":171,"column_start":5,"column_end":73}},{"value":"/ being made to the view (e.g. screen scaling).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":66630,"byte_end":66679,"line_start":172,"line_end":172,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":67119,"byte_end":67131,"line_start":184,"line_end":184,"column_start":12,"column_end":24},"name":"visible_rect","qualname":"<Camera>::visible_rect","value":"pub fn visible_rect(&Self) -> Rectangle","parent":null,"children":[],"decl_id":null,"docs":" Calculates the visible rectangle of the camera.","sig":null,"attributes":[{"value":"/ Calculates the visible rectangle of the camera.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":66776,"byte_end":66827,"line_start":177,"line_end":177,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":66832,"byte_end":66835,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ When used on a rotated camera, this will return the smallest rectangle that","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":66840,"byte_end":66919,"line_start":179,"line_end":179,"column_start":5,"column_end":84}},{"value":"/ contains the full camera viewport.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":66924,"byte_end":66962,"line_start":180,"line_end":180,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":66967,"byte_end":66970,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Note that this method does not take into account any other transformations being","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":66975,"byte_end":67059,"line_start":182,"line_end":182,"column_start":5,"column_end":89}},{"value":"/ made to the view (e.g. screen scaling).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":67064,"byte_end":67107,"line_start":183,"line_end":183,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":1276},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":73369,"byte_end":73375,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"name":"Canvas","qualname":"::graphics::canvas::Canvas","value":"Canvas {  }","parent":null,"children":[{"krate":0,"index":1277},{"krate":0,"index":1278}],"decl_id":null,"docs":" A texture that can be used for off-screen rendering.","sig":null,"attributes":[{"value":"/ A texture that can be used for off-screen rendering.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":72201,"byte_end":72257,"line_start":8,"line_end":8,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":72258,"byte_end":72261,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is sometimes referred to as a 'render texture' or 'render target' in other","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":72262,"byte_end":72345,"line_start":10,"line_end":10,"column_start":1,"column_end":84}},{"value":"/ frameworks.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":72346,"byte_end":72361,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":72362,"byte_end":72365,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Canvases can be useful if you want to do some rendering upfront and then cache the result","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":72366,"byte_end":72459,"line_start":13,"line_end":13,"column_start":1,"column_end":94}},{"value":"/ (e.g. a static background), or if you want to apply transformations/shaders to multiple","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":72460,"byte_end":72551,"line_start":14,"line_end":14,"column_start":1,"column_end":92}},{"value":"/ things simultaneously.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":72552,"byte_end":72578,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":72579,"byte_end":72582,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Performance","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":72583,"byte_end":72600,"line_start":17,"line_end":17,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":72601,"byte_end":72604,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Creating a `Canvas` is a relatively expensive operation. If you can, store them in your `State`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":72605,"byte_end":72704,"line_start":19,"line_end":19,"column_start":1,"column_end":100}},{"value":"/ struct rather than recreating them each frame.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":72705,"byte_end":72755,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":72756,"byte_end":72759,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Cloning a `Canvas` is a very cheap operation, as the underlying data is shared between the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":72760,"byte_end":72854,"line_start":22,"line_end":22,"column_start":1,"column_end":95}},{"value":"/ original instance and the clone via [reference-counting](https://doc.rust-lang.org/std/rc/struct.Rc.html).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":72855,"byte_end":72965,"line_start":23,"line_end":23,"column_start":1,"column_end":111}},{"value":"/ This does mean, however, that updating a `Canvas` (for example, changing its filter mode) will also","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":72966,"byte_end":73069,"line_start":24,"line_end":24,"column_start":1,"column_end":104}},{"value":"/ update any other clones of that `Canvas`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":73070,"byte_end":73115,"line_start":25,"line_end":25,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":73116,"byte_end":73119,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":73120,"byte_end":73134,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":73135,"byte_end":73138,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The [`canvas`](https://github.com/17cupsofcoffee/tetra/blob/main/examples/canvas.rs)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":73139,"byte_end":73227,"line_start":29,"line_end":29,"column_start":1,"column_end":89}},{"value":"/ example demonstrates how to draw to a canvas, and then draw that canvas to","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":73228,"byte_end":73306,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ the screen.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":73307,"byte_end":73322,"line_start":31,"line_end":31,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":73657,"byte_end":73660,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<Canvas>::new","value":"pub fn new(&mut Context, i32, i32) -> Result<Canvas>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new canvas.","sig":null,"attributes":[{"value":"/ Creates a new canvas.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":73480,"byte_end":73505,"line_start":39,"line_end":39,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":73510,"byte_end":73513,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":73518,"byte_end":73530,"line_start":41,"line_end":41,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":73535,"byte_end":73538,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ * `TetraError::PlatformError` will be returned if the underlying graphics API encounters an error.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":73543,"byte_end":73645,"line_start":43,"line_end":43,"column_start":5,"column_end":107}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":74378,"byte_end":74383,"line_start":69,"line_end":69,"column_start":12,"column_end":17},"name":"width","qualname":"<Canvas>::width","value":"pub fn width(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the width of the canvas.\n","sig":null,"attributes":[{"value":"/ Returns the width of the canvas.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":74330,"byte_end":74366,"line_start":68,"line_end":68,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":74489,"byte_end":74495,"line_start":74,"line_end":74,"column_start":12,"column_end":18},"name":"height","qualname":"<Canvas>::height","value":"pub fn height(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the height of the canvas.\n","sig":null,"attributes":[{"value":"/ Returns the height of the canvas.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":74440,"byte_end":74477,"line_start":73,"line_end":73,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":74600,"byte_end":74604,"line_start":79,"line_end":79,"column_start":12,"column_end":16},"name":"size","qualname":"<Canvas>::size","value":"pub fn size(&Self) -> (i32, i32)","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the canvas.\n","sig":null,"attributes":[{"value":"/ Returns the size of the canvas.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":74553,"byte_end":74588,"line_start":78,"line_end":78,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":74732,"byte_end":74743,"line_start":84,"line_end":84,"column_start":12,"column_end":23},"name":"filter_mode","qualname":"<Canvas>::filter_mode","value":"pub fn filter_mode(&Self) -> FilterMode","parent":null,"children":[],"decl_id":null,"docs":" Returns the filter mode being used by the canvas.\n","sig":null,"attributes":[{"value":"/ Returns the filter mode being used by the canvas.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":74667,"byte_end":74720,"line_start":83,"line_end":83,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":74884,"byte_end":74899,"line_start":89,"line_end":89,"column_start":12,"column_end":27},"name":"set_filter_mode","qualname":"<Canvas>::set_filter_mode","value":"pub fn set_filter_mode(&mut Self, &mut Context, FilterMode)","parent":null,"children":[],"decl_id":null,"docs":" Sets the filter mode that should be used by the canvas.\n","sig":null,"attributes":[{"value":"/ Sets the filter mode that should be used by the canvas.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":74813,"byte_end":74872,"line_start":88,"line_end":88,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":75819,"byte_end":75827,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"set_data","qualname":"<Canvas>::set_data","value":"pub fn set_data(&Self, &mut Context, i32, i32, i32, i32, &[u8]) -> Result","parent":null,"children":[],"decl_id":null,"docs":" Writes RGBA pixel data to a specified region of the canvas.","sig":null,"attributes":[{"value":"/ Writes RGBA pixel data to a specified region of the canvas.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":75024,"byte_end":75087,"line_start":93,"line_end":93,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":75092,"byte_end":75095,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This method requires you to provide enough data to fill the target rectangle.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":75100,"byte_end":75181,"line_start":95,"line_end":95,"column_start":5,"column_end":86}},{"value":"/ If you provide too little data, an error will be returned.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":75186,"byte_end":75248,"line_start":96,"line_end":96,"column_start":5,"column_end":67}},{"value":"/ If you provide too much data, it will be truncated.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":75253,"byte_end":75308,"line_start":97,"line_end":97,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":75313,"byte_end":75316,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ If you want to overwrite the entire canvas, the `replace_data` method offers a","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":75321,"byte_end":75403,"line_start":99,"line_end":99,"column_start":5,"column_end":87}},{"value":"/ more concise way of doing this.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":75408,"byte_end":75443,"line_start":100,"line_end":100,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":75448,"byte_end":75451,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":75456,"byte_end":75468,"line_start":102,"line_end":102,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":75473,"byte_end":75476,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ * `TetraError::NotEnoughData` will be returned if not enough data is provided to fill","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":75481,"byte_end":75570,"line_start":104,"line_end":104,"column_start":5,"column_end":94}},{"value":"/ the target rectangle. This is to prevent the graphics API from trying to read","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":75575,"byte_end":75656,"line_start":105,"line_end":105,"column_start":5,"column_end":86}},{"value":"/ uninitialized memory.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":75661,"byte_end":75686,"line_start":106,"line_end":106,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":75691,"byte_end":75694,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":75699,"byte_end":75711,"line_start":108,"line_end":108,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":75716,"byte_end":75719,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ Panics if any part of the target rectangle is outside the bounds of the canvas.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":75724,"byte_end":75807,"line_start":110,"line_end":110,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":76678,"byte_end":76690,"line_start":136,"line_end":136,"column_start":12,"column_end":24},"name":"replace_data","qualname":"<Canvas>::replace_data","value":"pub fn replace_data(&Self, &mut Context, &[u8]) -> Result","parent":null,"children":[],"decl_id":null,"docs":" Overwrites the entire canvas with new RGBA pixel data.","sig":null,"attributes":[{"value":"/ Overwrites the entire canvas with new RGBA pixel data.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":76056,"byte_end":76114,"line_start":123,"line_end":123,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":76119,"byte_end":76122,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ This method requires you to provide enough data to fill the canvas.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":76127,"byte_end":76198,"line_start":125,"line_end":125,"column_start":5,"column_end":76}},{"value":"/ If you provide too little data, an error will be returned.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":76203,"byte_end":76265,"line_start":126,"line_end":126,"column_start":5,"column_end":67}},{"value":"/ If you provide too much data, it will be truncated.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":76270,"byte_end":76325,"line_start":127,"line_end":127,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":76330,"byte_end":76333,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ If you only want to write to a subsection of the canvas, use the `set_data`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":76338,"byte_end":76417,"line_start":129,"line_end":129,"column_start":5,"column_end":84}},{"value":"/ method instead.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":76422,"byte_end":76441,"line_start":130,"line_end":130,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":76446,"byte_end":76449,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":76454,"byte_end":76466,"line_start":132,"line_end":132,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":76471,"byte_end":76474,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ * `TetraError::NotEnoughData` will be returned if not enough data is provided to fill","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":76479,"byte_end":76568,"line_start":134,"line_end":134,"column_start":5,"column_end":94}},{"value":"/ the canvas. This is to prevent the graphics API from trying to read uninitialized memory.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":76573,"byte_end":76666,"line_start":135,"line_end":135,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":76868,"byte_end":76875,"line_start":141,"line_end":141,"column_start":12,"column_end":19},"name":"texture","qualname":"<Canvas>::texture","value":"pub fn texture(&Self) -> &Texture","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the canvas' underlying texture.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the canvas' underlying texture.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":76798,"byte_end":76856,"line_start":140,"line_end":140,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1287},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":78219,"byte_end":78224,"line_start":27,"line_end":27,"column_start":12,"column_end":17},"name":"Color","qualname":"::graphics::color::Color","value":"Color { r, g, b, a }","parent":null,"children":[{"krate":0,"index":1288},{"krate":0,"index":1289},{"krate":0,"index":1290},{"krate":0,"index":1291}],"decl_id":null,"docs":" An RGBA color.","sig":null,"attributes":[{"value":"/ An RGBA color.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":77442,"byte_end":77460,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":77461,"byte_end":77464,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The components are stored as `f32` values in the range of `0.0` to `1.0`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":77465,"byte_end":77542,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ If your data is made up of bytes or hex values, this type provides","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":77543,"byte_end":77613,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/ constructors that will carry out the conversion for you.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":77614,"byte_end":77674,"line_start":12,"line_end":12,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":77675,"byte_end":77678,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The `std` arithmetic traits are implemented for this type, which allows you to","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":77679,"byte_end":77761,"line_start":14,"line_end":14,"column_start":1,"column_end":83}},{"value":"/ add/subtract/multiply/divide colors. These are implemented as saturating","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":77762,"byte_end":77838,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/ operations (i.e. the values will always remain between `0.0` and `1.0`).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":77839,"byte_end":77915,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":77916,"byte_end":77919,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Serde","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":77920,"byte_end":77931,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":77932,"byte_end":77935,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Serialization and deserialization of this type (via [Serde](https://serde.rs/))","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":77936,"byte_end":78019,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/ can be enabled via the `serde_support` feature.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":78020,"byte_end":78071,"line_start":21,"line_end":21,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1288},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":78275,"byte_end":78276,"line_start":29,"line_end":29,"column_start":9,"column_end":10},"name":"r","qualname":"::graphics::color::Color::r","value":"f32","parent":{"krate":0,"index":1287},"children":[],"decl_id":null,"docs":" The red component of the color.\n","sig":null,"attributes":[{"value":"/ The red component of the color.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":78231,"byte_end":78266,"line_start":28,"line_end":28,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1289},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":78334,"byte_end":78335,"line_start":32,"line_end":32,"column_start":9,"column_end":10},"name":"g","qualname":"::graphics::color::Color::g","value":"f32","parent":{"krate":0,"index":1287},"children":[],"decl_id":null,"docs":" The green component of the color.\n","sig":null,"attributes":[{"value":"/ The green component of the color.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":78288,"byte_end":78325,"line_start":31,"line_end":31,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1290},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":78392,"byte_end":78393,"line_start":35,"line_end":35,"column_start":9,"column_end":10},"name":"b","qualname":"::graphics::color::Color::b","value":"f32","parent":{"krate":0,"index":1287},"children":[],"decl_id":null,"docs":" The blue component of the color.\n","sig":null,"attributes":[{"value":"/ The blue component of the color.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":78347,"byte_end":78383,"line_start":34,"line_end":34,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1291},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":78451,"byte_end":78452,"line_start":38,"line_end":38,"column_start":9,"column_end":10},"name":"a","qualname":"::graphics::color::Color::a","value":"f32","parent":{"krate":0,"index":1287},"children":[],"decl_id":null,"docs":" The alpha component of the color.\n","sig":null,"attributes":[{"value":"/ The alpha component of the color.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":78405,"byte_end":78442,"line_start":37,"line_end":37,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":78579,"byte_end":78582,"line_start":43,"line_end":43,"column_start":18,"column_end":21},"name":"rgb","qualname":"<Color>::rgb","value":"pub const fn rgb(f32, f32, f32) -> Color","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Color`, with the specified RGB values and the alpha set to 1.0.\n","sig":null,"attributes":[{"value":"/ Creates a new `Color`, with the specified RGB values and the alpha set to 1.0.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":78479,"byte_end":78561,"line_start":42,"line_end":42,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":78739,"byte_end":78743,"line_start":48,"line_end":48,"column_start":18,"column_end":22},"name":"rgba","qualname":"<Color>::rgba","value":"pub const fn rgba(f32, f32, f32, f32) -> Color","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Color`, with the specified RGBA values.\n","sig":null,"attributes":[{"value":"/ Creates a new `Color`, with the specified RGBA values.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":78663,"byte_end":78721,"line_start":47,"line_end":47,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":78937,"byte_end":78941,"line_start":53,"line_end":53,"column_start":12,"column_end":16},"name":"rgb8","qualname":"<Color>::rgb8","value":"pub fn rgb8(u8, u8, u8) -> Color","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Color`, with the specified RGB integer (0-255) values and the alpha set to 255.\n","sig":null,"attributes":[{"value":"/ Creates a new `Color`, with the specified RGB integer (0-255) values and the alpha set to 255.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":78827,"byte_end":78925,"line_start":52,"line_end":52,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":79220,"byte_end":79225,"line_start":62,"line_end":62,"column_start":12,"column_end":17},"name":"rgba8","qualname":"<Color>::rgba8","value":"pub fn rgba8(u8, u8, u8, u8) -> Color","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Color`, with the specified RGBA (0-255) integer values.\n","sig":null,"attributes":[{"value":"/ Creates a new `Color`, with the specified RGBA (0-255) integer values.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":79134,"byte_end":79208,"line_start":61,"line_end":61,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":79768,"byte_end":79771,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"hex","qualname":"<Color>::hex","value":"pub fn hex(&str) -> Color","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Color` using a hexidecimal color code, panicking if the input is\n invalid.","sig":null,"attributes":[{"value":"/ Creates a new `Color` using a hexidecimal color code, panicking if the input is","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":79458,"byte_end":79541,"line_start":71,"line_end":71,"column_start":5,"column_end":88}},{"value":"/ invalid.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":79546,"byte_end":79558,"line_start":72,"line_end":72,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":79563,"byte_end":79566,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Six and eight digit codes can be used - the former will be interpreted as RGB, and","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":79571,"byte_end":79657,"line_start":74,"line_end":74,"column_start":5,"column_end":91}},{"value":"/ the latter as RGBA. The `#` prefix (commonly used on the web) will be stripped if present.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":79662,"byte_end":79756,"line_start":75,"line_end":75,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":80700,"byte_end":80707,"line_start":103,"line_end":103,"column_start":12,"column_end":19},"name":"try_hex","qualname":"<Color>::try_hex","value":"pub fn try_hex(&str) -> Result<Color>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Color` using a hexidecimal color code, returning an error if the\n input is invalid.","sig":null,"attributes":[{"value":"/ Creates a new `Color` using a hexidecimal color code, returning an error if the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":80259,"byte_end":80342,"line_start":94,"line_end":94,"column_start":5,"column_end":88}},{"value":"/ input is invalid.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":80347,"byte_end":80368,"line_start":95,"line_end":95,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":80373,"byte_end":80376,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ Six and eight digit codes can be used - the former will be interpreted as RGB, and","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":80381,"byte_end":80467,"line_start":97,"line_end":97,"column_start":5,"column_end":91}},{"value":"/ the latter as RGBA. The `#` prefix (commonly used on the web) will be stripped if present.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":80472,"byte_end":80566,"line_start":98,"line_end":98,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":80571,"byte_end":80574,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":80579,"byte_end":80591,"line_start":100,"line_end":100,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":80596,"byte_end":80599,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ * `TetraError::InvalidColor` will be returned if the specified color is invalid.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":80604,"byte_end":80688,"line_start":102,"line_end":102,"column_start":5,"column_end":89}}]},{"kind":"Const","id":{"krate":0,"index":295},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":81631,"byte_end":81636,"line_start":128,"line_end":128,"column_start":15,"column_end":20},"name":"BLACK","qualname":"::graphics::color::Color::BLACK","value":"Color","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":" Shortcut for `Color::rgb(0.0, 0.0, 0.0)`.\n","sig":null,"attributes":[{"value":"/ Shortcut for `Color::rgb(0.0, 0.0, 0.0)`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":81571,"byte_end":81616,"line_start":127,"line_end":127,"column_start":5,"column_end":50}}]},{"kind":"Const","id":{"krate":0,"index":296},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":81738,"byte_end":81743,"line_start":131,"line_end":131,"column_start":15,"column_end":20},"name":"WHITE","qualname":"::graphics::color::Color::WHITE","value":"Color","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":" Shortcut for `Color::rgb(1.0, 1.0, 1.0)`.\n","sig":null,"attributes":[{"value":"/ Shortcut for `Color::rgb(1.0, 1.0, 1.0)`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":81678,"byte_end":81723,"line_start":130,"line_end":130,"column_start":5,"column_end":50}}]},{"kind":"Const","id":{"krate":0,"index":297},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":81845,"byte_end":81848,"line_start":134,"line_end":134,"column_start":15,"column_end":18},"name":"RED","qualname":"::graphics::color::Color::RED","value":"Color","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":" Shortcut for `Color::rgb(1.0, 0.0, 0.0)`.\n","sig":null,"attributes":[{"value":"/ Shortcut for `Color::rgb(1.0, 0.0, 0.0)`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":81785,"byte_end":81830,"line_start":133,"line_end":133,"column_start":5,"column_end":50}}]},{"kind":"Const","id":{"krate":0,"index":298},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":81950,"byte_end":81955,"line_start":137,"line_end":137,"column_start":15,"column_end":20},"name":"GREEN","qualname":"::graphics::color::Color::GREEN","value":"Color","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":" Shortcut for `Color::rgb(0.0, 1.0, 0.0)`.\n","sig":null,"attributes":[{"value":"/ Shortcut for `Color::rgb(0.0, 1.0, 0.0)`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":81890,"byte_end":81935,"line_start":136,"line_end":136,"column_start":5,"column_end":50}}]},{"kind":"Const","id":{"krate":0,"index":299},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":82057,"byte_end":82061,"line_start":140,"line_end":140,"column_start":15,"column_end":19},"name":"BLUE","qualname":"::graphics::color::Color::BLUE","value":"Color","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":" Shortcut for `Color::rgb(0.0, 0.0, 1.0)`.\n","sig":null,"attributes":[{"value":"/ Shortcut for `Color::rgb(0.0, 0.0, 1.0)`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":81997,"byte_end":82042,"line_start":139,"line_end":139,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":1301},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":87999,"byte_end":88009,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"DrawParams","qualname":"::graphics::drawable::DrawParams","value":"DrawParams { position, scale, origin, rotation, color, clip }","parent":null,"children":[{"krate":0,"index":1302},{"krate":0,"index":1303},{"krate":0,"index":1304},{"krate":0,"index":1305},{"krate":0,"index":1306},{"krate":0,"index":1307}],"decl_id":null,"docs":" Parameters that can be manipulated when drawing an object.","sig":null,"attributes":[{"value":"/ Parameters that can be manipulated when drawing an object.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":87715,"byte_end":87777,"line_start":5,"line_end":5,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":87778,"byte_end":87781,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ You can either use this as a builder by calling `DrawParams::new` and then chaining methods, or","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":87782,"byte_end":87881,"line_start":7,"line_end":7,"column_start":1,"column_end":100}},{"value":"/ construct it manually - whichever you find more pleasant to write.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":87882,"byte_end":87952,"line_start":8,"line_end":8,"column_start":1,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":1302},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":88104,"byte_end":88112,"line_start":12,"line_end":12,"column_start":9,"column_end":17},"name":"position","qualname":"::graphics::drawable::DrawParams::position","value":"vek::Vec2<f32>","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":" The position that the graphic should be drawn at. Defaults to `(0.0, 0.0)`.\n","sig":null,"attributes":[{"value":"/ The position that the graphic should be drawn at. Defaults to `(0.0, 0.0)`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":88016,"byte_end":88095,"line_start":11,"line_end":11,"column_start":5,"column_end":84}}]},{"kind":"Field","id":{"krate":0,"index":1303},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":88306,"byte_end":88311,"line_start":17,"line_end":17,"column_start":9,"column_end":14},"name":"scale","qualname":"::graphics::drawable::DrawParams::scale","value":"vek::Vec2<f32>","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":" The scale that the graphic should be drawn at. Defaults to `(1.0, 1.0)`.","sig":null,"attributes":[{"value":"/ The scale that the graphic should be drawn at. Defaults to `(1.0, 1.0)`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":88130,"byte_end":88206,"line_start":14,"line_end":14,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":88211,"byte_end":88214,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ This can be set to a negative value to flip the graphic around the origin.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":88219,"byte_end":88297,"line_start":16,"line_end":16,"column_start":5,"column_end":83}}]},{"kind":"Field","id":{"krate":0,"index":1304},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":88661,"byte_end":88667,"line_start":24,"line_end":24,"column_start":9,"column_end":15},"name":"origin","qualname":"::graphics::drawable::DrawParams::origin","value":"vek::Vec2<f32>","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":" The origin of the graphic. Defaults to `(0.0, 0.0)` (the top left).","sig":null,"attributes":[{"value":"/ The origin of the graphic. Defaults to `(0.0, 0.0)` (the top left).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":88329,"byte_end":88400,"line_start":19,"line_end":19,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":88405,"byte_end":88408,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ This offset is applied before scaling, rotation and positioning. For example, if you have","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":88413,"byte_end":88506,"line_start":21,"line_end":21,"column_start":5,"column_end":98}},{"value":"/ a 16x16 image and set the origin to [8.0, 8.0], subsequent transformations will be performed","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":88511,"byte_end":88607,"line_start":22,"line_end":22,"column_start":5,"column_end":101}},{"value":"/ relative to the center of the image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":88612,"byte_end":88652,"line_start":23,"line_end":23,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":1305},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":88757,"byte_end":88765,"line_start":27,"line_end":27,"column_start":9,"column_end":17},"name":"rotation","qualname":"::graphics::drawable::DrawParams::rotation","value":"f32","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":" The rotation of the graphic, in radians. Defaults to `0.0`.\n","sig":null,"attributes":[{"value":"/ The rotation of the graphic, in radians. Defaults to `0.0`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":88685,"byte_end":88748,"line_start":26,"line_end":26,"column_start":5,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":1306},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":88853,"byte_end":88858,"line_start":30,"line_end":30,"column_start":9,"column_end":14},"name":"color","qualname":"::graphics::drawable::DrawParams::color","value":"graphics::color::Color","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":" A color to multiply the graphic by. Defaults to `Color::WHITE`.\n","sig":null,"attributes":[{"value":"/ A color to multiply the graphic by. Defaults to `Color::WHITE`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":88777,"byte_end":88844,"line_start":29,"line_end":29,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":1307},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":89316,"byte_end":89320,"line_start":38,"line_end":38,"column_start":9,"column_end":13},"name":"clip","qualname":"::graphics::drawable::DrawParams::clip","value":"std::option::Option<graphics::rectangle::Rectangle>","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":" A sub-region of the graphic to draw. Defaults to `None`, which means the the full graphic will be drawn.","sig":null,"attributes":[{"value":"/ A sub-region of the graphic to draw. Defaults to `None`, which means the the full graphic will be drawn.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":88872,"byte_end":88980,"line_start":32,"line_end":32,"column_start":5,"column_end":113}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":88985,"byte_end":88988,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Note that clipped texture regions may 'bleed' when drawing at non-integer co-ordinates.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":88993,"byte_end":89084,"line_start":34,"line_end":34,"column_start":5,"column_end":96}},{"value":"/ To avoid this, either add one pixel of padding around the images in the texture atlas","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":89089,"byte_end":89178,"line_start":35,"line_end":35,"column_start":5,"column_end":94}},{"value":"/ (preferably matching the color of the actual border), or ensure your drawing is","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":89183,"byte_end":89266,"line_start":36,"line_end":36,"column_start":5,"column_end":88}},{"value":"/ clamped to integer co-ordinates.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":89271,"byte_end":89307,"line_start":37,"line_end":37,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":89416,"byte_end":89419,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<DrawParams>::new","value":"pub fn new() -> DrawParams","parent":null,"children":[],"decl_id":null,"docs":" Creates a new set of `DrawParams`.\n","sig":null,"attributes":[{"value":"/ Creates a new set of `DrawParams`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":89366,"byte_end":89404,"line_start":42,"line_end":42,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":89549,"byte_end":89557,"line_start":48,"line_end":48,"column_start":12,"column_end":20},"name":"position","qualname":"<DrawParams>::position","value":"pub fn position(Self, Vec2<f32>) -> DrawParams","parent":null,"children":[],"decl_id":null,"docs":" Sets the position that the graphic should be drawn at.\n","sig":null,"attributes":[{"value":"/ Sets the position that the graphic should be drawn at.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":89479,"byte_end":89537,"line_start":47,"line_end":47,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":89730,"byte_end":89735,"line_start":54,"line_end":54,"column_start":12,"column_end":17},"name":"scale","qualname":"<DrawParams>::scale","value":"pub fn scale(Self, Vec2<f32>) -> DrawParams","parent":null,"children":[],"decl_id":null,"docs":" Sets the scale that the graphic should be drawn at.\n","sig":null,"attributes":[{"value":"/ Sets the scale that the graphic should be drawn at.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":89663,"byte_end":89718,"line_start":53,"line_end":53,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":89879,"byte_end":89885,"line_start":60,"line_end":60,"column_start":12,"column_end":18},"name":"origin","qualname":"<DrawParams>::origin","value":"pub fn origin(Self, Vec2<f32>) -> DrawParams","parent":null,"children":[],"decl_id":null,"docs":" Sets the origin of the graphic.\n","sig":null,"attributes":[{"value":"/ Sets the origin of the graphic.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":89832,"byte_end":89867,"line_start":59,"line_end":59,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":90046,"byte_end":90054,"line_start":66,"line_end":66,"column_start":12,"column_end":20},"name":"rotation","qualname":"<DrawParams>::rotation","value":"pub fn rotation(Self, f32) -> DrawParams","parent":null,"children":[],"decl_id":null,"docs":" Sets the rotation of the graphic, in radians.\n","sig":null,"attributes":[{"value":"/ Sets the rotation of the graphic, in radians.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":89985,"byte_end":90034,"line_start":65,"line_end":65,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":90212,"byte_end":90217,"line_start":72,"line_end":72,"column_start":12,"column_end":17},"name":"color","qualname":"<DrawParams>::color","value":"pub fn color(Self, Color) -> DrawParams","parent":null,"children":[],"decl_id":null,"docs":" Sets the color to multiply the graphic by.\n","sig":null,"attributes":[{"value":"/ Sets the color to multiply the graphic by.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":90154,"byte_end":90200,"line_start":71,"line_end":71,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":90365,"byte_end":90369,"line_start":78,"line_end":78,"column_start":12,"column_end":16},"name":"clip","qualname":"<DrawParams>::clip","value":"pub fn clip(Self, Rectangle) -> DrawParams","parent":null,"children":[],"decl_id":null,"docs":" Sets the region of the graphic to draw.\n","sig":null,"attributes":[{"value":"/ Sets the region of the graphic to draw.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":90310,"byte_end":90353,"line_start":77,"line_end":77,"column_start":5,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":343},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":91149,"byte_end":91157,"line_start":110,"line_end":110,"column_start":11,"column_end":19},"name":"Drawable","qualname":"::graphics::drawable::Drawable","value":"Drawable","parent":null,"children":[{"krate":0,"index":344}],"decl_id":null,"docs":" Implemented for types that can be drawn.","sig":null,"attributes":[{"value":"/ Implemented for types that can be drawn.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":90963,"byte_end":91007,"line_start":106,"line_end":106,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":91008,"byte_end":91011,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [`graphics::draw`](fn.draw.html) can be used to draw without importing this trait, which is sometimes","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":91012,"byte_end":91117,"line_start":108,"line_end":108,"column_start":1,"column_end":106}},{"value":"/ more convienent.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":91118,"byte_end":91138,"line_start":109,"line_end":109,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":91550,"byte_end":91554,"line_start":116,"line_end":116,"column_start":8,"column_end":12},"name":"draw","qualname":"::graphics::drawable::Drawable::draw","value":"pub fn draw<P>(&Self, &mut Context, P) where P: Into<DrawParams>","parent":{"krate":0,"index":343},"children":[],"decl_id":null,"docs":" Draws `self` to the screen (or a canvas, if one is enabled), using the specified parameters.","sig":null,"attributes":[{"value":"/ Draws `self` to the screen (or a canvas, if one is enabled), using the specified parameters.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":91164,"byte_end":91260,"line_start":111,"line_end":111,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":91265,"byte_end":91268,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ Any type that implements `Into<DrawParams>` can be passed into this method. For example, since the majority","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":91273,"byte_end":91384,"line_start":113,"line_end":113,"column_start":5,"column_end":116}},{"value":"/ of the time, you only care about changing the position, a `Vec2` can be passed to set the position and leave","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":91389,"byte_end":91501,"line_start":114,"line_end":114,"column_start":5,"column_end":117}},{"value":"/ everything else as the defaults.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":91506,"byte_end":91542,"line_start":115,"line_end":115,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1316},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":92110,"byte_end":92119,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"Rectangle","qualname":"::graphics::rectangle::Rectangle","value":"Rectangle { x, y, width, height }","parent":null,"children":[{"krate":0,"index":1317},{"krate":0,"index":1318},{"krate":0,"index":1319},{"krate":0,"index":1320}],"decl_id":null,"docs":" A rectangle of `f32`s.","sig":null,"attributes":[{"value":"/ A rectangle of `f32`s.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":91780,"byte_end":91806,"line_start":3,"line_end":3,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":91807,"byte_end":91810,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Serde","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":91811,"byte_end":91822,"line_start":5,"line_end":5,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":91823,"byte_end":91826,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Serialization and deserialization of this type (via [Serde](https://serde.rs/))","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":91827,"byte_end":91910,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"/ can be enabled via the `serde_support` feature.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":91911,"byte_end":91962,"line_start":8,"line_end":8,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1317},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":92174,"byte_end":92175,"line_start":16,"line_end":16,"column_start":9,"column_end":10},"name":"x","qualname":"::graphics::rectangle::Rectangle::x","value":"f32","parent":{"krate":0,"index":1316},"children":[],"decl_id":null,"docs":" The X co-ordinate of the rectangle.\n","sig":null,"attributes":[{"value":"/ The X co-ordinate of the rectangle.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":92126,"byte_end":92165,"line_start":15,"line_end":15,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1318},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":92235,"byte_end":92236,"line_start":19,"line_end":19,"column_start":9,"column_end":10},"name":"y","qualname":"::graphics::rectangle::Rectangle::y","value":"f32","parent":{"krate":0,"index":1316},"children":[],"decl_id":null,"docs":" The Y co-ordinate of the rectangle.\n","sig":null,"attributes":[{"value":"/ The Y co-ordinate of the rectangle.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":92187,"byte_end":92226,"line_start":18,"line_end":18,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1319},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":92288,"byte_end":92293,"line_start":22,"line_end":22,"column_start":9,"column_end":14},"name":"width","qualname":"::graphics::rectangle::Rectangle::width","value":"f32","parent":{"krate":0,"index":1316},"children":[],"decl_id":null,"docs":" The width of the rectangle.\n","sig":null,"attributes":[{"value":"/ The width of the rectangle.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":92248,"byte_end":92279,"line_start":21,"line_end":21,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":1320},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":92346,"byte_end":92352,"line_start":25,"line_end":25,"column_start":9,"column_end":15},"name":"height","qualname":"::graphics::rectangle::Rectangle::height","value":"f32","parent":{"krate":0,"index":1316},"children":[],"decl_id":null,"docs":" The height of the rectangle.\n","sig":null,"attributes":[{"value":"/ The height of the rectangle.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":92305,"byte_end":92337,"line_start":24,"line_end":24,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":92431,"byte_end":92434,"line_start":30,"line_end":30,"column_start":18,"column_end":21},"name":"new","qualname":"<Rectangle>::new","value":"pub const fn new(f32, f32, f32, f32) -> Rectangle","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Rectangle`.\n","sig":null,"attributes":[{"value":"/ Creates a new `Rectangle`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":92383,"byte_end":92413,"line_start":29,"line_end":29,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":93216,"byte_end":93219,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"row","qualname":"<Rectangle>::row","value":"pub fn row(f32, f32, f32, f32) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an infinite iterator of horizontally adjecent rectangles, starting at the specified\n point and increasing along the X axis.","sig":null,"attributes":[{"value":"/ Returns an infinite iterator of horizontally adjecent rectangles, starting at the specified","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":92601,"byte_end":92696,"line_start":39,"line_end":39,"column_start":5,"column_end":100}},{"value":"/ point and increasing along the X axis.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":92701,"byte_end":92743,"line_start":40,"line_end":40,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":92748,"byte_end":92751,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ This can be useful when slicing spritesheets.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":92756,"byte_end":92805,"line_start":42,"line_end":42,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":92810,"byte_end":92813,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":92818,"byte_end":92832,"line_start":44,"line_end":44,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":92837,"byte_end":92844,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ # use tetra::graphics::Rectangle;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":92849,"byte_end":92886,"line_start":46,"line_end":46,"column_start":5,"column_end":42}},{"value":"/ let rects: Vec<Rectangle> = Rectangle::row(0.0, 0.0, 16.0, 16.0).take(3).collect();","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":92891,"byte_end":92978,"line_start":47,"line_end":47,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":92983,"byte_end":92986,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Rectangle::new(0.0, 0.0, 16.0, 16.0), rects[0]);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":92991,"byte_end":93054,"line_start":49,"line_end":49,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(Rectangle::new(16.0, 0.0, 16.0, 16.0), rects[1]);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":93059,"byte_end":93123,"line_start":50,"line_end":50,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(Rectangle::new(32.0, 0.0, 16.0, 16.0), rects[2]);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":93128,"byte_end":93192,"line_start":51,"line_end":51,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":93197,"byte_end":93204,"line_start":52,"line_end":52,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":94018,"byte_end":94024,"line_start":73,"line_end":73,"column_start":12,"column_end":18},"name":"column","qualname":"<Rectangle>::column","value":"pub fn column(f32, f32, f32, f32) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an infinite iterator of vertically adjecent rectangles, starting at the specified\n point and increasing along the Y axis.","sig":null,"attributes":[{"value":"/ Returns an infinite iterator of vertically adjecent rectangles, starting at the specified","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":93402,"byte_end":93495,"line_start":59,"line_end":59,"column_start":5,"column_end":98}},{"value":"/ point and increasing along the Y axis.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":93500,"byte_end":93542,"line_start":60,"line_end":60,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":93547,"byte_end":93550,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ This can be useful when slicing spritesheets.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":93555,"byte_end":93604,"line_start":62,"line_end":62,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":93609,"byte_end":93612,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":93617,"byte_end":93631,"line_start":64,"line_end":64,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":93636,"byte_end":93643,"line_start":65,"line_end":65,"column_start":5,"column_end":12}},{"value":"/ # use tetra::graphics::Rectangle;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":93648,"byte_end":93685,"line_start":66,"line_end":66,"column_start":5,"column_end":42}},{"value":"/ let rects: Vec<Rectangle> = Rectangle::column(0.0, 0.0, 16.0, 16.0).take(3).collect();","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":93690,"byte_end":93780,"line_start":67,"line_end":67,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":93785,"byte_end":93788,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Rectangle::new(0.0, 0.0, 16.0, 16.0), rects[0]);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":93793,"byte_end":93856,"line_start":69,"line_end":69,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(Rectangle::new(0.0, 16.0, 16.0, 16.0), rects[1]);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":93861,"byte_end":93925,"line_start":70,"line_end":70,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(Rectangle::new(0.0, 32.0, 16.0, 16.0), rects[2]);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":93930,"byte_end":93994,"line_start":71,"line_end":71,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":93999,"byte_end":94006,"line_start":72,"line_end":72,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":94289,"byte_end":94299,"line_start":80,"line_end":80,"column_start":12,"column_end":22},"name":"intersects","qualname":"<Rectangle>::intersects","value":"pub fn intersects(&Self, &Rectangle) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `other` rectangle intersects with `self`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `other` rectangle intersects with `self`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":94210,"byte_end":94277,"line_start":79,"line_end":79,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":94613,"byte_end":94621,"line_start":88,"line_end":88,"column_start":12,"column_end":20},"name":"contains","qualname":"<Rectangle>::contains","value":"pub fn contains(&Self, &Rectangle) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `other` rectangle is fully contained within `self`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `other` rectangle is fully contained within `self`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":94524,"byte_end":94601,"line_start":87,"line_end":87,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":94934,"byte_end":94948,"line_start":96,"line_end":96,"column_start":12,"column_end":26},"name":"contains_point","qualname":"<Rectangle>::contains_point","value":"pub fn contains_point(&Self, Vec2<f32>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the provided point is within the bounds of `self`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the provided point is within the bounds of `self`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":94850,"byte_end":94922,"line_start":95,"line_end":95,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":95352,"byte_end":95356,"line_start":107,"line_end":107,"column_start":12,"column_end":16},"name":"left","qualname":"<Rectangle>::left","value":"pub fn left(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the X co-ordinate of the left side of the rectangle.","sig":null,"attributes":[{"value":"/ Returns the X co-ordinate of the left side of the rectangle.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":95145,"byte_end":95209,"line_start":103,"line_end":103,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":95214,"byte_end":95217,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ You can also obtain this via the `x` field - this method is provided for","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":95222,"byte_end":95298,"line_start":105,"line_end":105,"column_start":5,"column_end":81}},{"value":"/ symmetry with the `right` method.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":95303,"byte_end":95340,"line_start":106,"line_end":106,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":95476,"byte_end":95481,"line_start":112,"line_end":112,"column_start":12,"column_end":17},"name":"right","qualname":"<Rectangle>::right","value":"pub fn right(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the X co-ordinate of the right side of the rectangle.\n","sig":null,"attributes":[{"value":"/ Returns the X co-ordinate of the right side of the rectangle.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":95399,"byte_end":95464,"line_start":111,"line_end":111,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":95739,"byte_end":95742,"line_start":120,"line_end":120,"column_start":12,"column_end":15},"name":"top","qualname":"<Rectangle>::top","value":"pub fn top(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the Y co-ordinate of the top of the rectangle.","sig":null,"attributes":[{"value":"/ Returns the Y co-ordinate of the top of the rectangle.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":95537,"byte_end":95595,"line_start":116,"line_end":116,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":95600,"byte_end":95603,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ You can also obtain this via the `y` field - this method is provided for","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":95608,"byte_end":95684,"line_start":118,"line_end":118,"column_start":5,"column_end":81}},{"value":"/ symmetry with the `bottom` method.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":95689,"byte_end":95727,"line_start":119,"line_end":119,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":95858,"byte_end":95864,"line_start":125,"line_end":125,"column_start":12,"column_end":18},"name":"bottom","qualname":"<Rectangle>::bottom","value":"pub fn bottom(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the Y co-ordinate of the bottom of the rectangle.\n","sig":null,"attributes":[{"value":"/ Returns the Y co-ordinate of the bottom of the rectangle.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":95785,"byte_end":95846,"line_start":124,"line_end":124,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":95999,"byte_end":96005,"line_start":130,"line_end":130,"column_start":12,"column_end":18},"name":"center","qualname":"<Rectangle>::center","value":"pub fn center(&Self) -> Vec2<f32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the co-ordinates of the center point of the rectangle.\n","sig":null,"attributes":[{"value":"/ Returns the co-ordinates of the center point of the rectangle.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":95921,"byte_end":95987,"line_start":129,"line_end":129,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":96196,"byte_end":96204,"line_start":135,"line_end":135,"column_start":12,"column_end":20},"name":"top_left","qualname":"<Rectangle>::top_left","value":"pub fn top_left(&Self) -> Vec2<f32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the co-ordinates of the top-left point of the rectangle.\n","sig":null,"attributes":[{"value":"/ Returns the co-ordinates of the top-left point of the rectangle.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":96116,"byte_end":96184,"line_start":134,"line_end":134,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":96353,"byte_end":96362,"line_start":140,"line_end":140,"column_start":12,"column_end":21},"name":"top_right","qualname":"<Rectangle>::top_right","value":"pub fn top_right(&Self) -> Vec2<f32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the co-ordinates of the top-right point of the rectangle.\n","sig":null,"attributes":[{"value":"/ Returns the co-ordinates of the top-right point of the rectangle.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":96272,"byte_end":96341,"line_start":139,"line_end":139,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":96519,"byte_end":96530,"line_start":145,"line_end":145,"column_start":12,"column_end":23},"name":"bottom_left","qualname":"<Rectangle>::bottom_left","value":"pub fn bottom_left(&Self) -> Vec2<f32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the co-ordinates of the bottom-left point of the rectangle.\n","sig":null,"attributes":[{"value":"/ Returns the co-ordinates of the bottom-left point of the rectangle.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":96436,"byte_end":96507,"line_start":144,"line_end":144,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":96689,"byte_end":96701,"line_start":150,"line_end":150,"column_start":12,"column_end":24},"name":"bottom_right","qualname":"<Rectangle>::bottom_right","value":"pub fn bottom_right(&Self) -> Vec2<f32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the co-ordinates of the bottom-right point of the rectangle.\n","sig":null,"attributes":[{"value":"/ Returns the co-ordinates of the bottom-right point of the rectangle.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":96605,"byte_end":96677,"line_start":149,"line_end":149,"column_start":5,"column_end":77}}]},{"kind":"Mod","id":{"krate":0,"index":372},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"scaling","qualname":"::graphics::scaling","value":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","parent":null,"children":[{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":1342},{"krate":0,"index":1348},{"krate":0,"index":384},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":1350},{"krate":0,"index":1369},{"krate":0,"index":1368},{"krate":0,"index":1366},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":401}],"decl_id":null,"docs":" Functions and types relating to screen scaling.\n","sig":null,"attributes":[{"value":"/ Functions and types relating to screen scaling.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":99628,"byte_end":99679,"line_start":1,"line_end":1,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1342},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":100183,"byte_end":100195,"line_start":18,"line_end":18,"column_start":12,"column_end":24},"name":"ScreenScaler","qualname":"::graphics::scaling::ScreenScaler","value":"ScreenScaler {  }","parent":null,"children":[{"krate":0,"index":1343},{"krate":0,"index":1344},{"krate":0,"index":1345},{"krate":0,"index":1346},{"krate":0,"index":1347}],"decl_id":null,"docs":" A wrapper for a `Canvas` that handles scaling the image to fit the screen.","sig":null,"attributes":[{"value":"/ A wrapper for a `Canvas` that handles scaling the image to fit the screen.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":99858,"byte_end":99936,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":99937,"byte_end":99940,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":99941,"byte_end":99955,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":99956,"byte_end":99959,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The [`scaling`](https://github.com/17cupsofcoffee/tetra/blob/main/examples/scaling.rs)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":99960,"byte_end":100050,"line_start":14,"line_end":14,"column_start":1,"column_end":91}},{"value":"/ example demonstrates how to use a `ScreenScaler` with each of the different","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":100051,"byte_end":100130,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ scaling algorithms.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":100131,"byte_end":100154,"line_start":16,"line_end":16,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":100514,"byte_end":100517,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<ScreenScaler>::new","value":"pub fn new(&mut Context, i32, i32, i32, i32, ScalingMode)\n-> Result<ScreenScaler>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `ScreenScaler`, with the specified inner and outer width and height.\n The mode will determine how the image is scaled to fit the screen.\n","sig":null,"attributes":[{"value":"/ Returns a new `ScreenScaler`, with the specified inner and outer width and height.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":100341,"byte_end":100427,"line_start":27,"line_end":27,"column_start":5,"column_end":91}},{"value":"/ The mode will determine how the image is scaled to fit the screen.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":100432,"byte_end":100502,"line_start":28,"line_end":28,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":101216,"byte_end":101232,"line_start":52,"line_end":52,"column_start":12,"column_end":28},"name":"with_window_size","qualname":"<ScreenScaler>::with_window_size","value":"pub fn with_window_size(&mut Context, i32, i32, ScalingMode)\n-> Result<ScreenScaler>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `ScreenScaler`, with the specified inner width and height, and the outer\n size set to the current dimensions of the window.\n","sig":null,"attributes":[{"value":"/ Returns a new `ScreenScaler`, with the specified inner width and height, and the outer","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":101056,"byte_end":101146,"line_start":50,"line_end":50,"column_start":5,"column_end":95}},{"value":"/ size set to the current dimensions of the window.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":101151,"byte_end":101204,"line_start":51,"line_end":51,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":101752,"byte_end":101766,"line_start":72,"line_end":72,"column_start":12,"column_end":26},"name":"set_outer_size","qualname":"<ScreenScaler>::set_outer_size","value":"pub fn set_outer_size(&mut Self, i32, i32)","parent":null,"children":[],"decl_id":null,"docs":" Updates the scaler's outer size (i.e. the size of the box that the screen will be scaled to\n fit within).\n","sig":null,"attributes":[{"value":"/ Updates the scaler's outer size (i.e. the size of the box that the screen will be scaled to","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":101624,"byte_end":101719,"line_start":70,"line_end":70,"column_start":5,"column_end":100}},{"value":"/ fit within).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":101724,"byte_end":101740,"line_start":71,"line_end":71,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":102310,"byte_end":102316,"line_start":88,"line_end":88,"column_start":12,"column_end":18},"name":"canvas","qualname":"<ScreenScaler>::canvas","value":"pub fn canvas(&Self) -> &Canvas","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the canvas that is being scaled.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the canvas that is being scaled.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":102239,"byte_end":102298,"line_start":87,"line_end":87,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":102418,"byte_end":102422,"line_start":93,"line_end":93,"column_start":12,"column_end":16},"name":"mode","qualname":"<ScreenScaler>::mode","value":"pub fn mode(&Self) -> ScalingMode","parent":null,"children":[],"decl_id":null,"docs":" Returns the current scaling mode.\n","sig":null,"attributes":[{"value":"/ Returns the current scaling mode.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":102369,"byte_end":102406,"line_start":92,"line_end":92,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":102534,"byte_end":102542,"line_start":98,"line_end":98,"column_start":12,"column_end":20},"name":"set_mode","qualname":"<ScreenScaler>::set_mode","value":"pub fn set_mode(&mut Self, ScalingMode)","parent":null,"children":[],"decl_id":null,"docs":" Sets the scaling mode that should be used.\n","sig":null,"attributes":[{"value":"/ Sets the scaling mode that should be used.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":102476,"byte_end":102522,"line_start":97,"line_end":97,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":102910,"byte_end":102917,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"project","qualname":"<ScreenScaler>::project","value":"pub fn project(&Self, Vec2<f32>) -> Vec2<f32>","parent":null,"children":[],"decl_id":null,"docs":" Converts a point from window co-ordinates to scaled screen co-ordinates.\n","sig":null,"attributes":[{"value":"/ Converts a point from window co-ordinates to scaled screen co-ordinates.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":102822,"byte_end":102898,"line_start":109,"line_end":109,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":103494,"byte_end":103503,"line_start":130,"line_end":130,"column_start":12,"column_end":21},"name":"unproject","qualname":"<ScreenScaler>::unproject","value":"pub fn unproject(&Self, Vec2<f32>) -> Vec2<f32>","parent":null,"children":[],"decl_id":null,"docs":" Converts a point from scaled screen co-ordinates to window co-ordinates.\n","sig":null,"attributes":[{"value":"/ Converts a point from scaled screen co-ordinates to window co-ordinates.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":103406,"byte_end":103482,"line_start":129,"line_end":129,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":104167,"byte_end":104181,"line_start":152,"line_end":152,"column_start":12,"column_end":26},"name":"mouse_position","qualname":"<ScreenScaler>::mouse_position","value":"pub fn mouse_position(&Self, &Context) -> Vec2<f32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the position of the mouse in scaled screen co-ordinates.","sig":null,"attributes":[{"value":"/ Returns the position of the mouse in scaled screen co-ordinates.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":103996,"byte_end":104064,"line_start":149,"line_end":149,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":104069,"byte_end":104072,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ This is a shortcut for calling `.project(input::get_mouse_position(ctx))`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":104077,"byte_end":104155,"line_start":151,"line_end":151,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":104460,"byte_end":104467,"line_start":159,"line_end":159,"column_start":12,"column_end":19},"name":"mouse_x","qualname":"<ScreenScaler>::mouse_x","value":"pub fn mouse_x(&Self, &Context) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the X co-ordinate of the mouse in scaled screen co-ordinates.","sig":null,"attributes":[{"value":"/ Returns the X co-ordinate of the mouse in scaled screen co-ordinates.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":104283,"byte_end":104356,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":104361,"byte_end":104364,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ This is a shortcut for calling `project(input::get_mouse_position(ctx)).x`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":104369,"byte_end":104448,"line_start":158,"line_end":158,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":104894,"byte_end":104901,"line_start":173,"line_end":173,"column_start":12,"column_end":19},"name":"mouse_y","qualname":"<ScreenScaler>::mouse_y","value":"pub fn mouse_y(&Self, &Context) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the Y co-ordinate of the mouse in scaled screen co-ordinates.","sig":null,"attributes":[{"value":"/ Returns the Y co-ordinate of the mouse in scaled screen co-ordinates.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":104717,"byte_end":104790,"line_start":170,"line_end":170,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":104795,"byte_end":104798,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ This is a shortcut for calling `project(input::get_mouse_position(ctx)).y`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":104803,"byte_end":104882,"line_start":172,"line_end":172,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1351},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":106369,"byte_end":106374,"line_start":221,"line_end":221,"column_start":5,"column_end":10},"name":"Fixed","qualname":"::graphics::scaling::ScalingMode::Fixed","value":"ScalingMode::Fixed","parent":{"krate":0,"index":1350},"children":[],"decl_id":null,"docs":" The game will always be displayed at its native resolution, with no scaling applied.\n If the window is bigger than the native resolution, letterboxing will be applied.\n If the window is smaller than the native resolution, it will be cropped.\n","sig":null,"attributes":[{"value":"/ The game will always be displayed at its native resolution, with no scaling applied.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":106105,"byte_end":106193,"line_start":218,"line_end":218,"column_start":5,"column_end":93}},{"value":"/ If the window is bigger than the native resolution, letterboxing will be applied.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":106198,"byte_end":106283,"line_start":219,"line_end":219,"column_start":5,"column_end":90}},{"value":"/ If the window is smaller than the native resolution, it will be cropped.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":106288,"byte_end":106364,"line_start":220,"line_end":220,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1353},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":106543,"byte_end":106550,"line_start":225,"line_end":225,"column_start":5,"column_end":12},"name":"Stretch","qualname":"::graphics::scaling::ScalingMode::Stretch","value":"ScalingMode::Stretch","parent":{"krate":0,"index":1350},"children":[],"decl_id":null,"docs":" The screen will be stretched to fill the window, without trying to preserve the original\n aspect ratio. Distortion/stretching/squashing may occur.\n","sig":null,"attributes":[{"value":"/ The screen will be stretched to fill the window, without trying to preserve the original","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":106381,"byte_end":106473,"line_start":223,"line_end":223,"column_start":5,"column_end":97}},{"value":"/ aspect ratio. Distortion/stretching/squashing may occur.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":106478,"byte_end":106538,"line_start":224,"line_end":224,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1355},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":106699,"byte_end":106706,"line_start":229,"line_end":229,"column_start":5,"column_end":12},"name":"ShowAll","qualname":"::graphics::scaling::ScalingMode::ShowAll","value":"ScalingMode::ShowAll","parent":{"krate":0,"index":1350},"children":[],"decl_id":null,"docs":" The entire screen will be displayed as large as possible while maintaining the original\n aspect ratio. Letterboxing may occur.\n","sig":null,"attributes":[{"value":"/ The entire screen will be displayed as large as possible while maintaining the original","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":106557,"byte_end":106648,"line_start":227,"line_end":227,"column_start":5,"column_end":96}},{"value":"/ aspect ratio. Letterboxing may occur.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":106653,"byte_end":106694,"line_start":228,"line_end":228,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1357},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":106787,"byte_end":106806,"line_start":232,"line_end":232,"column_start":5,"column_end":24},"name":"ShowAllPixelPerfect","qualname":"::graphics::scaling::ScalingMode::ShowAllPixelPerfect","value":"ScalingMode::ShowAllPixelPerfect","parent":{"krate":0,"index":1350},"children":[],"decl_id":null,"docs":" Works the same as ShowAll, but will only scale by integer values.\n","sig":null,"attributes":[{"value":"/ Works the same as ShowAll, but will only scale by integer values.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":106713,"byte_end":106782,"line_start":231,"line_end":231,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1359},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":106938,"byte_end":106942,"line_start":236,"line_end":236,"column_start":5,"column_end":9},"name":"Crop","qualname":"::graphics::scaling::ScalingMode::Crop","value":"ScalingMode::Crop","parent":{"krate":0,"index":1350},"children":[],"decl_id":null,"docs":" The screen will fill the entire window, maintaining the original aspect ratio but\n potentially being cropped.\n","sig":null,"attributes":[{"value":"/ The screen will fill the entire window, maintaining the original aspect ratio but","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":106813,"byte_end":106898,"line_start":234,"line_end":234,"column_start":5,"column_end":90}},{"value":"/ potentially being cropped.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":106903,"byte_end":106933,"line_start":235,"line_end":235,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1361},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":107020,"byte_end":107036,"line_start":239,"line_end":239,"column_start":5,"column_end":21},"name":"CropPixelPerfect","qualname":"::graphics::scaling::ScalingMode::CropPixelPerfect","value":"ScalingMode::CropPixelPerfect","parent":{"krate":0,"index":1350},"children":[],"decl_id":null,"docs":" Works the same as Crop, but will only scale by integer values.\n","sig":null,"attributes":[{"value":"/ Works the same as Crop, but will only scale by integer values.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":106949,"byte_end":107015,"line_start":238,"line_end":238,"column_start":5,"column_end":71}}]},{"kind":"Enum","id":{"krate":0,"index":1350},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":106087,"byte_end":106098,"line_start":217,"line_end":217,"column_start":10,"column_end":21},"name":"ScalingMode","qualname":"::graphics::scaling::ScalingMode","value":"pub enum ScalingMode {\n\n    /// The game will always be displayed at its native resolution, with no scaling applied.\n    /// If the window is bigger than the native resolution, letterboxing will be applied.\n    /// If the window is smaller than the native resolution, it will be cropped.\n    Fixed,\n\n    /// The screen will be stretched to fill the window, without trying to preserve the original\n    /// aspect ratio. Distortion/stretching/squashing may occur.\n    Stretch,\n\n    /// The entire screen will be displayed as large as possible while maintaining the original\n    /// aspect ratio. Letterboxing may occur.\n    ShowAll,\n\n    /// Works the same as ShowAll, but will only scale by integer values.\n    ShowAllPixelPerfect,\n\n    /// The screen will fill the entire window, maintaining the original aspect ratio but\n    /// potentially being cropped.\n    Crop,\n\n    /// Works the same as Crop, but will only scale by integer values.\n    CropPixelPerfect,\n}","parent":null,"children":[{"krate":0,"index":1351},{"krate":0,"index":1353},{"krate":0,"index":1355},{"krate":0,"index":1357},{"krate":0,"index":1359},{"krate":0,"index":1361}],"decl_id":null,"docs":" Algorithms that can be used to scale the game's screen.\n","sig":null,"attributes":[{"value":"/ Algorithms that can be used to scale the game's screen.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":105977,"byte_end":106036,"line_start":215,"line_end":215,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":401},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":107299,"byte_end":107314,"line_start":246,"line_end":246,"column_start":8,"column_end":23},"name":"get_screen_rect","qualname":"::graphics::scaling::get_screen_rect","value":"pub fn get_screen_rect(ScalingMode, i32, i32, i32, i32) -> Rectangle","parent":null,"children":[],"decl_id":null,"docs":" Converts a screen's dimensions into a rectangle that is scaled to fit in the given bounds.","sig":null,"attributes":[{"value":"/ Converts a screen's dimensions into a rectangle that is scaled to fit in the given bounds.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":107041,"byte_end":107135,"line_start":242,"line_end":242,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":107136,"byte_end":107139,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ This function may be useful if you want to use Tetra's scaling algorithms, but","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":107140,"byte_end":107222,"line_start":244,"line_end":244,"column_start":1,"column_end":83}},{"value":"/ the built-in `ScreenScaler` abstraction does not fit your needs.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":107223,"byte_end":107291,"line_start":245,"line_end":245,"column_start":1,"column_end":69}}]},{"kind":"Const","id":{"krate":0,"index":425},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":111921,"byte_end":111942,"line_start":19,"line_end":19,"column_start":11,"column_end":32},"name":"DEFAULT_VERTEX_SHADER","qualname":"::graphics::shader::DEFAULT_VERTEX_SHADER","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" The default vertex shader.","sig":null,"attributes":[{"value":"/ The default vertex shader.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":111716,"byte_end":111746,"line_start":16,"line_end":16,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":111747,"byte_end":111750,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The source code for this shader is available in [`src/resources/shader.vert`](https://github.com/17cupsofcoffee/tetra/blob/main/src/resources/shader.vert).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":111751,"byte_end":111910,"line_start":18,"line_end":18,"column_start":1,"column_end":160}}]},{"kind":"Const","id":{"krate":0,"index":426},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":112201,"byte_end":112224,"line_start":24,"line_end":24,"column_start":11,"column_end":34},"name":"DEFAULT_FRAGMENT_SHADER","qualname":"::graphics::shader::DEFAULT_FRAGMENT_SHADER","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" The default fragment shader.","sig":null,"attributes":[{"value":"/ The default fragment shader.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":111994,"byte_end":112026,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":112027,"byte_end":112030,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The source code for this shader is available in [`src/resources/shader.vert`](https://github.com/17cupsofcoffee/tetra/blob/main/src/resources/shader.frag).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":112031,"byte_end":112190,"line_start":23,"line_end":23,"column_start":1,"column_end":160}}]},{"kind":"Struct","id":{"krate":0,"index":1382},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":114722,"byte_end":114728,"line_start":91,"line_end":91,"column_start":12,"column_end":18},"name":"Shader","qualname":"::graphics::shader::Shader","value":"Shader {  }","parent":null,"children":[{"krate":0,"index":1383}],"decl_id":null,"docs":" A shader program, consisting of a vertex shader and a fragment shader.","sig":null,"attributes":[{"value":"/ A shader program, consisting of a vertex shader and a fragment shader.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":112710,"byte_end":112784,"line_start":45,"line_end":45,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":112785,"byte_end":112788,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Data Format","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":112789,"byte_end":112806,"line_start":47,"line_end":47,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":112807,"byte_end":112810,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Shaders are written using [GLSL](https://en.wikipedia.org/wiki/OpenGL_Shading_Language).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":112811,"byte_end":112903,"line_start":49,"line_end":49,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":112904,"byte_end":112907,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ## Vertex Shaders","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":112908,"byte_end":112929,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":112930,"byte_end":112933,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Vertex shaders take in data via three attributes:","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":112934,"byte_end":112987,"line_start":53,"line_end":53,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":112988,"byte_end":112991,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ * `a_position` - A `vec2` representing the position of the vertex in world space.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":112992,"byte_end":113077,"line_start":55,"line_end":55,"column_start":1,"column_end":86}},{"value":"/ * `a_uv` - A `vec2` representing the texture co-ordinates that are associated with the vertex.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":113078,"byte_end":113176,"line_start":56,"line_end":56,"column_start":1,"column_end":99}},{"value":"/ * `a_color` - A `vec4` representing a color to multiply the output by.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":113177,"byte_end":113251,"line_start":57,"line_end":57,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":113252,"byte_end":113255,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ Position data should be output as a `vec4` to the built-in `gl_Position` variable.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":113256,"byte_end":113342,"line_start":59,"line_end":59,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":113343,"byte_end":113346,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ## Fragment Shaders","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":113347,"byte_end":113370,"line_start":61,"line_end":61,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":113371,"byte_end":113374,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ Color data should be output as a `vec4` to the first output of the shader. This can be the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":113375,"byte_end":113469,"line_start":63,"line_end":63,"column_start":1,"column_end":95}},{"value":"/ built-in `gl_FragColor` variable, if you so desire.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":113470,"byte_end":113525,"line_start":64,"line_end":64,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":113526,"byte_end":113529,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ## Uniforms","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":113530,"byte_end":113545,"line_start":66,"line_end":66,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":113546,"byte_end":113549,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ By default, the shader is provided with two uniform variables:","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":113550,"byte_end":113616,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":113617,"byte_end":113620,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ * `u_projection` - A `mat4` which can be used to translate world space co-ordinates into screen space.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":113621,"byte_end":113727,"line_start":70,"line_end":70,"column_start":1,"column_end":107}},{"value":"/ * `u_texture` - A `sampler2D` which can be used to access color data from the currently active texture.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":113728,"byte_end":113835,"line_start":71,"line_end":71,"column_start":1,"column_end":108}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":113836,"byte_end":113839,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ You can also set data into your own uniform variables via the `set_uniform` method.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":113840,"byte_end":113927,"line_start":73,"line_end":73,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":113928,"byte_end":113931,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ # Performance","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":113932,"byte_end":113949,"line_start":75,"line_end":75,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":113950,"byte_end":113953,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ Creating a `Shader` is a relatively expensive operation. If you can, store them in your `State`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":113954,"byte_end":114053,"line_start":77,"line_end":77,"column_start":1,"column_end":100}},{"value":"/ struct rather than recreating them each frame.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":114054,"byte_end":114104,"line_start":78,"line_end":78,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":114105,"byte_end":114108,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ Cloning a `Shader` is a very cheap operation, as the underlying data is shared between the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":114109,"byte_end":114203,"line_start":80,"line_end":80,"column_start":1,"column_end":95}},{"value":"/ original instance and the clone via [reference-counting](https://doc.rust-lang.org/std/rc/struct.Rc.html).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":114204,"byte_end":114314,"line_start":81,"line_end":81,"column_start":1,"column_end":111}},{"value":"/ This does mean, however, that updating a `Shader` (for example, setting a uniform) will also","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":114315,"byte_end":114411,"line_start":82,"line_end":82,"column_start":1,"column_end":97}},{"value":"/ update any other clones of that `Shader`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":114412,"byte_end":114457,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":114458,"byte_end":114461,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":114462,"byte_end":114476,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":114477,"byte_end":114480,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ The [`shaders`](https://github.com/17cupsofcoffee/tetra/blob/main/examples/shaders.rs)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":114481,"byte_end":114571,"line_start":87,"line_end":87,"column_start":1,"column_end":91}},{"value":"/ example demonstrates how to draw using a custom shader, supplying inputs via uniform","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":114572,"byte_end":114660,"line_start":88,"line_end":88,"column_start":1,"column_end":89}},{"value":"/ variables.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":114661,"byte_end":114675,"line_start":89,"line_end":89,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":115186,"byte_end":115189,"line_start":103,"line_end":103,"column_start":12,"column_end":15},"name":"new","qualname":"<Shader>::new","value":"pub fn new<P>(&mut Context, P, P) -> Result<Shader> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new shader program from the given files.","sig":null,"attributes":[{"value":"/ Creates a new shader program from the given files.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":114795,"byte_end":114849,"line_start":96,"line_end":96,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":114854,"byte_end":114857,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":114862,"byte_end":114874,"line_start":98,"line_end":98,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":114879,"byte_end":114882,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ * `TetraError::PlatformError` will be returned if the underlying graphics API encounters an error.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":114887,"byte_end":114989,"line_start":100,"line_end":100,"column_start":5,"column_end":107}},{"value":"/ * `TetraError::FailedToLoadAsset` will be returned if the files could not be loaded.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":114994,"byte_end":115082,"line_start":101,"line_end":101,"column_start":5,"column_end":93}},{"value":"/ * `TetraError::InvalidShader` will be returned if the shader could not be compiled.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":115087,"byte_end":115174,"line_start":102,"line_end":102,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":115940,"byte_end":115956,"line_start":123,"line_end":123,"column_start":12,"column_end":28},"name":"from_vertex_file","qualname":"<Shader>::from_vertex_file","value":"pub fn from_vertex_file<P>(&mut Context, P) -> Result<Shader> where\nP: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new shader program from the given vertex shader file.","sig":null,"attributes":[{"value":"/ Creates a new shader program from the given vertex shader file.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":115479,"byte_end":115546,"line_start":114,"line_end":114,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":115551,"byte_end":115554,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ The default fragment shader will be used.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":115559,"byte_end":115604,"line_start":116,"line_end":116,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":115609,"byte_end":115612,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":115617,"byte_end":115629,"line_start":118,"line_end":118,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":115634,"byte_end":115637,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ * `TetraError::PlatformError` will be returned if the underlying graphics API encounters an error.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":115642,"byte_end":115744,"line_start":120,"line_end":120,"column_start":5,"column_end":107}},{"value":"/ * `TetraError::FailedToLoadAsset` will be returned if the file could not be loaded.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":115749,"byte_end":115836,"line_start":121,"line_end":121,"column_start":5,"column_end":92}},{"value":"/ * `TetraError::InvalidShader` will be returned if the shader could not be compiled.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":115841,"byte_end":115928,"line_start":122,"line_end":122,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":116663,"byte_end":116681,"line_start":143,"line_end":143,"column_start":12,"column_end":30},"name":"from_fragment_file","qualname":"<Shader>::from_fragment_file","value":"pub fn from_fragment_file<P>(&mut Context, P) -> Result<Shader> where\nP: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new shader program from the given fragment shader file.","sig":null,"attributes":[{"value":"/ Creates a new shader program from the given fragment shader file.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":116202,"byte_end":116271,"line_start":134,"line_end":134,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":116276,"byte_end":116279,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ The default vertex shader will be used.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":116284,"byte_end":116327,"line_start":136,"line_end":136,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":116332,"byte_end":116335,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":116340,"byte_end":116352,"line_start":138,"line_end":138,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":116357,"byte_end":116360,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ * `TetraError::PlatformError` will be returned if the underlying graphics API encounters an error.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":116365,"byte_end":116467,"line_start":140,"line_end":140,"column_start":5,"column_end":107}},{"value":"/ * `TetraError::FailedToLoadAsset` will be returned if the file could not be loaded.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":116472,"byte_end":116559,"line_start":141,"line_end":141,"column_start":5,"column_end":92}},{"value":"/ * `TetraError::InvalidShader` will be returned if the shader could not be compiled.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":116564,"byte_end":116651,"line_start":142,"line_end":142,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":117225,"byte_end":117236,"line_start":160,"line_end":160,"column_start":12,"column_end":23},"name":"from_string","qualname":"<Shader>::from_string","value":"pub fn from_string(&mut Context, &str, &str) -> Result<Shader>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new shader program from the given strings.","sig":null,"attributes":[{"value":"/ Creates a new shader program from the given strings.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":116925,"byte_end":116981,"line_start":154,"line_end":154,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":116986,"byte_end":116989,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":116994,"byte_end":117006,"line_start":156,"line_end":156,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":117011,"byte_end":117014,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ * `TetraError::PlatformError` will be returned if the underlying graphics API encounters an error.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":117019,"byte_end":117121,"line_start":158,"line_end":158,"column_start":5,"column_end":107}},{"value":"/ * `TetraError::InvalidShader` will be returned if the shader could not be compiled.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":117126,"byte_end":117213,"line_start":159,"line_end":159,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":117810,"byte_end":117828,"line_start":176,"line_end":176,"column_start":12,"column_end":30},"name":"from_vertex_string","qualname":"<Shader>::from_vertex_string","value":"pub fn from_vertex_string<P>(&mut Context, &str) -> Result<Shader>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new shader program from the given vertex shader string.","sig":null,"attributes":[{"value":"/ Creates a new shader program from the given vertex shader string.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":117439,"byte_end":117508,"line_start":168,"line_end":168,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":117513,"byte_end":117516,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The default fragment shader will be used.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":117521,"byte_end":117566,"line_start":170,"line_end":170,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":117571,"byte_end":117574,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":117579,"byte_end":117591,"line_start":172,"line_end":172,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":117596,"byte_end":117599,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ * `TetraError::PlatformError` will be returned if the underlying graphics API encounters an error.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":117604,"byte_end":117706,"line_start":174,"line_end":174,"column_start":5,"column_end":107}},{"value":"/ * `TetraError::InvalidShader` will be returned if the shader could not be compiled.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":117711,"byte_end":117798,"line_start":175,"line_end":175,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":118345,"byte_end":118365,"line_start":188,"line_end":188,"column_start":12,"column_end":32},"name":"from_fragment_string","qualname":"<Shader>::from_fragment_string","value":"pub fn from_fragment_string<P>(&mut Context, &str) -> Result<Shader>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new shader program from the given fragment shader string.","sig":null,"attributes":[{"value":"/ Creates a new shader program from the given fragment shader string.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":117974,"byte_end":118045,"line_start":180,"line_end":180,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":118050,"byte_end":118053,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ The default vertex shader will be used.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":118058,"byte_end":118101,"line_start":182,"line_end":182,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":118106,"byte_end":118109,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":118114,"byte_end":118126,"line_start":184,"line_end":184,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":118131,"byte_end":118134,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ * `TetraError::PlatformError` will be returned if the underlying graphics API encounters an error.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":118139,"byte_end":118241,"line_start":186,"line_end":186,"column_start":5,"column_end":107}},{"value":"/ * `TetraError::InvalidShader` will be returned if the shader could not be compiled.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":118246,"byte_end":118333,"line_start":187,"line_end":187,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":119023,"byte_end":119034,"line_start":209,"line_end":209,"column_start":12,"column_end":23},"name":"set_uniform","qualname":"<Shader>::set_uniform","value":"pub fn set_uniform<V>(&Self, &mut Context, &str, V) where V: UniformValue","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the specifed uniform parameter.\n","sig":null,"attributes":[{"value":"/ Sets the value of the specifed uniform parameter.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":118958,"byte_end":119011,"line_start":208,"line_end":208,"column_start":5,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":445},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":119742,"byte_end":119754,"line_start":231,"line_end":231,"column_start":11,"column_end":23},"name":"UniformValue","qualname":"::graphics::shader::UniformValue","value":"UniformValue","parent":null,"children":[{"krate":0,"index":446}],"decl_id":null,"docs":" Implemented for types that can be passed as a uniform value to a shader.","sig":null,"attributes":[{"value":"/ Implemented for types that can be passed as a uniform value to a shader.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":119472,"byte_end":119548,"line_start":227,"line_end":227,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":119549,"byte_end":119552,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ As the implementation of this trait currently interacts directly with the platform layer,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":119553,"byte_end":119646,"line_start":229,"line_end":229,"column_start":1,"column_end":94}},{"value":"/ it cannot be implemented outside of Tetra itself. This may change in the future!","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":119647,"byte_end":119731,"line_start":230,"line_end":230,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":119783,"byte_end":119794,"line_start":233,"line_end":233,"column_start":8,"column_end":19},"name":"set_uniform","qualname":"::graphics::shader::UniformValue::set_uniform","value":"pub fn set_uniform(&Self, &mut Context, &Shader, &str)","parent":{"krate":0,"index":445},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":456},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"text","qualname":"::graphics::text","value":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","parent":null,"children":[{"krate":0,"index":457},{"krate":0,"index":498},{"krate":0,"index":518},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":2388},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":1465},{"krate":0,"index":1467},{"krate":0,"index":583},{"krate":0,"index":586},{"krate":0,"index":1469},{"krate":0,"index":1475},{"krate":0,"index":1473},{"krate":0,"index":588},{"krate":0,"index":602}],"decl_id":null,"docs":" Functions and types relating to text rendering.\n","sig":null,"attributes":[{"value":"/ Functions and types relating to text rendering.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":122327,"byte_end":122378,"line_start":1,"line_end":1,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1459},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","byte_start":146095,"byte_end":146112,"line_start":128,"line_end":128,"column_start":12,"column_end":29},"name":"VectorFontBuilder","qualname":"::graphics::text::vector::VectorFontBuilder","value":"VectorFontBuilder {  }","parent":null,"children":[{"krate":0,"index":1460}],"decl_id":null,"docs":" A builder for vector-based fonts.","sig":null,"attributes":[{"value":"/ A builder for vector-based fonts.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","byte_start":145184,"byte_end":145221,"line_start":111,"line_end":111,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","byte_start":145222,"byte_end":145225,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ TrueType and OpenType fonts are supported. The font data will only be loaded","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","byte_start":145226,"byte_end":145306,"line_start":113,"line_end":113,"column_start":1,"column_end":81}},{"value":"/ into memory once, and it will be shared between all [`Font`](struct.Font.html)s that","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","byte_start":145307,"byte_end":145395,"line_start":114,"line_end":114,"column_start":1,"column_end":89}},{"value":"/ are subsequently created by the builder instance.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","byte_start":145396,"byte_end":145449,"line_start":115,"line_end":115,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","byte_start":145450,"byte_end":145453,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ [`Font::vector`](struct.Font.html#method.vector) provides a simpler API for loading","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","byte_start":145454,"byte_end":145541,"line_start":117,"line_end":117,"column_start":1,"column_end":88}},{"value":"/ vector fonts, if you don't need all of the functionality of this struct.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","byte_start":145542,"byte_end":145618,"line_start":118,"line_end":118,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","byte_start":145619,"byte_end":145622,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ # Performance","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","byte_start":145623,"byte_end":145640,"line_start":120,"line_end":120,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","byte_start":145641,"byte_end":145644,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ Creating a `VectorFontBuilder` is a relatively expensive operation. If you need to create","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","byte_start":145645,"byte_end":145738,"line_start":122,"line_end":122,"column_start":1,"column_end":94}},{"value":"/ extra sizes of the font later on, store the `VectorFontBuilder` rather than building a new one.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","byte_start":145739,"byte_end":145838,"line_start":123,"line_end":123,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","byte_start":145839,"byte_end":145842,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ Cloning a `VectorFontBuilder` is a very cheap operation, as the underlying data is shared between the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","byte_start":145843,"byte_end":145948,"line_start":125,"line_end":125,"column_start":1,"column_end":106}},{"value":"/ original instance and the clone via [reference-counting](https://doc.rust-lang.org/std/rc/struct.Rc.html).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","byte_start":145949,"byte_end":146059,"line_start":126,"line_end":126,"column_start":1,"column_end":111}}]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","byte_start":146437,"byte_end":146440,"line_start":139,"line_end":139,"column_start":12,"column_end":15},"name":"new","qualname":"<VectorFontBuilder>::new","value":"pub fn new<P>(P) -> Result<VectorFontBuilder> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Loads a vector font from the given file.","sig":null,"attributes":[{"value":"/ Loads a vector font from the given file.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","byte_start":146173,"byte_end":146217,"line_start":133,"line_end":133,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","byte_start":146222,"byte_end":146225,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","byte_start":146230,"byte_end":146242,"line_start":135,"line_end":135,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","byte_start":146247,"byte_end":146250,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ * `TetraError::FailedToLoadAsset` will be returned if the file could not be loaded.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","byte_start":146255,"byte_end":146342,"line_start":137,"line_end":137,"column_start":5,"column_end":92}},{"value":"/ * `TetraError::InvalidFont` will be returned if the font data was invalid.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","byte_start":146347,"byte_end":146425,"line_start":138,"line_end":138,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","byte_start":146946,"byte_end":146960,"line_start":156,"line_end":156,"column_start":12,"column_end":26},"name":"from_file_data","qualname":"<VectorFontBuilder>::from_file_data","value":"pub fn from_file_data(&'static [u8]) -> Result<VectorFontBuilder>","parent":null,"children":[],"decl_id":null,"docs":" Loads a vector font from a slice of binary data.","sig":null,"attributes":[{"value":"/ Loads a vector font from a slice of binary data.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","byte_start":146766,"byte_end":146818,"line_start":151,"line_end":151,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","byte_start":146823,"byte_end":146826,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","byte_start":146831,"byte_end":146843,"line_start":153,"line_end":153,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","byte_start":146848,"byte_end":146851,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ * `TetraError::InvalidFont` will be returned if the font data was invalid.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","byte_start":146856,"byte_end":146934,"line_start":155,"line_end":155,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","byte_start":147414,"byte_end":147423,"line_start":170,"line_end":170,"column_start":12,"column_end":21},"name":"with_size","qualname":"<VectorFontBuilder>::with_size","value":"pub fn with_size(&Self, &mut Context, f32) -> Result<Font>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Font` with the given size.","sig":null,"attributes":[{"value":"/ Creates a `Font` with the given size.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","byte_start":147211,"byte_end":147252,"line_start":164,"line_end":164,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","byte_start":147257,"byte_end":147260,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","byte_start":147265,"byte_end":147277,"line_start":166,"line_end":166,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","byte_start":147282,"byte_end":147285,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ * `TetraError::PlatformError` will be returned if the GPU cache for the font","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","byte_start":147290,"byte_end":147370,"line_start":168,"line_end":168,"column_start":5,"column_end":85}},{"value":"/   could not be created.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","byte_start":147375,"byte_end":147402,"line_start":169,"line_end":169,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":1465},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":123627,"byte_end":123631,"line_start":40,"line_end":40,"column_start":12,"column_end":16},"name":"Font","qualname":"::graphics::text::Font","value":"Font {  }","parent":null,"children":[{"krate":0,"index":1466}],"decl_id":null,"docs":" A font with an associated size, cached on the GPU.","sig":null,"attributes":[{"value":"/ A font with an associated size, cached on the GPU.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":122984,"byte_end":123038,"line_start":25,"line_end":25,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":123039,"byte_end":123042,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Performance","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":123043,"byte_end":123060,"line_start":27,"line_end":27,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":123061,"byte_end":123064,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Creating a `Font` is a relatively expensive operation. If you can, store them in your `State`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":123065,"byte_end":123162,"line_start":29,"line_end":29,"column_start":1,"column_end":98}},{"value":"/ struct rather than recreating them each frame.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":123163,"byte_end":123213,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":123214,"byte_end":123217,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Cloning a `Font` is a very cheap operation, as the underlying data is shared between the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":123218,"byte_end":123310,"line_start":32,"line_end":32,"column_start":1,"column_end":93}},{"value":"/ original instance and the clone via [reference-counting](https://doc.rust-lang.org/std/rc/struct.Rc.html).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":123311,"byte_end":123421,"line_start":33,"line_end":33,"column_start":1,"column_end":111}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":123422,"byte_end":123425,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":123426,"byte_end":123440,"line_start":35,"line_end":35,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":123441,"byte_end":123444,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ The [`text`](https://github.com/17cupsofcoffee/tetra/blob/main/examples/text.rs)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":123445,"byte_end":123529,"line_start":37,"line_end":37,"column_start":1,"column_end":85}},{"value":"/ example demonstrates how to load a font and then draw some text.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":123530,"byte_end":123598,"line_start":38,"line_end":38,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":124384,"byte_end":124390,"line_start":60,"line_end":60,"column_start":12,"column_end":18},"name":"vector","qualname":"<Font>::vector","value":"pub fn vector<P>(&mut Context, P, f32) -> Result<Font> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Font` from a vector font file, with the given size.","sig":null,"attributes":[{"value":"/ Creates a `Font` from a vector font file, with the given size.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":123687,"byte_end":123753,"line_start":45,"line_end":45,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":123758,"byte_end":123761,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ TrueType and OpenType fonts are supported.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":123766,"byte_end":123812,"line_start":47,"line_end":47,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":123817,"byte_end":123820,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ If you want to load multiple sizes of the same font, you can use a","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":123825,"byte_end":123895,"line_start":49,"line_end":49,"column_start":5,"column_end":75}},{"value":"/ [`VectorFontBuilder`](struct.VectorFontBuilder.html) to avoid loading/parsing","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":123900,"byte_end":123981,"line_start":50,"line_end":50,"column_start":5,"column_end":86}},{"value":"/ the file multiple times.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":123986,"byte_end":124014,"line_start":51,"line_end":51,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":124019,"byte_end":124022,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":124027,"byte_end":124039,"line_start":53,"line_end":53,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":124044,"byte_end":124047,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ * `TetraError::FailedToLoadAsset` will be returned if the file could not be loaded.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":124052,"byte_end":124139,"line_start":55,"line_end":55,"column_start":5,"column_end":92}},{"value":"/ * `TetraError::InvalidFont` will be returned if the font data was invalid.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":124144,"byte_end":124222,"line_start":56,"line_end":56,"column_start":5,"column_end":83}},{"value":"/ * `TetraError::PlatformError` will be returned if the GPU cache for the font","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":124227,"byte_end":124307,"line_start":57,"line_end":57,"column_start":5,"column_end":85}},{"value":"/   could not be created.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":124312,"byte_end":124339,"line_start":58,"line_end":58,"column_start":5,"column_end":32}},{"value":"cfg(feature = \"font_ttf\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":124344,"byte_end":124372,"line_start":59,"line_end":59,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1469},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":125230,"byte_end":125234,"line_start":89,"line_end":89,"column_start":12,"column_end":16},"name":"Text","qualname":"::graphics::text::Text","value":"Text {  }","parent":null,"children":[{"krate":0,"index":1470},{"krate":0,"index":1471},{"krate":0,"index":1472}],"decl_id":null,"docs":" A piece of text that can be rendered.","sig":null,"attributes":[{"value":"/ A piece of text that can be rendered.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":124686,"byte_end":124727,"line_start":74,"line_end":74,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":124728,"byte_end":124731,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ # Performance","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":124732,"byte_end":124749,"line_start":76,"line_end":76,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":124750,"byte_end":124753,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The layout of the text is cached after the first time it is calculated, making subsequent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":124754,"byte_end":124847,"line_start":78,"line_end":78,"column_start":1,"column_end":94}},{"value":"/ rendering of the text much faster.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":124848,"byte_end":124886,"line_start":79,"line_end":79,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":124887,"byte_end":124890,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ Cloning a `Text` is a fairly expensive operation, as it creates an entirely new copy of the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":124891,"byte_end":124986,"line_start":81,"line_end":81,"column_start":1,"column_end":96}},{"value":"/ object with its own cache.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":124987,"byte_end":125017,"line_start":82,"line_end":82,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":125018,"byte_end":125021,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":125022,"byte_end":125036,"line_start":84,"line_end":84,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":125037,"byte_end":125040,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ The [`text`](https://github.com/17cupsofcoffee/tetra/blob/main/examples/text.rs)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":125041,"byte_end":125125,"line_start":86,"line_end":86,"column_start":1,"column_end":85}},{"value":"/ example demonstrates how to load a font and then draw some text.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":125126,"byte_end":125194,"line_start":87,"line_end":87,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":125408,"byte_end":125411,"line_start":97,"line_end":97,"column_start":12,"column_end":15},"name":"new","qualname":"<Text>::new","value":"pub fn new<C>(C, Font) -> Text where C: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Text`, with the given content and font.\n","sig":null,"attributes":[{"value":"/ Creates a new `Text`, with the given content and font.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":125338,"byte_end":125396,"line_start":96,"line_end":96,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":125684,"byte_end":125691,"line_start":109,"line_end":109,"column_start":12,"column_end":19},"name":"content","qualname":"<Text>::content","value":"pub fn content(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the content of the text.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the content of the text.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":125621,"byte_end":125672,"line_start":108,"line_end":108,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":125898,"byte_end":125909,"line_start":117,"line_end":117,"column_start":12,"column_end":23},"name":"set_content","qualname":"<Text>::set_content","value":"pub fn set_content<C>(&mut Self, C) where C: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Sets the content of the text.","sig":null,"attributes":[{"value":"/ Sets the content of the text.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":125742,"byte_end":125775,"line_start":113,"line_end":113,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":125780,"byte_end":125783,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Calling this function will cause a re-layout of the text the next time it","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":125788,"byte_end":125865,"line_start":115,"line_end":115,"column_start":5,"column_end":82}},{"value":"/ is rendered.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":125870,"byte_end":125886,"line_start":116,"line_end":116,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":126106,"byte_end":126110,"line_start":126,"line_end":126,"column_start":12,"column_end":16},"name":"font","qualname":"<Text>::font","value":"pub fn font(&Self) -> &Font","parent":null,"children":[],"decl_id":null,"docs":" Gets the font of the text.\n","sig":null,"attributes":[{"value":"/ Gets the font of the text.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":126064,"byte_end":126094,"line_start":125,"line_end":125,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":126312,"byte_end":126320,"line_start":134,"line_end":134,"column_start":12,"column_end":20},"name":"set_font","qualname":"<Text>::set_font","value":"pub fn set_font(&mut Self, Font)","parent":null,"children":[],"decl_id":null,"docs":" Sets the font of the text.","sig":null,"attributes":[{"value":"/ Sets the font of the text.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":126159,"byte_end":126189,"line_start":130,"line_end":130,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":126194,"byte_end":126197,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ Calling this function will cause a re-layout of the text the next time it","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":126202,"byte_end":126279,"line_start":132,"line_end":132,"column_start":5,"column_end":82}},{"value":"/ is rendered.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":126284,"byte_end":126300,"line_start":133,"line_end":133,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":126598,"byte_end":126602,"line_start":143,"line_end":143,"column_start":12,"column_end":16},"name":"push","qualname":"<Text>::push","value":"pub fn push(&mut Self, char)","parent":null,"children":[],"decl_id":null,"docs":" Appends the given character to the end of the text.","sig":null,"attributes":[{"value":"/ Appends the given character to the end of the text.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":126420,"byte_end":126475,"line_start":139,"line_end":139,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":126480,"byte_end":126483,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Calling this function will cause a re-layout of the text the next time it","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":126488,"byte_end":126565,"line_start":141,"line_end":141,"column_start":5,"column_end":82}},{"value":"/ is rendered.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":126570,"byte_end":126586,"line_start":142,"line_end":142,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":126886,"byte_end":126894,"line_start":152,"line_end":152,"column_start":12,"column_end":20},"name":"push_str","qualname":"<Text>::push_str","value":"pub fn push_str(&mut Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Appends the given string slice to the end of the text.","sig":null,"attributes":[{"value":"/ Appends the given string slice to the end of the text.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":126705,"byte_end":126763,"line_start":148,"line_end":148,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":126768,"byte_end":126771,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ Calling this function will cause a re-layout of the text the next time it","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":126776,"byte_end":126853,"line_start":150,"line_end":150,"column_start":5,"column_end":82}},{"value":"/ is rendered.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":126858,"byte_end":126874,"line_start":151,"line_end":151,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":127245,"byte_end":127248,"line_start":163,"line_end":163,"column_start":12,"column_end":15},"name":"pop","qualname":"<Text>::pop","value":"pub fn pop(&mut Self) -> Option<char>","parent":null,"children":[],"decl_id":null,"docs":" Removes the last character from the text and returns it.","sig":null,"attributes":[{"value":"/ Removes the last character from the text and returns it.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":127009,"byte_end":127069,"line_start":157,"line_end":157,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":127074,"byte_end":127077,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the text is empty.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":127082,"byte_end":127122,"line_start":159,"line_end":159,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":127127,"byte_end":127130,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Calling this function will cause a re-layout of the text the next time it","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":127135,"byte_end":127212,"line_start":161,"line_end":161,"column_start":5,"column_end":82}},{"value":"/ is rendered.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":127217,"byte_end":127233,"line_start":162,"line_end":162,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":127629,"byte_end":127639,"line_start":173,"line_end":173,"column_start":12,"column_end":22},"name":"get_bounds","qualname":"<Text>::get_bounds","value":"pub fn get_bounds(&Self, &mut Context) -> Option<Rectangle>","parent":null,"children":[],"decl_id":null,"docs":" Get the outer bounds of the text when rendered to the screen.","sig":null,"attributes":[{"value":"/ Get the outer bounds of the text when rendered to the screen.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":127353,"byte_end":127418,"line_start":168,"line_end":168,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":127423,"byte_end":127426,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ If the text's layout needs calculating, this method will do so.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":127431,"byte_end":127498,"line_start":170,"line_end":170,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":127503,"byte_end":127506,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Note that this method will not take into account the positioning applied to the text via `DrawParams`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":127511,"byte_end":127617,"line_start":172,"line_end":172,"column_start":5,"column_end":111}}]},{"kind":"Struct","id":{"krate":0,"index":1482},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":150076,"byte_end":150083,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"Texture","qualname":"::graphics::texture::Texture","value":"Texture {  }","parent":null,"children":[{"krate":0,"index":1483}],"decl_id":null,"docs":" A texture, held in GPU memory.","sig":null,"attributes":[{"value":"/ A texture, held in GPU memory.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":148749,"byte_end":148783,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":148784,"byte_end":148787,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Supported Formats","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":148788,"byte_end":148811,"line_start":30,"line_end":30,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":148812,"byte_end":148815,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Various file formats are supported, and can be enabled or disabled via Cargo features:","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":148816,"byte_end":148906,"line_start":32,"line_end":32,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":148907,"byte_end":148910,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ | Format | Cargo feature | Enabled by default? |","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":148911,"byte_end":148963,"line_start":34,"line_end":34,"column_start":1,"column_end":53}},{"value":"/ |-|-|-|","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":148964,"byte_end":148975,"line_start":35,"line_end":35,"column_start":1,"column_end":12}},{"value":"/ | PNG | `texture_png` | Yes |","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":148976,"byte_end":149009,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ | JPEG | `texture_jpeg` | Yes |","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":149010,"byte_end":149045,"line_start":37,"line_end":37,"column_start":1,"column_end":36}},{"value":"/ | GIF | `texture_gif` | Yes |","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":149046,"byte_end":149079,"line_start":38,"line_end":38,"column_start":1,"column_end":34}},{"value":"/ | BMP | `texture_bmp` | Yes |","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":149080,"byte_end":149113,"line_start":39,"line_end":39,"column_start":1,"column_end":34}},{"value":"/ | TIFF | `texture_tiff` | No |","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":149114,"byte_end":149148,"line_start":40,"line_end":40,"column_start":1,"column_end":35}},{"value":"/ | TGA | `texture_tga` | No |","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":149149,"byte_end":149181,"line_start":41,"line_end":41,"column_start":1,"column_end":33}},{"value":"/ | WebP | `texture_webp` | No |","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":149182,"byte_end":149216,"line_start":42,"line_end":42,"column_start":1,"column_end":35}},{"value":"/ | ICO | `texture_ico` | No |","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":149217,"byte_end":149249,"line_start":43,"line_end":43,"column_start":1,"column_end":33}},{"value":"/ | PNM | `texture_pnm` | No |","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":149250,"byte_end":149282,"line_start":44,"line_end":44,"column_start":1,"column_end":33}},{"value":"/ | DDS/DXT | `texture_dds` | No |","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":149283,"byte_end":149319,"line_start":45,"line_end":45,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":149320,"byte_end":149323,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Performance","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":149324,"byte_end":149341,"line_start":47,"line_end":47,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":149342,"byte_end":149345,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Creating a `Texture` is a relatively expensive operation. If you can, store them in your `State`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":149346,"byte_end":149446,"line_start":49,"line_end":49,"column_start":1,"column_end":101}},{"value":"/ struct rather than recreating them each frame.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":149447,"byte_end":149497,"line_start":50,"line_end":50,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":149498,"byte_end":149501,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Cloning a `Texture` is a very cheap operation, as the underlying data is shared between the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":149502,"byte_end":149597,"line_start":52,"line_end":52,"column_start":1,"column_end":96}},{"value":"/ original instance and the clone via [reference-counting](https://doc.rust-lang.org/std/rc/struct.Rc.html).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":149598,"byte_end":149708,"line_start":53,"line_end":53,"column_start":1,"column_end":111}},{"value":"/ This does mean, however, that updating a `Texture` (for example, changing its filter mode) will also","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":149709,"byte_end":149813,"line_start":54,"line_end":54,"column_start":1,"column_end":105}},{"value":"/ update any other clones of that `Texture`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":149814,"byte_end":149860,"line_start":55,"line_end":55,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":149861,"byte_end":149864,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":149865,"byte_end":149879,"line_start":57,"line_end":57,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":149880,"byte_end":149883,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ The [`texture`](https://github.com/17cupsofcoffee/tetra/blob/main/examples/texture.rs)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":149884,"byte_end":149974,"line_start":59,"line_end":59,"column_start":1,"column_end":91}},{"value":"/ example demonstrates how to draw a simple texture.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":149975,"byte_end":150029,"line_start":60,"line_end":60,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":150606,"byte_end":150609,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"new","qualname":"<Texture>::new","value":"pub fn new<P>(&mut Context, P) -> Result<Texture> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new texture from the given file.","sig":null,"attributes":[{"value":"/ Creates a new texture from the given file.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":150152,"byte_end":150198,"line_start":67,"line_end":67,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":150203,"byte_end":150206,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ The format will be determined based on the file extension.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":150211,"byte_end":150273,"line_start":69,"line_end":69,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":150278,"byte_end":150281,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":150286,"byte_end":150298,"line_start":71,"line_end":71,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":150303,"byte_end":150306,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ * `TetraError::PlatformError` will be returned if the underlying graphics API encounters an error.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":150311,"byte_end":150413,"line_start":73,"line_end":73,"column_start":5,"column_end":107}},{"value":"/ * `TetraError::FailedToLoadAsset` will be returned if the file could not be loaded.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":150418,"byte_end":150505,"line_start":74,"line_end":74,"column_start":5,"column_end":92}},{"value":"/ * `TetraError::InvalidTexture` will be returned if the texture data was invalid.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":150510,"byte_end":150594,"line_start":75,"line_end":75,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":151804,"byte_end":151818,"line_start":106,"line_end":106,"column_start":12,"column_end":26},"name":"from_file_data","qualname":"<Texture>::from_file_data","value":"pub fn from_file_data(&mut Context, &[u8]) -> Result<Texture>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new texture from a slice of data, encoded in one of Tetra's supported\n file formats (except for TGA).","sig":null,"attributes":[{"value":"/ Creates a new texture from a slice of data, encoded in one of Tetra's supported","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":150967,"byte_end":151050,"line_start":91,"line_end":91,"column_start":5,"column_end":88}},{"value":"/ file formats (except for TGA).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":151055,"byte_end":151089,"line_start":92,"line_end":92,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":151094,"byte_end":151097,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ This is useful in combination with `include_bytes`, as it allows you to include","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":151102,"byte_end":151185,"line_start":94,"line_end":94,"column_start":5,"column_end":88}},{"value":"/ your textures directly in the binary.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":151190,"byte_end":151231,"line_start":95,"line_end":95,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":151236,"byte_end":151239,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ The format will be determined based on the 'magic bytes' at the beginning of the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":151244,"byte_end":151328,"line_start":97,"line_end":97,"column_start":5,"column_end":89}},{"value":"/ data. This should be reasonably reliable, but a `from_data_with_format` function","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":151333,"byte_end":151417,"line_start":98,"line_end":98,"column_start":5,"column_end":89}},{"value":"/ might have to be added later. Note that TGA files do not have recognizable magic","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":151422,"byte_end":151506,"line_start":99,"line_end":99,"column_start":5,"column_end":89}},{"value":"/ bytes, so this function will not recognize them.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":151511,"byte_end":151563,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":151568,"byte_end":151571,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":151576,"byte_end":151588,"line_start":102,"line_end":102,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":151593,"byte_end":151596,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ * `TetraError::PlatformError` will be returned if the underlying graphics API encounters an error.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":151601,"byte_end":151703,"line_start":104,"line_end":104,"column_start":5,"column_end":107}},{"value":"/ * `TetraError::InvalidTexture` will be returned if the texture data was invalid.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":151708,"byte_end":151792,"line_start":105,"line_end":105,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":152791,"byte_end":152800,"line_start":133,"line_end":133,"column_start":12,"column_end":21},"name":"from_rgba","qualname":"<Texture>::from_rgba","value":"pub fn from_rgba(&mut Context, i32, i32, &[u8]) -> Result<Texture>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new texture from a slice of RGBA pixel data.","sig":null,"attributes":[{"value":"/ Creates a new texture from a slice of RGBA pixel data.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":152208,"byte_end":152266,"line_start":121,"line_end":121,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":152271,"byte_end":152274,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ This is useful if you wish to create a texture at runtime.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":152279,"byte_end":152341,"line_start":123,"line_end":123,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":152346,"byte_end":152349,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ This method requires you to provide enough data to fill the texture.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":152354,"byte_end":152426,"line_start":125,"line_end":125,"column_start":5,"column_end":77}},{"value":"/ If you provide too little data, an error will be returned.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":152431,"byte_end":152493,"line_start":126,"line_end":126,"column_start":5,"column_end":67}},{"value":"/ If you provide too much data, it will be truncated.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":152498,"byte_end":152553,"line_start":127,"line_end":127,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":152558,"byte_end":152561,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":152566,"byte_end":152578,"line_start":129,"line_end":129,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":152583,"byte_end":152586,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ * `TetraError::NotEnoughData` will be returned if not enough data is provided to fill","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":152591,"byte_end":152680,"line_start":131,"line_end":131,"column_start":5,"column_end":94}},{"value":"/ the texture. This is to prevent the graphics API from trying to read uninitialized memory.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":152685,"byte_end":152779,"line_start":132,"line_end":132,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":154352,"byte_end":154357,"line_start":188,"line_end":188,"column_start":12,"column_end":17},"name":"width","qualname":"<Texture>::width","value":"pub fn width(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the width of the texture.\n","sig":null,"attributes":[{"value":"/ Returns the width of the texture.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":154303,"byte_end":154340,"line_start":187,"line_end":187,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":154468,"byte_end":154474,"line_start":193,"line_end":193,"column_start":12,"column_end":18},"name":"height","qualname":"<Texture>::height","value":"pub fn height(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the height of the texture.\n","sig":null,"attributes":[{"value":"/ Returns the height of the texture.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":154418,"byte_end":154456,"line_start":192,"line_end":192,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":154583,"byte_end":154587,"line_start":198,"line_end":198,"column_start":12,"column_end":16},"name":"size","qualname":"<Texture>::size","value":"pub fn size(&Self) -> (i32, i32)","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the canvas.\n","sig":null,"attributes":[{"value":"/ Returns the size of the canvas.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":154536,"byte_end":154571,"line_start":197,"line_end":197,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":154750,"byte_end":154761,"line_start":203,"line_end":203,"column_start":12,"column_end":23},"name":"filter_mode","qualname":"<Texture>::filter_mode","value":"pub fn filter_mode(&Self) -> FilterMode","parent":null,"children":[],"decl_id":null,"docs":" Returns the filter mode being used by the texture.\n","sig":null,"attributes":[{"value":"/ Returns the filter mode being used by the texture.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":154684,"byte_end":154738,"line_start":202,"line_end":202,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":154904,"byte_end":154919,"line_start":208,"line_end":208,"column_start":12,"column_end":27},"name":"set_filter_mode","qualname":"<Texture>::set_filter_mode","value":"pub fn set_filter_mode(&mut Self, &mut Context, FilterMode)","parent":null,"children":[],"decl_id":null,"docs":" Sets the filter mode that should be used by the texture.\n","sig":null,"attributes":[{"value":"/ Sets the filter mode that should be used by the texture.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":154832,"byte_end":154892,"line_start":207,"line_end":207,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":155924,"byte_end":155932,"line_start":233,"line_end":233,"column_start":12,"column_end":20},"name":"set_data","qualname":"<Texture>::set_data","value":"pub fn set_data(&Self, &mut Context, i32, i32, i32, i32, &[u8]) -> Result","parent":null,"children":[],"decl_id":null,"docs":" Writes RGBA pixel data to a specified region of the texture.","sig":null,"attributes":[{"value":"/ Writes RGBA pixel data to a specified region of the texture.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":155126,"byte_end":155190,"line_start":215,"line_end":215,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":155195,"byte_end":155198,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ This method requires you to provide enough data to fill the target rectangle.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":155203,"byte_end":155284,"line_start":217,"line_end":217,"column_start":5,"column_end":86}},{"value":"/ If you provide too little data, an error will be returned.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":155289,"byte_end":155351,"line_start":218,"line_end":218,"column_start":5,"column_end":67}},{"value":"/ If you provide too much data, it will be truncated.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":155356,"byte_end":155411,"line_start":219,"line_end":219,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":155416,"byte_end":155419,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ If you want to overwrite the entire texture, the `replace_data` method offers a","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":155424,"byte_end":155507,"line_start":221,"line_end":221,"column_start":5,"column_end":88}},{"value":"/ more concise way of doing this.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":155512,"byte_end":155547,"line_start":222,"line_end":222,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":155552,"byte_end":155555,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":155560,"byte_end":155572,"line_start":224,"line_end":224,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":155577,"byte_end":155580,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ * `TetraError::NotEnoughData` will be returned if not enough data is provided to fill","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":155585,"byte_end":155674,"line_start":226,"line_end":226,"column_start":5,"column_end":94}},{"value":"/ the target rectangle. This is to prevent the graphics API from trying to read","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":155679,"byte_end":155760,"line_start":227,"line_end":227,"column_start":5,"column_end":86}},{"value":"/ uninitialized memory.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":155765,"byte_end":155790,"line_start":228,"line_end":228,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":155795,"byte_end":155798,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":155803,"byte_end":155815,"line_start":230,"line_end":230,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":155820,"byte_end":155823,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ Panics if any part of the target rectangle is outside the bounds of the texture.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":155828,"byte_end":155912,"line_start":232,"line_end":232,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":157263,"byte_end":157275,"line_start":274,"line_end":274,"column_start":12,"column_end":24},"name":"replace_data","qualname":"<Texture>::replace_data","value":"pub fn replace_data(&Self, &mut Context, &[u8]) -> Result","parent":null,"children":[],"decl_id":null,"docs":" Overwrites the entire texture with new RGBA pixel data.","sig":null,"attributes":[{"value":"/ Overwrites the entire texture with new RGBA pixel data.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":156637,"byte_end":156696,"line_start":261,"line_end":261,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":156701,"byte_end":156704,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ This method requires you to provide enough data to fill the texture.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":156709,"byte_end":156781,"line_start":263,"line_end":263,"column_start":5,"column_end":77}},{"value":"/ If you provide too little data, an error will be returned.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":156786,"byte_end":156848,"line_start":264,"line_end":264,"column_start":5,"column_end":67}},{"value":"/ If you provide too much data, it will be truncated.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":156853,"byte_end":156908,"line_start":265,"line_end":265,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":156913,"byte_end":156916,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ If you only want to write to a subsection of the texture, use the `set_data`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":156921,"byte_end":157001,"line_start":267,"line_end":267,"column_start":5,"column_end":85}},{"value":"/ method instead.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":157006,"byte_end":157025,"line_start":268,"line_end":268,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":157030,"byte_end":157033,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":157038,"byte_end":157050,"line_start":270,"line_end":270,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":157055,"byte_end":157058,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ * `TetraError::NotEnoughData` will be returned if not enough data is provided to fill","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":157063,"byte_end":157152,"line_start":272,"line_end":272,"column_start":5,"column_end":94}},{"value":"/ the texture. This is to prevent the graphics API from trying to read uninitialized memory.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":157157,"byte_end":157251,"line_start":273,"line_end":273,"column_start":5,"column_end":99}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1493},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":158715,"byte_end":158722,"line_start":318,"line_end":318,"column_start":5,"column_end":12},"name":"Nearest","qualname":"::graphics::texture::FilterMode::Nearest","value":"FilterMode::Nearest","parent":{"krate":0,"index":1492},"children":[],"decl_id":null,"docs":" Nearest-neighbor interpolation. This preserves hard edges and details, but may look pixelated.","sig":null,"attributes":[{"value":"/ Nearest-neighbor interpolation. This preserves hard edges and details, but may look pixelated.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":158519,"byte_end":158617,"line_start":315,"line_end":315,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":158622,"byte_end":158625,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ If you're using pixel art, this is probably the scaling mode you should use.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":158630,"byte_end":158710,"line_start":317,"line_end":317,"column_start":5,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1495},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":158809,"byte_end":158815,"line_start":321,"line_end":321,"column_start":5,"column_end":11},"name":"Linear","qualname":"::graphics::texture::FilterMode::Linear","value":"FilterMode::Linear","parent":{"krate":0,"index":1492},"children":[],"decl_id":null,"docs":" Linear interpolation. This smooths images when scaling them up or down.\n","sig":null,"attributes":[{"value":"/ Linear interpolation. This smooths images when scaling them up or down.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":158729,"byte_end":158804,"line_start":320,"line_end":320,"column_start":5,"column_end":80}}]},{"kind":"Enum","id":{"krate":0,"index":1492},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":158502,"byte_end":158512,"line_start":314,"line_end":314,"column_start":10,"column_end":20},"name":"FilterMode","qualname":"::graphics::texture::FilterMode","value":"pub enum FilterMode {\n\n    /// Nearest-neighbor interpolation. This preserves hard edges and details, but may look pixelated.\n    ///\n    /// If you're using pixel art, this is probably the scaling mode you should use.\n    Nearest,\n\n    /// Linear interpolation. This smooths images when scaling them up or down.\n    Linear,\n}","parent":null,"children":[{"krate":0,"index":1493},{"krate":0,"index":1495}],"decl_id":null,"docs":" Filtering algorithms that can be used when scaling an image.","sig":null,"attributes":[{"value":"/ Filtering algorithms that can be used when scaling an image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":158314,"byte_end":158378,"line_start":310,"line_end":310,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":158379,"byte_end":158382,"line_start":311,"line_end":311,"column_start":1,"column_end":4}},{"value":"/ Tetra currently defaults to using `Nearest` for all newly created textures.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":158383,"byte_end":158462,"line_start":312,"line_end":312,"column_start":1,"column_end":80}}]},{"kind":"Mod","id":{"krate":0,"index":640},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/ui.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ui","qualname":"::graphics::ui","value":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/ui.rs","parent":null,"children":[{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":1502},{"krate":0,"index":1509},{"krate":0,"index":1507},{"krate":0,"index":648},{"krate":0,"index":660}],"decl_id":null,"docs":" Functions and types relating to user interfaces.\n","sig":null,"attributes":[{"value":"/ Functions and types relating to user interfaces.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/ui.rs","byte_start":159142,"byte_end":159194,"line_start":1,"line_end":1,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":1502},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/ui.rs","byte_start":159660,"byte_end":159669,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"NineSlice","qualname":"::graphics::ui::NineSlice","value":"NineSlice {  }","parent":null,"children":[{"krate":0,"index":1503},{"krate":0,"index":1504},{"krate":0,"index":1505},{"krate":0,"index":1506}],"decl_id":null,"docs":" A panel made up of nine slices of an image. Useful for panels with borders.","sig":null,"attributes":[{"value":"/ A panel made up of nine slices of an image. Useful for panels with borders.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/ui.rs","byte_start":159288,"byte_end":159367,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/ui.rs","byte_start":159368,"byte_end":159371,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Note that `NineSlice` does not currently support the `clip` `DrawParam`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/ui.rs","byte_start":159372,"byte_end":159448,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/ui.rs","byte_start":159449,"byte_end":159452,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/ui.rs","byte_start":159453,"byte_end":159467,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/ui.rs","byte_start":159468,"byte_end":159471,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The [`nineslice`](https://github.com/17cupsofcoffee/tetra/blob/main/examples/nineslice.rs)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/ui.rs","byte_start":159472,"byte_end":159566,"line_start":12,"line_end":12,"column_start":1,"column_end":95}},{"value":"/ example demonstrates how to draw a `NineSlice` panel.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/ui.rs","byte_start":159567,"byte_end":159624,"line_start":13,"line_end":13,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/ui.rs","byte_start":160011,"byte_end":160014,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"new","qualname":"<NineSlice>::new","value":"pub fn new(Texture, f32, f32, Rectangle) -> NineSlice","parent":null,"children":[],"decl_id":null,"docs":" Creates a new panel from the given texture.","sig":null,"attributes":[{"value":"/ Creates a new panel from the given texture.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/ui.rs","byte_start":159777,"byte_end":159824,"line_start":23,"line_end":23,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/ui.rs","byte_start":159829,"byte_end":159832,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ The `fill_rect` is used to determine how to slice the texture - it should be set","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/ui.rs","byte_start":159837,"byte_end":159921,"line_start":25,"line_end":25,"column_start":5,"column_end":89}},{"value":"/ to the region of the texture that represents the center of the panel.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/ui.rs","byte_start":159926,"byte_end":159999,"line_start":26,"line_end":26,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/ui.rs","byte_start":160295,"byte_end":160302,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"texture","qualname":"<NineSlice>::texture","value":"pub fn texture(&Self) -> &Texture","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying texture for the panel.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying texture for the panel.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/ui.rs","byte_start":160219,"byte_end":160283,"line_start":36,"line_end":36,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/ui.rs","byte_start":160542,"byte_end":160553,"line_start":45,"line_end":45,"column_start":12,"column_end":23},"name":"set_texture","qualname":"<NineSlice>::set_texture","value":"pub fn set_texture(&mut Self, Texture)","parent":null,"children":[],"decl_id":null,"docs":" Sets the underlying texture for the panel.","sig":null,"attributes":[{"value":"/ Sets the underlying texture for the panel.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/ui.rs","byte_start":160357,"byte_end":160403,"line_start":41,"line_end":41,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/ui.rs","byte_start":160408,"byte_end":160411,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This will not adjust the way that the texture is sliced, so you may need to also call","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/ui.rs","byte_start":160416,"byte_end":160505,"line_start":43,"line_end":43,"column_start":5,"column_end":94}},{"value":"/ `set_fill_rect`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/ui.rs","byte_start":160510,"byte_end":160530,"line_start":44,"line_end":44,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/ui.rs","byte_start":160672,"byte_end":160677,"line_start":50,"line_end":50,"column_start":12,"column_end":17},"name":"width","qualname":"<NineSlice>::width","value":"pub fn width(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Gets the width of the panel.\n","sig":null,"attributes":[{"value":"/ Gets the width of the panel.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/ui.rs","byte_start":160628,"byte_end":160660,"line_start":49,"line_end":49,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/ui.rs","byte_start":160768,"byte_end":160777,"line_start":55,"line_end":55,"column_start":12,"column_end":21},"name":"set_width","qualname":"<NineSlice>::set_width","value":"pub fn set_width(&mut Self, f32)","parent":null,"children":[],"decl_id":null,"docs":" Sets the width of the panel.\n","sig":null,"attributes":[{"value":"/ Sets the width of the panel.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/ui.rs","byte_start":160724,"byte_end":160756,"line_start":54,"line_end":54,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/ui.rs","byte_start":160887,"byte_end":160893,"line_start":60,"line_end":60,"column_start":12,"column_end":18},"name":"height","qualname":"<NineSlice>::height","value":"pub fn height(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Gets the height of the panel.\n","sig":null,"attributes":[{"value":"/ Gets the height of the panel.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/ui.rs","byte_start":160842,"byte_end":160875,"line_start":59,"line_end":59,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/ui.rs","byte_start":160986,"byte_end":160996,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"set_height","qualname":"<NineSlice>::set_height","value":"pub fn set_height(&mut Self, f32)","parent":null,"children":[],"decl_id":null,"docs":" Sets the height of the panel.\n","sig":null,"attributes":[{"value":"/ Sets the height of the panel.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/ui.rs","byte_start":160941,"byte_end":160974,"line_start":64,"line_end":64,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/ui.rs","byte_start":161107,"byte_end":161111,"line_start":70,"line_end":70,"column_start":12,"column_end":16},"name":"size","qualname":"<NineSlice>::size","value":"pub fn size(&Self) -> (f32, f32)","parent":null,"children":[],"decl_id":null,"docs":" Gets the size of the panel.\n","sig":null,"attributes":[{"value":"/ Gets the size of the panel.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/ui.rs","byte_start":161064,"byte_end":161095,"line_start":69,"line_end":69,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/ui.rs","byte_start":161223,"byte_end":161231,"line_start":75,"line_end":75,"column_start":12,"column_end":20},"name":"set_size","qualname":"<NineSlice>::set_size","value":"pub fn set_size(&mut Self, f32, f32)","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the panel.\n","sig":null,"attributes":[{"value":"/ Sets the size of the panel.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/ui.rs","byte_start":161180,"byte_end":161211,"line_start":74,"line_end":74,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/ui.rs","byte_start":161438,"byte_end":161447,"line_start":81,"line_end":81,"column_start":12,"column_end":21},"name":"fill_rect","qualname":"<NineSlice>::fill_rect","value":"pub fn fill_rect(&Self) -> &Rectangle","parent":null,"children":[],"decl_id":null,"docs":" Gets the section of the texture that is being used to fill the center of the panel.\n","sig":null,"attributes":[{"value":"/ Gets the section of the texture that is being used to fill the center of the panel.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/ui.rs","byte_start":161339,"byte_end":161426,"line_start":80,"line_end":80,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/ui.rs","byte_start":161595,"byte_end":161608,"line_start":86,"line_end":86,"column_start":12,"column_end":25},"name":"set_fill_rect","qualname":"<NineSlice>::set_fill_rect","value":"pub fn set_fill_rect(&mut Self, Rectangle)","parent":null,"children":[],"decl_id":null,"docs":" Sets the section of the texture that should fill the center of the panel.\n","sig":null,"attributes":[{"value":"/ Sets the section of the texture that should fill the center of the panel.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/ui.rs","byte_start":161506,"byte_end":161583,"line_start":85,"line_end":85,"column_start":5,"column_end":82}}]},{"kind":"Function","id":{"krate":0,"index":704},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":40029,"byte_end":40034,"line_start":133,"line_end":133,"column_start":8,"column_end":13},"name":"clear","qualname":"::graphics::clear","value":"pub fn clear(&mut Context, Color)","parent":null,"children":[],"decl_id":null,"docs":" Clears the screen (or a canvas, if one is enabled) to the specified color.\n","sig":null,"attributes":[{"value":"/ Clears the screen (or a canvas, if one is enabled) to the specified color.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":39943,"byte_end":40021,"line_start":132,"line_end":132,"column_start":1,"column_end":79}}]},{"kind":"Function","id":{"krate":0,"index":706},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":43361,"byte_end":43365,"line_start":249,"line_end":249,"column_start":8,"column_end":12},"name":"draw","qualname":"::graphics::draw","value":"pub fn draw<D: Drawable, P: Into<DrawParams>>(&mut Context, &D, P)","parent":null,"children":[],"decl_id":null,"docs":" Draws an object to the screen (or to a canvas, if one is enabled).","sig":null,"attributes":[{"value":"/ Draws an object to the screen (or to a canvas, if one is enabled).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":43041,"byte_end":43111,"line_start":244,"line_end":244,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":43112,"byte_end":43115,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ This function simply calls [`draw`](trait.Drawable.html#tymethod.draw) on the passed object - it is","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":43116,"byte_end":43219,"line_start":246,"line_end":246,"column_start":1,"column_end":104}},{"value":"/ provided to allow you to avoid having to import the [`Drawable`](trait.Drawable.html) trait as well","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":43220,"byte_end":43323,"line_start":247,"line_end":247,"column_start":1,"column_end":104}},{"value":"/ as the `graphics` module.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":43324,"byte_end":43353,"line_start":248,"line_end":248,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":711},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":44341,"byte_end":44351,"line_start":274,"line_end":274,"column_start":8,"column_end":18},"name":"set_shader","qualname":"::graphics::set_shader","value":"pub fn set_shader(&mut Context, &Shader)","parent":null,"children":[],"decl_id":null,"docs":" Sets the shader that is currently being used for rendering.","sig":null,"attributes":[{"value":"/ Sets the shader that is currently being used for rendering.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":44067,"byte_end":44130,"line_start":269,"line_end":269,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":44131,"byte_end":44134,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ If the shader is different from the one that is currently in use, this will trigger a","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":44135,"byte_end":44224,"line_start":271,"line_end":271,"column_start":1,"column_end":90}},{"value":"/ [`flush`](fn.flush.html) to the graphics hardware - try to avoid shader swapping as","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":44225,"byte_end":44312,"line_start":272,"line_end":272,"column_start":1,"column_end":88}},{"value":"/ much as you can.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":44313,"byte_end":44333,"line_start":273,"line_end":273,"column_start":1,"column_end":21}}]},{"kind":"Function","id":{"krate":0,"index":712},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":44516,"byte_end":44528,"line_start":279,"line_end":279,"column_start":8,"column_end":20},"name":"reset_shader","qualname":"::graphics::reset_shader","value":"pub fn reset_shader(&mut Context)","parent":null,"children":[],"decl_id":null,"docs":" Sets the renderer back to using the default shader.\n","sig":null,"attributes":[{"value":"/ Sets the renderer back to using the default shader.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":44453,"byte_end":44508,"line_start":278,"line_end":278,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":714},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":45013,"byte_end":45023,"line_start":294,"line_end":294,"column_start":8,"column_end":18},"name":"set_canvas","qualname":"::graphics::set_canvas","value":"pub fn set_canvas(&mut Context, &Canvas)","parent":null,"children":[],"decl_id":null,"docs":" Sets the renderer to redirect all drawing commands to the specified canvas.","sig":null,"attributes":[{"value":"/ Sets the renderer to redirect all drawing commands to the specified canvas.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":44777,"byte_end":44856,"line_start":290,"line_end":290,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":44857,"byte_end":44860,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ If the canvas is different from the one that is currently in use, this will trigger a","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":44861,"byte_end":44950,"line_start":292,"line_end":292,"column_start":1,"column_end":90}},{"value":"/ [`flush`](fn.flush.html) to the graphics hardware.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":44951,"byte_end":45005,"line_start":293,"line_end":293,"column_start":1,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":715},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":45194,"byte_end":45206,"line_start":299,"line_end":299,"column_start":8,"column_end":20},"name":"reset_canvas","qualname":"::graphics::reset_canvas","value":"pub fn reset_canvas(&mut Context)","parent":null,"children":[],"decl_id":null,"docs":" Sets the renderer back to drawing to the screen directly.\n","sig":null,"attributes":[{"value":"/ Sets the renderer back to drawing to the screen directly.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":45125,"byte_end":45186,"line_start":298,"line_end":298,"column_start":1,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":717},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":46609,"byte_end":46614,"line_start":336,"line_end":336,"column_start":8,"column_end":13},"name":"flush","qualname":"::graphics::flush","value":"pub fn flush(&mut Context)","parent":null,"children":[],"decl_id":null,"docs":" Sends queued data to the graphics hardware.","sig":null,"attributes":[{"value":"/ Sends queued data to the graphics hardware.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":46266,"byte_end":46313,"line_start":331,"line_end":331,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":46314,"byte_end":46317,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ You usually will not have to call this manually, as [`set_texture`](fn.set_texture.html) and","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":46318,"byte_end":46414,"line_start":333,"line_end":333,"column_start":1,"column_end":97}},{"value":"/ [`present`](fn.present.html) will automatically flush when necessary. Try to keep flushing","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":46415,"byte_end":46509,"line_start":334,"line_end":334,"column_start":1,"column_end":95}},{"value":"/ to a minimum, as this will reduce the number of draw calls made to the graphics device.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":46510,"byte_end":46601,"line_start":335,"line_end":335,"column_start":1,"column_end":92}}]},{"kind":"Function","id":{"krate":0,"index":718},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":48423,"byte_end":48430,"line_start":388,"line_end":388,"column_start":8,"column_end":15},"name":"present","qualname":"::graphics::present","value":"pub fn present(&mut Context)","parent":null,"children":[],"decl_id":null,"docs":" Presents the result of drawing commands to the screen.","sig":null,"attributes":[{"value":"/ Presents the result of drawing commands to the screen.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":48009,"byte_end":48067,"line_start":381,"line_end":381,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":48068,"byte_end":48071,"line_start":382,"line_end":382,"column_start":1,"column_end":4}},{"value":"/ If any custom shaders/canvases are set, this function will unset them -","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":48072,"byte_end":48147,"line_start":383,"line_end":383,"column_start":1,"column_end":76}},{"value":"/ don't rely on the state of one render carrying over to the next!","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":48148,"byte_end":48216,"line_start":384,"line_end":384,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":48217,"byte_end":48220,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ You usually will not have to call this manually, as it is called for you at the end of every","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":48221,"byte_end":48317,"line_start":386,"line_end":386,"column_start":1,"column_end":97}},{"value":"/ frame. Note that calling it will trigger a [`flush`](fn.flush.html) to the graphics hardware.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":48318,"byte_end":48415,"line_start":387,"line_end":387,"column_start":1,"column_end":98}}]},{"kind":"Function","id":{"krate":0,"index":719},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":48596,"byte_end":48619,"line_start":395,"line_end":395,"column_start":8,"column_end":31},"name":"get_default_filter_mode","qualname":"::graphics::get_default_filter_mode","value":"pub fn get_default_filter_mode(&Context) -> FilterMode","parent":null,"children":[],"decl_id":null,"docs":" Returns the filter mode that will be used by newly created textures and canvases.\n","sig":null,"attributes":[{"value":"/ Returns the filter mode that will be used by newly created textures and canvases.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":48503,"byte_end":48588,"line_start":394,"line_end":394,"column_start":1,"column_end":86}}]},{"kind":"Function","id":{"krate":0,"index":720},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":48781,"byte_end":48804,"line_start":400,"line_end":400,"column_start":8,"column_end":31},"name":"set_default_filter_mode","qualname":"::graphics::set_default_filter_mode","value":"pub fn set_default_filter_mode(&mut Context, FilterMode)","parent":null,"children":[],"decl_id":null,"docs":" Sets the filter mode that will be used by newly created textures and canvases.\n","sig":null,"attributes":[{"value":"/ Sets the filter mode that will be used by newly created textures and canvases.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":48691,"byte_end":48773,"line_start":399,"line_end":399,"column_start":1,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":1541},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":49015,"byte_end":49033,"line_start":406,"line_end":406,"column_start":12,"column_end":30},"name":"GraphicsDeviceInfo","qualname":"::graphics::GraphicsDeviceInfo","value":"GraphicsDeviceInfo { vendor, renderer, opengl_version, glsl_version }","parent":null,"children":[{"krate":0,"index":1542},{"krate":0,"index":1543},{"krate":0,"index":1544},{"krate":0,"index":1545}],"decl_id":null,"docs":" Information about the device currently being used to render graphics.\n","sig":null,"attributes":[{"value":"/ Information about the device currently being used to render graphics.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":48906,"byte_end":48979,"line_start":404,"line_end":404,"column_start":1,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":1542},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":49119,"byte_end":49125,"line_start":408,"line_end":408,"column_start":9,"column_end":15},"name":"vendor","qualname":"::graphics::GraphicsDeviceInfo::vendor","value":"std::string::String","parent":{"krate":0,"index":1541},"children":[],"decl_id":null,"docs":" The name of the company responsible for the OpenGL implementation.\n","sig":null,"attributes":[{"value":"/ The name of the company responsible for the OpenGL implementation.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":49040,"byte_end":49110,"line_start":407,"line_end":407,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":1543},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":49247,"byte_end":49255,"line_start":412,"line_end":412,"column_start":9,"column_end":17},"name":"renderer","qualname":"::graphics::GraphicsDeviceInfo::renderer","value":"std::string::String","parent":{"krate":0,"index":1541},"children":[],"decl_id":null,"docs":" The name of the renderer. This usually corresponds to the name\n of the physical device.\n","sig":null,"attributes":[{"value":"/ The name of the renderer. This usually corresponds to the name","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":49140,"byte_end":49206,"line_start":410,"line_end":410,"column_start":5,"column_end":71}},{"value":"/ of the physical device.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":49211,"byte_end":49238,"line_start":411,"line_end":411,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":1544},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":49324,"byte_end":49338,"line_start":415,"line_end":415,"column_start":9,"column_end":23},"name":"opengl_version","qualname":"::graphics::GraphicsDeviceInfo::opengl_version","value":"std::string::String","parent":{"krate":0,"index":1541},"children":[],"decl_id":null,"docs":" The version of OpenGL that is being used.\n","sig":null,"attributes":[{"value":"/ The version of OpenGL that is being used.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":49270,"byte_end":49315,"line_start":414,"line_end":414,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":1545},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":49405,"byte_end":49417,"line_start":418,"line_end":418,"column_start":9,"column_end":21},"name":"glsl_version","qualname":"::graphics::GraphicsDeviceInfo::glsl_version","value":"std::string::String","parent":{"krate":0,"index":1541},"children":[],"decl_id":null,"docs":" The version of GLSL that is being used.\n","sig":null,"attributes":[{"value":"/ The version of GLSL that is being used.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":49353,"byte_end":49396,"line_start":417,"line_end":417,"column_start":5,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":721},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":49580,"byte_end":49595,"line_start":424,"line_end":424,"column_start":8,"column_end":23},"name":"get_device_info","qualname":"::graphics::get_device_info","value":"pub fn get_device_info(&Context) -> GraphicsDeviceInfo","parent":null,"children":[],"decl_id":null,"docs":" Retrieves information about the device currently being used to render graphics.","sig":null,"attributes":[{"value":"/ Retrieves information about the device currently being used to render graphics.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":49430,"byte_end":49513,"line_start":421,"line_end":421,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":49514,"byte_end":49517,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ This may be useful for debugging/logging purposes.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":49518,"byte_end":49572,"line_start":423,"line_end":423,"column_start":1,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":722},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":49919,"byte_end":49939,"line_start":434,"line_end":434,"column_start":8,"column_end":28},"name":"get_transform_matrix","qualname":"::graphics::get_transform_matrix","value":"pub fn get_transform_matrix(&Context) -> Mat4<f32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the current transform matrix.\n","sig":null,"attributes":[{"value":"/ Returns the current transform matrix.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":49870,"byte_end":49911,"line_start":433,"line_end":433,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":723},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":50128,"byte_end":50148,"line_start":441,"line_end":441,"column_start":8,"column_end":28},"name":"set_transform_matrix","qualname":"::graphics::set_transform_matrix","value":"pub fn set_transform_matrix(&mut Context, Mat4<f32>)","parent":null,"children":[],"decl_id":null,"docs":" Sets the transform matrix.","sig":null,"attributes":[{"value":"/ Sets the transform matrix.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":50007,"byte_end":50037,"line_start":438,"line_end":438,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":50038,"byte_end":50041,"line_start":439,"line_end":439,"column_start":1,"column_end":4}},{"value":"/ This can be used to apply global transformations to subsequent draw calls.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":50042,"byte_end":50120,"line_start":440,"line_end":440,"column_start":1,"column_end":79}}]},{"kind":"Function","id":{"krate":0,"index":724},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":50389,"byte_end":50411,"line_start":450,"line_end":450,"column_start":8,"column_end":30},"name":"reset_transform_matrix","qualname":"::graphics::reset_transform_matrix","value":"pub fn reset_transform_matrix(&mut Context)","parent":null,"children":[],"decl_id":null,"docs":" Resets the transform matrix.","sig":null,"attributes":[{"value":"/ Resets the transform matrix.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":50253,"byte_end":50285,"line_start":447,"line_end":447,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":50286,"byte_end":50289,"line_start":448,"line_end":448,"column_start":1,"column_end":4}},{"value":"/ This is a shortcut for calling `graphics::set_transform_matrix(ctx, Mat4::identity())`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":50290,"byte_end":50381,"line_start":449,"line_end":449,"column_start":1,"column_end":92}}]},{"kind":"Mod","id":{"krate":0,"index":727},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"input","qualname":"::input","value":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","parent":null,"children":[{"krate":0,"index":728},{"krate":0,"index":784},{"krate":0,"index":801},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":837},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843}],"decl_id":null,"docs":" Functions and types relating to handling the player's input.","sig":null,"attributes":[{"value":"/ Functions and types relating to handling the player's input.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":163651,"byte_end":163715,"line_start":1,"line_end":1,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":163716,"byte_end":163719,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Gamepads","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":163720,"byte_end":163734,"line_start":3,"line_end":3,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":163735,"byte_end":163738,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ When accessing gamepad state, you specify which gamepad you're interested in via a 'gamepad ID'.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":163739,"byte_end":163839,"line_start":5,"line_end":5,"column_start":1,"column_end":101}},{"value":"/ The first gamepad connected to the system has ID 0, the second has ID 1, and so on.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":163840,"byte_end":163927,"line_start":6,"line_end":6,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":163928,"byte_end":163931,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ If a controller is disconnected, the next controller to be connected will take its ID - otherwise,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":163932,"byte_end":164034,"line_start":8,"line_end":8,"column_start":1,"column_end":103}},{"value":"/ a new one will be allocated. This means that if you unplug a controller and then plug it back in,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":164035,"byte_end":164136,"line_start":9,"line_end":9,"column_start":1,"column_end":102}},{"value":"/ it should retain its existing ID. This behaviour might be made smarter in future versions.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":164137,"byte_end":164231,"line_start":10,"line_end":10,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":164232,"byte_end":164235,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":164236,"byte_end":164250,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":164251,"byte_end":164254,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The [`keyboard`](https://github.com/17cupsofcoffee/tetra/blob/main/examples/keyboard.rs)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":164255,"byte_end":164347,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/ example demonstrates how to handle keyboard input.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":164348,"byte_end":164402,"line_start":15,"line_end":15,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":164403,"byte_end":164406,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The [`mouse`](https://github.com/17cupsofcoffee/tetra/blob/main/examples/mouse.rs)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":164407,"byte_end":164493,"line_start":17,"line_end":17,"column_start":1,"column_end":87}},{"value":"/ example demonstrates how to handle mouse input.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":164494,"byte_end":164545,"line_start":18,"line_end":18,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":164546,"byte_end":164549,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The [`gamepad`](https://github.com/17cupsofcoffee/tetra/blob/main/examples/gamepad.rs)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":164550,"byte_end":164640,"line_start":20,"line_end":20,"column_start":1,"column_end":91}},{"value":"/ example demonstrates how to handle gamepad input.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":164641,"byte_end":164694,"line_start":21,"line_end":21,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":164695,"byte_end":164698,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The [`text_input`](https://github.com/17cupsofcoffee/tetra/blob/main/examples/text_input.rs)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":164699,"byte_end":164795,"line_start":23,"line_end":23,"column_start":1,"column_end":97}},{"value":"/ example demonstrates how to handle text entry.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":164796,"byte_end":164846,"line_start":24,"line_end":24,"column_start":1,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1551},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":169243,"byte_end":169244,"line_start":63,"line_end":63,"column_start":5,"column_end":6},"name":"A","qualname":"::input::gamepad::GamepadButton::A","value":"GamepadButton::A","parent":{"krate":0,"index":1550},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1553},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":169250,"byte_end":169251,"line_start":64,"line_end":64,"column_start":5,"column_end":6},"name":"B","qualname":"::input::gamepad::GamepadButton::B","value":"GamepadButton::B","parent":{"krate":0,"index":1550},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1555},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":169257,"byte_end":169258,"line_start":65,"line_end":65,"column_start":5,"column_end":6},"name":"X","qualname":"::input::gamepad::GamepadButton::X","value":"GamepadButton::X","parent":{"krate":0,"index":1550},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1557},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":169264,"byte_end":169265,"line_start":66,"line_end":66,"column_start":5,"column_end":6},"name":"Y","qualname":"::input::gamepad::GamepadButton::Y","value":"GamepadButton::Y","parent":{"krate":0,"index":1550},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1559},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":169271,"byte_end":169273,"line_start":67,"line_end":67,"column_start":5,"column_end":7},"name":"Up","qualname":"::input::gamepad::GamepadButton::Up","value":"GamepadButton::Up","parent":{"krate":0,"index":1550},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1561},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":169279,"byte_end":169283,"line_start":68,"line_end":68,"column_start":5,"column_end":9},"name":"Down","qualname":"::input::gamepad::GamepadButton::Down","value":"GamepadButton::Down","parent":{"krate":0,"index":1550},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1563},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":169289,"byte_end":169293,"line_start":69,"line_end":69,"column_start":5,"column_end":9},"name":"Left","qualname":"::input::gamepad::GamepadButton::Left","value":"GamepadButton::Left","parent":{"krate":0,"index":1550},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1565},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":169299,"byte_end":169304,"line_start":70,"line_end":70,"column_start":5,"column_end":10},"name":"Right","qualname":"::input::gamepad::GamepadButton::Right","value":"GamepadButton::Right","parent":{"krate":0,"index":1550},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1567},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":169310,"byte_end":169322,"line_start":71,"line_end":71,"column_start":5,"column_end":17},"name":"LeftShoulder","qualname":"::input::gamepad::GamepadButton::LeftShoulder","value":"GamepadButton::LeftShoulder","parent":{"krate":0,"index":1550},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1569},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":169328,"byte_end":169339,"line_start":72,"line_end":72,"column_start":5,"column_end":16},"name":"LeftTrigger","qualname":"::input::gamepad::GamepadButton::LeftTrigger","value":"GamepadButton::LeftTrigger","parent":{"krate":0,"index":1550},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1571},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":169345,"byte_end":169354,"line_start":73,"line_end":73,"column_start":5,"column_end":14},"name":"LeftStick","qualname":"::input::gamepad::GamepadButton::LeftStick","value":"GamepadButton::LeftStick","parent":{"krate":0,"index":1550},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1573},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":169360,"byte_end":169373,"line_start":74,"line_end":74,"column_start":5,"column_end":18},"name":"RightShoulder","qualname":"::input::gamepad::GamepadButton::RightShoulder","value":"GamepadButton::RightShoulder","parent":{"krate":0,"index":1550},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1575},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":169379,"byte_end":169391,"line_start":75,"line_end":75,"column_start":5,"column_end":17},"name":"RightTrigger","qualname":"::input::gamepad::GamepadButton::RightTrigger","value":"GamepadButton::RightTrigger","parent":{"krate":0,"index":1550},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1577},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":169397,"byte_end":169407,"line_start":76,"line_end":76,"column_start":5,"column_end":15},"name":"RightStick","qualname":"::input::gamepad::GamepadButton::RightStick","value":"GamepadButton::RightStick","parent":{"krate":0,"index":1550},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1579},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":169413,"byte_end":169418,"line_start":77,"line_end":77,"column_start":5,"column_end":10},"name":"Start","qualname":"::input::gamepad::GamepadButton::Start","value":"GamepadButton::Start","parent":{"krate":0,"index":1550},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1581},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":169424,"byte_end":169428,"line_start":78,"line_end":78,"column_start":5,"column_end":9},"name":"Back","qualname":"::input::gamepad::GamepadButton::Back","value":"GamepadButton::Back","parent":{"krate":0,"index":1550},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1583},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":169434,"byte_end":169439,"line_start":79,"line_end":79,"column_start":5,"column_end":10},"name":"Guide","qualname":"::input::gamepad::GamepadButton::Guide","value":"GamepadButton::Guide","parent":{"krate":0,"index":1550},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1550},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":169223,"byte_end":169236,"line_start":62,"line_end":62,"column_start":10,"column_end":23},"name":"GamepadButton","qualname":"::input::gamepad::GamepadButton","value":"pub enum GamepadButton {\n    A,\n    B,\n    X,\n    Y,\n    Up,\n    Down,\n    Left,\n    Right,\n    LeftShoulder,\n    LeftTrigger,\n    LeftStick,\n    RightShoulder,\n    RightTrigger,\n    RightStick,\n    Start,\n    Back,\n    Guide,\n}","parent":null,"children":[{"krate":0,"index":1551},{"krate":0,"index":1553},{"krate":0,"index":1555},{"krate":0,"index":1557},{"krate":0,"index":1559},{"krate":0,"index":1561},{"krate":0,"index":1563},{"krate":0,"index":1565},{"krate":0,"index":1567},{"krate":0,"index":1569},{"krate":0,"index":1571},{"krate":0,"index":1573},{"krate":0,"index":1575},{"krate":0,"index":1577},{"krate":0,"index":1579},{"krate":0,"index":1581},{"krate":0,"index":1583}],"decl_id":null,"docs":" A button on a gamepad.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":169008,"byte_end":169030,"line_start":55,"line_end":55,"column_start":1,"column_end":23}},{"value":"/ A button on a gamepad.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":169031,"byte_end":169057,"line_start":56,"line_end":56,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":169058,"byte_end":169061,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ # Serde","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":169062,"byte_end":169073,"line_start":58,"line_end":58,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":169074,"byte_end":169077,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Serialization and deserialization of this type (via [Serde](https://serde.rs/))","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":169078,"byte_end":169161,"line_start":60,"line_end":60,"column_start":1,"column_end":84}},{"value":"/ can be enabled via the `serde_support` feature.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":169162,"byte_end":169213,"line_start":61,"line_end":61,"column_start":1,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1600},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":169834,"byte_end":169844,"line_start":95,"line_end":95,"column_start":5,"column_end":15},"name":"LeftStickX","qualname":"::input::gamepad::GamepadAxis::LeftStickX","value":"GamepadAxis::LeftStickX","parent":{"krate":0,"index":1599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1602},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":169850,"byte_end":169860,"line_start":96,"line_end":96,"column_start":5,"column_end":15},"name":"LeftStickY","qualname":"::input::gamepad::GamepadAxis::LeftStickY","value":"GamepadAxis::LeftStickY","parent":{"krate":0,"index":1599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1604},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":169866,"byte_end":169877,"line_start":97,"line_end":97,"column_start":5,"column_end":16},"name":"LeftTrigger","qualname":"::input::gamepad::GamepadAxis::LeftTrigger","value":"GamepadAxis::LeftTrigger","parent":{"krate":0,"index":1599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1606},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":169883,"byte_end":169894,"line_start":98,"line_end":98,"column_start":5,"column_end":16},"name":"RightStickX","qualname":"::input::gamepad::GamepadAxis::RightStickX","value":"GamepadAxis::RightStickX","parent":{"krate":0,"index":1599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1608},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":169900,"byte_end":169911,"line_start":99,"line_end":99,"column_start":5,"column_end":16},"name":"RightStickY","qualname":"::input::gamepad::GamepadAxis::RightStickY","value":"GamepadAxis::RightStickY","parent":{"krate":0,"index":1599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1610},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":169917,"byte_end":169929,"line_start":100,"line_end":100,"column_start":5,"column_end":17},"name":"RightTrigger","qualname":"::input::gamepad::GamepadAxis::RightTrigger","value":"GamepadAxis::RightTrigger","parent":{"krate":0,"index":1599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1599},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":169816,"byte_end":169827,"line_start":94,"line_end":94,"column_start":10,"column_end":21},"name":"GamepadAxis","qualname":"::input::gamepad::GamepadAxis","value":"pub enum GamepadAxis {\n    LeftStickX,\n    LeftStickY,\n    LeftTrigger,\n    RightStickX,\n    RightStickY,\n    RightTrigger,\n}","parent":null,"children":[{"krate":0,"index":1600},{"krate":0,"index":1602},{"krate":0,"index":1604},{"krate":0,"index":1606},{"krate":0,"index":1608},{"krate":0,"index":1610}],"decl_id":null,"docs":" An axis of movement on a gamepad.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":169590,"byte_end":169612,"line_start":87,"line_end":87,"column_start":1,"column_end":23}},{"value":"/ An axis of movement on a gamepad.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":169613,"byte_end":169650,"line_start":88,"line_end":88,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":169651,"byte_end":169654,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ # Serde","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":169655,"byte_end":169666,"line_start":90,"line_end":90,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":169667,"byte_end":169670,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ Serialization and deserialization of this type (via [Serde](https://serde.rs/))","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":169671,"byte_end":169754,"line_start":92,"line_end":92,"column_start":1,"column_end":84}},{"value":"/ can be enabled via the `serde_support` feature.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":169755,"byte_end":169806,"line_start":93,"line_end":93,"column_start":1,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1627},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":170321,"byte_end":170330,"line_start":116,"line_end":116,"column_start":5,"column_end":14},"name":"LeftStick","qualname":"::input::gamepad::GamepadStick::LeftStick","value":"GamepadStick::LeftStick","parent":{"krate":0,"index":1626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1629},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":170336,"byte_end":170346,"line_start":117,"line_end":117,"column_start":5,"column_end":15},"name":"RightStick","qualname":"::input::gamepad::GamepadStick::RightStick","value":"GamepadStick::RightStick","parent":{"krate":0,"index":1626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1626},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":170302,"byte_end":170314,"line_start":115,"line_end":115,"column_start":10,"column_end":22},"name":"GamepadStick","qualname":"::input::gamepad::GamepadStick","value":"pub enum GamepadStick { LeftStick, RightStick, }","parent":null,"children":[{"krate":0,"index":1627},{"krate":0,"index":1629}],"decl_id":null,"docs":" A control stick on a gamepad.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":170080,"byte_end":170102,"line_start":108,"line_end":108,"column_start":1,"column_end":23}},{"value":"/ A control stick on a gamepad.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":170103,"byte_end":170136,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":170137,"byte_end":170140,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ # Serde","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":170141,"byte_end":170152,"line_start":111,"line_end":111,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":170153,"byte_end":170156,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ Serialization and deserialization of this type (via [Serde](https://serde.rs/))","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":170157,"byte_end":170240,"line_start":113,"line_end":113,"column_start":1,"column_end":84}},{"value":"/ can be enabled via the `serde_support` feature.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":170241,"byte_end":170292,"line_start":114,"line_end":114,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":745},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":170424,"byte_end":170444,"line_start":121,"line_end":121,"column_start":8,"column_end":28},"name":"is_gamepad_connected","qualname":"::input::gamepad::is_gamepad_connected","value":"pub fn is_gamepad_connected(&Context, usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the specified gamepad is currently connected.\n","sig":null,"attributes":[{"value":"/ Returns true if the specified gamepad is currently connected.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":170351,"byte_end":170416,"line_start":120,"line_end":120,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":746},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":170623,"byte_end":170639,"line_start":126,"line_end":126,"column_start":8,"column_end":24},"name":"get_gamepad_name","qualname":"::input::gamepad::get_gamepad_name","value":"pub fn get_gamepad_name(&Context, usize) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of the specified gamepad, or `None` if it is not connected.\n","sig":null,"attributes":[{"value":"/ Returns the name of the specified gamepad, or `None` if it is not connected.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":170535,"byte_end":170615,"line_start":125,"line_end":125,"column_start":1,"column_end":81}}]},{"kind":"Function","id":{"krate":0,"index":749},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":170961,"byte_end":170983,"line_start":135,"line_end":135,"column_start":8,"column_end":30},"name":"is_gamepad_button_down","qualname":"::input::gamepad::is_gamepad_button_down","value":"pub fn is_gamepad_button_down(&Context, usize, GamepadButton) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the specified gamepad button is currently down.","sig":null,"attributes":[{"value":"/ Returns true if the specified gamepad button is currently down.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":170813,"byte_end":170880,"line_start":132,"line_end":132,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":170881,"byte_end":170884,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ If the gamepad is disconnected, this will always return `false`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":170885,"byte_end":170953,"line_start":134,"line_end":134,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":750},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":171329,"byte_end":171349,"line_start":146,"line_end":146,"column_start":8,"column_end":28},"name":"is_gamepad_button_up","qualname":"::input::gamepad::is_gamepad_button_up","value":"pub fn is_gamepad_button_up(&Context, usize, GamepadButton) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the specified gamepad button is currently up.","sig":null,"attributes":[{"value":"/ Returns true if the specified gamepad button is currently up.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":171184,"byte_end":171249,"line_start":143,"line_end":143,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":171250,"byte_end":171253,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ If the gamepad is disconnected, this will always return `true`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":171254,"byte_end":171321,"line_start":145,"line_end":145,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":751},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":171714,"byte_end":171739,"line_start":157,"line_end":157,"column_start":8,"column_end":33},"name":"is_gamepad_button_pressed","qualname":"::input::gamepad::is_gamepad_button_pressed","value":"pub fn is_gamepad_button_pressed(&Context, usize, GamepadButton) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the specified gamepad button was pressed since the last update.","sig":null,"attributes":[{"value":"/ Returns true if the specified gamepad button was pressed since the last update.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":171550,"byte_end":171633,"line_start":154,"line_end":154,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":171634,"byte_end":171637,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ If the gamepad is disconnected, this will always return `false`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":171638,"byte_end":171706,"line_start":156,"line_end":156,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":752},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":172108,"byte_end":172134,"line_start":168,"line_end":168,"column_start":8,"column_end":34},"name":"is_gamepad_button_released","qualname":"::input::gamepad::is_gamepad_button_released","value":"pub fn is_gamepad_button_released(&Context, usize, GamepadButton) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the specified gamepad button was released since the last update.","sig":null,"attributes":[{"value":"/ Returns true if the specified gamepad button was released since the last update.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":171943,"byte_end":172027,"line_start":165,"line_end":165,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":172028,"byte_end":172031,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ If the gamepad is disconnected, this will always return `false`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":172032,"byte_end":172100,"line_start":167,"line_end":167,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":765},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":173066,"byte_end":173090,"line_start":205,"line_end":205,"column_start":8,"column_end":32},"name":"get_gamepad_buttons_down","qualname":"::input::gamepad::get_gamepad_buttons_down","value":"pub fn get_gamepad_buttons_down(&Context, usize) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator of the buttons that are currently down on the specified gamepad.","sig":null,"attributes":[{"value":"/ Returns an iterator of the buttons that are currently down on the specified gamepad.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":172894,"byte_end":172982,"line_start":202,"line_end":202,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":172983,"byte_end":172986,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ If the gamepad is disconnected, an empty iterator will be returned.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":172987,"byte_end":173058,"line_start":204,"line_end":204,"column_start":1,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":767},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":173540,"byte_end":173567,"line_start":219,"line_end":219,"column_start":8,"column_end":35},"name":"get_gamepad_buttons_pressed","qualname":"::input::gamepad::get_gamepad_buttons_pressed","value":"pub fn get_gamepad_buttons_pressed(&Context, usize) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator of the buttons that were pressed on the specified gamepad since the last update.","sig":null,"attributes":[{"value":"/ Returns an iterator of the buttons that were pressed on the specified gamepad since the last update.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":173352,"byte_end":173456,"line_start":216,"line_end":216,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":173457,"byte_end":173460,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ If the gamepad is disconnected, an empty iterator will be returned.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":173461,"byte_end":173532,"line_start":218,"line_end":218,"column_start":1,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":769},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":174022,"byte_end":174050,"line_start":233,"line_end":233,"column_start":8,"column_end":36},"name":"get_gamepad_buttons_released","qualname":"::input::gamepad::get_gamepad_buttons_released","value":"pub fn get_gamepad_buttons_released(&Context, usize) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator of the buttons that were released on the specified gamepad since the last update .","sig":null,"attributes":[{"value":"/ Returns an iterator of the buttons that were released on the specified gamepad since the last update .","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":173832,"byte_end":173938,"line_start":230,"line_end":230,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":173939,"byte_end":173942,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ If the gamepad is disconnected, an empty iterator will be returned.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":173943,"byte_end":174014,"line_start":232,"line_end":232,"column_start":1,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":771},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":174458,"byte_end":174483,"line_start":247,"line_end":247,"column_start":8,"column_end":33},"name":"get_gamepad_axis_position","qualname":"::input::gamepad::get_gamepad_axis_position","value":"pub fn get_gamepad_axis_position(&Context, usize, GamepadAxis) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the current position of the specified gamepad axis.","sig":null,"attributes":[{"value":"/ Returns the current position of the specified gamepad axis.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":174316,"byte_end":174379,"line_start":244,"line_end":244,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":174380,"byte_end":174383,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ If the gamepad is disconnected, this will always return `0.0`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":174384,"byte_end":174450,"line_start":246,"line_end":246,"column_start":1,"column_end":67}}]},{"kind":"Function","id":{"krate":0,"index":772},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":174919,"byte_end":174945,"line_start":262,"line_end":262,"column_start":8,"column_end":34},"name":"get_gamepad_stick_position","qualname":"::input::gamepad::get_gamepad_stick_position","value":"pub fn get_gamepad_stick_position(&Context, usize, GamepadStick) -> Vec2<f32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the current position of the specified gamepad control stick.","sig":null,"attributes":[{"value":"/ Returns the current position of the specified gamepad control stick.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":174761,"byte_end":174833,"line_start":259,"line_end":259,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":174834,"byte_end":174837,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ If the gamepad is disconnected, this will always return `(0.0, 0.0)`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":174838,"byte_end":174911,"line_start":261,"line_end":261,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":773},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":175543,"byte_end":175573,"line_start":281,"line_end":281,"column_start":8,"column_end":38},"name":"is_gamepad_vibration_supported","qualname":"::input::gamepad::is_gamepad_vibration_supported","value":"pub fn is_gamepad_vibration_supported(&Context, usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the specified gamepad supports vibration.","sig":null,"attributes":[{"value":"/ Returns true if the specified gamepad supports vibration.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":175401,"byte_end":175462,"line_start":278,"line_end":278,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":175463,"byte_end":175466,"line_start":279,"line_end":279,"column_start":1,"column_end":4}},{"value":"/ If the gamepad is disconnected, this will always return `false`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":175467,"byte_end":175535,"line_start":280,"line_end":280,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":774},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":175847,"byte_end":175868,"line_start":290,"line_end":290,"column_start":8,"column_end":29},"name":"set_gamepad_vibration","qualname":"::input::gamepad::set_gamepad_vibration","value":"pub fn set_gamepad_vibration(&mut Context, usize, f32)","parent":null,"children":[],"decl_id":null,"docs":" Sets the specified gamepad's motors to vibrate indefinitely.\n","sig":null,"attributes":[{"value":"/ Sets the specified gamepad's motors to vibrate indefinitely.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":175775,"byte_end":175839,"line_start":289,"line_end":289,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":776},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":176259,"byte_end":176282,"line_start":298,"line_end":298,"column_start":8,"column_end":31},"name":"start_gamepad_vibration","qualname":"::input::gamepad::start_gamepad_vibration","value":"pub fn start_gamepad_vibration(&mut Context, usize, f32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Sets the specified gamepad's motors to vibrate for a set duration, specified in milliseconds.\n After this time has passed, the vibration will automatically stop.\n","sig":null,"attributes":[{"value":"/ Sets the specified gamepad's motors to vibrate for a set duration, specified in milliseconds.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":176083,"byte_end":176180,"line_start":296,"line_end":296,"column_start":1,"column_end":98}},{"value":"/ After this time has passed, the vibration will automatically stop.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":176181,"byte_end":176251,"line_start":297,"line_end":297,"column_start":1,"column_end":71}}]},{"kind":"Function","id":{"krate":0,"index":778},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":176601,"byte_end":176623,"line_start":306,"line_end":306,"column_start":8,"column_end":30},"name":"stop_gamepad_vibration","qualname":"::input::gamepad::stop_gamepad_vibration","value":"pub fn stop_gamepad_vibration(&mut Context, usize)","parent":null,"children":[],"decl_id":null,"docs":" Stops the specified gamepad's motors from vibrating.\n","sig":null,"attributes":[{"value":"/ Stops the specified gamepad's motors from vibrating.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":176537,"byte_end":176593,"line_start":305,"line_end":305,"column_start":1,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1646},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178490,"byte_end":178491,"line_start":16,"line_end":16,"column_start":5,"column_end":6},"name":"A","qualname":"::input::keyboard::Key::A","value":"Key::A","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1648},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178497,"byte_end":178498,"line_start":17,"line_end":17,"column_start":5,"column_end":6},"name":"B","qualname":"::input::keyboard::Key::B","value":"Key::B","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1650},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178504,"byte_end":178505,"line_start":18,"line_end":18,"column_start":5,"column_end":6},"name":"C","qualname":"::input::keyboard::Key::C","value":"Key::C","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1652},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178511,"byte_end":178512,"line_start":19,"line_end":19,"column_start":5,"column_end":6},"name":"D","qualname":"::input::keyboard::Key::D","value":"Key::D","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1654},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178518,"byte_end":178519,"line_start":20,"line_end":20,"column_start":5,"column_end":6},"name":"E","qualname":"::input::keyboard::Key::E","value":"Key::E","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1656},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178525,"byte_end":178526,"line_start":21,"line_end":21,"column_start":5,"column_end":6},"name":"F","qualname":"::input::keyboard::Key::F","value":"Key::F","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1658},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178532,"byte_end":178533,"line_start":22,"line_end":22,"column_start":5,"column_end":6},"name":"G","qualname":"::input::keyboard::Key::G","value":"Key::G","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1660},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178539,"byte_end":178540,"line_start":23,"line_end":23,"column_start":5,"column_end":6},"name":"H","qualname":"::input::keyboard::Key::H","value":"Key::H","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1662},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178546,"byte_end":178547,"line_start":24,"line_end":24,"column_start":5,"column_end":6},"name":"I","qualname":"::input::keyboard::Key::I","value":"Key::I","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1664},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178553,"byte_end":178554,"line_start":25,"line_end":25,"column_start":5,"column_end":6},"name":"J","qualname":"::input::keyboard::Key::J","value":"Key::J","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1666},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178560,"byte_end":178561,"line_start":26,"line_end":26,"column_start":5,"column_end":6},"name":"K","qualname":"::input::keyboard::Key::K","value":"Key::K","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1668},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178567,"byte_end":178568,"line_start":27,"line_end":27,"column_start":5,"column_end":6},"name":"L","qualname":"::input::keyboard::Key::L","value":"Key::L","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1670},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178574,"byte_end":178575,"line_start":28,"line_end":28,"column_start":5,"column_end":6},"name":"M","qualname":"::input::keyboard::Key::M","value":"Key::M","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1672},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178581,"byte_end":178582,"line_start":29,"line_end":29,"column_start":5,"column_end":6},"name":"N","qualname":"::input::keyboard::Key::N","value":"Key::N","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1674},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178588,"byte_end":178589,"line_start":30,"line_end":30,"column_start":5,"column_end":6},"name":"O","qualname":"::input::keyboard::Key::O","value":"Key::O","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1676},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178595,"byte_end":178596,"line_start":31,"line_end":31,"column_start":5,"column_end":6},"name":"P","qualname":"::input::keyboard::Key::P","value":"Key::P","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1678},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178602,"byte_end":178603,"line_start":32,"line_end":32,"column_start":5,"column_end":6},"name":"Q","qualname":"::input::keyboard::Key::Q","value":"Key::Q","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1680},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178609,"byte_end":178610,"line_start":33,"line_end":33,"column_start":5,"column_end":6},"name":"R","qualname":"::input::keyboard::Key::R","value":"Key::R","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1682},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178616,"byte_end":178617,"line_start":34,"line_end":34,"column_start":5,"column_end":6},"name":"S","qualname":"::input::keyboard::Key::S","value":"Key::S","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1684},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178623,"byte_end":178624,"line_start":35,"line_end":35,"column_start":5,"column_end":6},"name":"T","qualname":"::input::keyboard::Key::T","value":"Key::T","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1686},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178630,"byte_end":178631,"line_start":36,"line_end":36,"column_start":5,"column_end":6},"name":"U","qualname":"::input::keyboard::Key::U","value":"Key::U","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1688},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178637,"byte_end":178638,"line_start":37,"line_end":37,"column_start":5,"column_end":6},"name":"V","qualname":"::input::keyboard::Key::V","value":"Key::V","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1690},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178644,"byte_end":178645,"line_start":38,"line_end":38,"column_start":5,"column_end":6},"name":"W","qualname":"::input::keyboard::Key::W","value":"Key::W","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1692},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178651,"byte_end":178652,"line_start":39,"line_end":39,"column_start":5,"column_end":6},"name":"X","qualname":"::input::keyboard::Key::X","value":"Key::X","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1694},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178658,"byte_end":178659,"line_start":40,"line_end":40,"column_start":5,"column_end":6},"name":"Y","qualname":"::input::keyboard::Key::Y","value":"Key::Y","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1696},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178665,"byte_end":178666,"line_start":41,"line_end":41,"column_start":5,"column_end":6},"name":"Z","qualname":"::input::keyboard::Key::Z","value":"Key::Z","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1698},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178673,"byte_end":178677,"line_start":43,"line_end":43,"column_start":5,"column_end":9},"name":"Num0","qualname":"::input::keyboard::Key::Num0","value":"Key::Num0","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1700},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178683,"byte_end":178687,"line_start":44,"line_end":44,"column_start":5,"column_end":9},"name":"Num1","qualname":"::input::keyboard::Key::Num1","value":"Key::Num1","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1702},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178693,"byte_end":178697,"line_start":45,"line_end":45,"column_start":5,"column_end":9},"name":"Num2","qualname":"::input::keyboard::Key::Num2","value":"Key::Num2","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1704},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178703,"byte_end":178707,"line_start":46,"line_end":46,"column_start":5,"column_end":9},"name":"Num3","qualname":"::input::keyboard::Key::Num3","value":"Key::Num3","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1706},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178713,"byte_end":178717,"line_start":47,"line_end":47,"column_start":5,"column_end":9},"name":"Num4","qualname":"::input::keyboard::Key::Num4","value":"Key::Num4","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1708},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178723,"byte_end":178727,"line_start":48,"line_end":48,"column_start":5,"column_end":9},"name":"Num5","qualname":"::input::keyboard::Key::Num5","value":"Key::Num5","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1710},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178733,"byte_end":178737,"line_start":49,"line_end":49,"column_start":5,"column_end":9},"name":"Num6","qualname":"::input::keyboard::Key::Num6","value":"Key::Num6","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1712},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178743,"byte_end":178747,"line_start":50,"line_end":50,"column_start":5,"column_end":9},"name":"Num7","qualname":"::input::keyboard::Key::Num7","value":"Key::Num7","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1714},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178753,"byte_end":178757,"line_start":51,"line_end":51,"column_start":5,"column_end":9},"name":"Num8","qualname":"::input::keyboard::Key::Num8","value":"Key::Num8","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1716},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178763,"byte_end":178767,"line_start":52,"line_end":52,"column_start":5,"column_end":9},"name":"Num9","qualname":"::input::keyboard::Key::Num9","value":"Key::Num9","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1718},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178774,"byte_end":178776,"line_start":54,"line_end":54,"column_start":5,"column_end":7},"name":"F1","qualname":"::input::keyboard::Key::F1","value":"Key::F1","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1720},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178782,"byte_end":178784,"line_start":55,"line_end":55,"column_start":5,"column_end":7},"name":"F2","qualname":"::input::keyboard::Key::F2","value":"Key::F2","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1722},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178790,"byte_end":178792,"line_start":56,"line_end":56,"column_start":5,"column_end":7},"name":"F3","qualname":"::input::keyboard::Key::F3","value":"Key::F3","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1724},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178798,"byte_end":178800,"line_start":57,"line_end":57,"column_start":5,"column_end":7},"name":"F4","qualname":"::input::keyboard::Key::F4","value":"Key::F4","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1726},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178806,"byte_end":178808,"line_start":58,"line_end":58,"column_start":5,"column_end":7},"name":"F5","qualname":"::input::keyboard::Key::F5","value":"Key::F5","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1728},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178814,"byte_end":178816,"line_start":59,"line_end":59,"column_start":5,"column_end":7},"name":"F6","qualname":"::input::keyboard::Key::F6","value":"Key::F6","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1730},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178822,"byte_end":178824,"line_start":60,"line_end":60,"column_start":5,"column_end":7},"name":"F7","qualname":"::input::keyboard::Key::F7","value":"Key::F7","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1732},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178830,"byte_end":178832,"line_start":61,"line_end":61,"column_start":5,"column_end":7},"name":"F8","qualname":"::input::keyboard::Key::F8","value":"Key::F8","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1734},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178838,"byte_end":178840,"line_start":62,"line_end":62,"column_start":5,"column_end":7},"name":"F9","qualname":"::input::keyboard::Key::F9","value":"Key::F9","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1736},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178846,"byte_end":178849,"line_start":63,"line_end":63,"column_start":5,"column_end":8},"name":"F10","qualname":"::input::keyboard::Key::F10","value":"Key::F10","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1738},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178855,"byte_end":178858,"line_start":64,"line_end":64,"column_start":5,"column_end":8},"name":"F11","qualname":"::input::keyboard::Key::F11","value":"Key::F11","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1740},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178864,"byte_end":178867,"line_start":65,"line_end":65,"column_start":5,"column_end":8},"name":"F12","qualname":"::input::keyboard::Key::F12","value":"Key::F12","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1742},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178873,"byte_end":178876,"line_start":66,"line_end":66,"column_start":5,"column_end":8},"name":"F13","qualname":"::input::keyboard::Key::F13","value":"Key::F13","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1744},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178882,"byte_end":178885,"line_start":67,"line_end":67,"column_start":5,"column_end":8},"name":"F14","qualname":"::input::keyboard::Key::F14","value":"Key::F14","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1746},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178891,"byte_end":178894,"line_start":68,"line_end":68,"column_start":5,"column_end":8},"name":"F15","qualname":"::input::keyboard::Key::F15","value":"Key::F15","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1748},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178900,"byte_end":178903,"line_start":69,"line_end":69,"column_start":5,"column_end":8},"name":"F16","qualname":"::input::keyboard::Key::F16","value":"Key::F16","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1750},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178909,"byte_end":178912,"line_start":70,"line_end":70,"column_start":5,"column_end":8},"name":"F17","qualname":"::input::keyboard::Key::F17","value":"Key::F17","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1752},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178918,"byte_end":178921,"line_start":71,"line_end":71,"column_start":5,"column_end":8},"name":"F18","qualname":"::input::keyboard::Key::F18","value":"Key::F18","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1754},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178927,"byte_end":178930,"line_start":72,"line_end":72,"column_start":5,"column_end":8},"name":"F19","qualname":"::input::keyboard::Key::F19","value":"Key::F19","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1756},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178936,"byte_end":178939,"line_start":73,"line_end":73,"column_start":5,"column_end":8},"name":"F20","qualname":"::input::keyboard::Key::F20","value":"Key::F20","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1758},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178945,"byte_end":178948,"line_start":74,"line_end":74,"column_start":5,"column_end":8},"name":"F21","qualname":"::input::keyboard::Key::F21","value":"Key::F21","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1760},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178954,"byte_end":178957,"line_start":75,"line_end":75,"column_start":5,"column_end":8},"name":"F22","qualname":"::input::keyboard::Key::F22","value":"Key::F22","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1762},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178963,"byte_end":178966,"line_start":76,"line_end":76,"column_start":5,"column_end":8},"name":"F23","qualname":"::input::keyboard::Key::F23","value":"Key::F23","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1764},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178972,"byte_end":178975,"line_start":77,"line_end":77,"column_start":5,"column_end":8},"name":"F24","qualname":"::input::keyboard::Key::F24","value":"Key::F24","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1766},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178982,"byte_end":178989,"line_start":79,"line_end":79,"column_start":5,"column_end":12},"name":"NumLock","qualname":"::input::keyboard::Key::NumLock","value":"Key::NumLock","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1768},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178995,"byte_end":179002,"line_start":80,"line_end":80,"column_start":5,"column_end":12},"name":"NumPad1","qualname":"::input::keyboard::Key::NumPad1","value":"Key::NumPad1","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1770},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179008,"byte_end":179015,"line_start":81,"line_end":81,"column_start":5,"column_end":12},"name":"NumPad2","qualname":"::input::keyboard::Key::NumPad2","value":"Key::NumPad2","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1772},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179021,"byte_end":179028,"line_start":82,"line_end":82,"column_start":5,"column_end":12},"name":"NumPad3","qualname":"::input::keyboard::Key::NumPad3","value":"Key::NumPad3","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1774},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179034,"byte_end":179041,"line_start":83,"line_end":83,"column_start":5,"column_end":12},"name":"NumPad4","qualname":"::input::keyboard::Key::NumPad4","value":"Key::NumPad4","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1776},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179047,"byte_end":179054,"line_start":84,"line_end":84,"column_start":5,"column_end":12},"name":"NumPad5","qualname":"::input::keyboard::Key::NumPad5","value":"Key::NumPad5","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1778},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179060,"byte_end":179067,"line_start":85,"line_end":85,"column_start":5,"column_end":12},"name":"NumPad6","qualname":"::input::keyboard::Key::NumPad6","value":"Key::NumPad6","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1780},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179073,"byte_end":179080,"line_start":86,"line_end":86,"column_start":5,"column_end":12},"name":"NumPad7","qualname":"::input::keyboard::Key::NumPad7","value":"Key::NumPad7","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1782},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179086,"byte_end":179093,"line_start":87,"line_end":87,"column_start":5,"column_end":12},"name":"NumPad8","qualname":"::input::keyboard::Key::NumPad8","value":"Key::NumPad8","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1784},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179099,"byte_end":179106,"line_start":88,"line_end":88,"column_start":5,"column_end":12},"name":"NumPad9","qualname":"::input::keyboard::Key::NumPad9","value":"Key::NumPad9","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1786},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179112,"byte_end":179119,"line_start":89,"line_end":89,"column_start":5,"column_end":12},"name":"NumPad0","qualname":"::input::keyboard::Key::NumPad0","value":"Key::NumPad0","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1788},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179125,"byte_end":179135,"line_start":90,"line_end":90,"column_start":5,"column_end":15},"name":"NumPadPlus","qualname":"::input::keyboard::Key::NumPadPlus","value":"Key::NumPadPlus","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1790},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179141,"byte_end":179152,"line_start":91,"line_end":91,"column_start":5,"column_end":16},"name":"NumPadMinus","qualname":"::input::keyboard::Key::NumPadMinus","value":"Key::NumPadMinus","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1792},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179158,"byte_end":179172,"line_start":92,"line_end":92,"column_start":5,"column_end":19},"name":"NumPadMultiply","qualname":"::input::keyboard::Key::NumPadMultiply","value":"Key::NumPadMultiply","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1794},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179178,"byte_end":179190,"line_start":93,"line_end":93,"column_start":5,"column_end":17},"name":"NumPadDivide","qualname":"::input::keyboard::Key::NumPadDivide","value":"Key::NumPadDivide","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1796},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179196,"byte_end":179207,"line_start":94,"line_end":94,"column_start":5,"column_end":16},"name":"NumPadEnter","qualname":"::input::keyboard::Key::NumPadEnter","value":"Key::NumPadEnter","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1798},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179214,"byte_end":179222,"line_start":96,"line_end":96,"column_start":5,"column_end":13},"name":"LeftCtrl","qualname":"::input::keyboard::Key::LeftCtrl","value":"Key::LeftCtrl","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1800},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179228,"byte_end":179237,"line_start":97,"line_end":97,"column_start":5,"column_end":14},"name":"LeftShift","qualname":"::input::keyboard::Key::LeftShift","value":"Key::LeftShift","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1802},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179243,"byte_end":179250,"line_start":98,"line_end":98,"column_start":5,"column_end":12},"name":"LeftAlt","qualname":"::input::keyboard::Key::LeftAlt","value":"Key::LeftAlt","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1804},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179256,"byte_end":179265,"line_start":99,"line_end":99,"column_start":5,"column_end":14},"name":"RightCtrl","qualname":"::input::keyboard::Key::RightCtrl","value":"Key::RightCtrl","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1806},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179271,"byte_end":179281,"line_start":100,"line_end":100,"column_start":5,"column_end":15},"name":"RightShift","qualname":"::input::keyboard::Key::RightShift","value":"Key::RightShift","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1808},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179287,"byte_end":179295,"line_start":101,"line_end":101,"column_start":5,"column_end":13},"name":"RightAlt","qualname":"::input::keyboard::Key::RightAlt","value":"Key::RightAlt","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1810},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179302,"byte_end":179304,"line_start":103,"line_end":103,"column_start":5,"column_end":7},"name":"Up","qualname":"::input::keyboard::Key::Up","value":"Key::Up","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1812},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179310,"byte_end":179314,"line_start":104,"line_end":104,"column_start":5,"column_end":9},"name":"Down","qualname":"::input::keyboard::Key::Down","value":"Key::Down","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1814},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179320,"byte_end":179324,"line_start":105,"line_end":105,"column_start":5,"column_end":9},"name":"Left","qualname":"::input::keyboard::Key::Left","value":"Key::Left","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1816},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179330,"byte_end":179335,"line_start":106,"line_end":106,"column_start":5,"column_end":10},"name":"Right","qualname":"::input::keyboard::Key::Right","value":"Key::Right","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1818},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179342,"byte_end":179351,"line_start":108,"line_end":108,"column_start":5,"column_end":14},"name":"Ampersand","qualname":"::input::keyboard::Key::Ampersand","value":"Key::Ampersand","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1820},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179357,"byte_end":179365,"line_start":109,"line_end":109,"column_start":5,"column_end":13},"name":"Asterisk","qualname":"::input::keyboard::Key::Asterisk","value":"Key::Asterisk","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1822},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179371,"byte_end":179373,"line_start":110,"line_end":110,"column_start":5,"column_end":7},"name":"At","qualname":"::input::keyboard::Key::At","value":"Key::At","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1824},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179379,"byte_end":179388,"line_start":111,"line_end":111,"column_start":5,"column_end":14},"name":"Backquote","qualname":"::input::keyboard::Key::Backquote","value":"Key::Backquote","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1826},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179394,"byte_end":179403,"line_start":112,"line_end":112,"column_start":5,"column_end":14},"name":"Backslash","qualname":"::input::keyboard::Key::Backslash","value":"Key::Backslash","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1828},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179409,"byte_end":179418,"line_start":113,"line_end":113,"column_start":5,"column_end":14},"name":"Backspace","qualname":"::input::keyboard::Key::Backspace","value":"Key::Backspace","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1830},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179424,"byte_end":179432,"line_start":114,"line_end":114,"column_start":5,"column_end":13},"name":"CapsLock","qualname":"::input::keyboard::Key::CapsLock","value":"Key::CapsLock","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1832},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179438,"byte_end":179443,"line_start":115,"line_end":115,"column_start":5,"column_end":10},"name":"Caret","qualname":"::input::keyboard::Key::Caret","value":"Key::Caret","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1834},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179449,"byte_end":179454,"line_start":116,"line_end":116,"column_start":5,"column_end":10},"name":"Colon","qualname":"::input::keyboard::Key::Colon","value":"Key::Colon","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1836},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179460,"byte_end":179465,"line_start":117,"line_end":117,"column_start":5,"column_end":10},"name":"Comma","qualname":"::input::keyboard::Key::Comma","value":"Key::Comma","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1838},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179471,"byte_end":179477,"line_start":118,"line_end":118,"column_start":5,"column_end":11},"name":"Delete","qualname":"::input::keyboard::Key::Delete","value":"Key::Delete","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1840},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179483,"byte_end":179489,"line_start":119,"line_end":119,"column_start":5,"column_end":11},"name":"Dollar","qualname":"::input::keyboard::Key::Dollar","value":"Key::Dollar","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1842},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179495,"byte_end":179506,"line_start":120,"line_end":120,"column_start":5,"column_end":16},"name":"DoubleQuote","qualname":"::input::keyboard::Key::DoubleQuote","value":"Key::DoubleQuote","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1844},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179512,"byte_end":179515,"line_start":121,"line_end":121,"column_start":5,"column_end":8},"name":"End","qualname":"::input::keyboard::Key::End","value":"Key::End","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1846},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179521,"byte_end":179526,"line_start":122,"line_end":122,"column_start":5,"column_end":10},"name":"Enter","qualname":"::input::keyboard::Key::Enter","value":"Key::Enter","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1848},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179532,"byte_end":179538,"line_start":123,"line_end":123,"column_start":5,"column_end":11},"name":"Equals","qualname":"::input::keyboard::Key::Equals","value":"Key::Equals","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1850},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179544,"byte_end":179550,"line_start":124,"line_end":124,"column_start":5,"column_end":11},"name":"Escape","qualname":"::input::keyboard::Key::Escape","value":"Key::Escape","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1852},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179556,"byte_end":179563,"line_start":125,"line_end":125,"column_start":5,"column_end":12},"name":"Exclaim","qualname":"::input::keyboard::Key::Exclaim","value":"Key::Exclaim","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1854},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179569,"byte_end":179580,"line_start":126,"line_end":126,"column_start":5,"column_end":16},"name":"GreaterThan","qualname":"::input::keyboard::Key::GreaterThan","value":"Key::GreaterThan","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1856},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179586,"byte_end":179590,"line_start":127,"line_end":127,"column_start":5,"column_end":9},"name":"Hash","qualname":"::input::keyboard::Key::Hash","value":"Key::Hash","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1858},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179596,"byte_end":179600,"line_start":128,"line_end":128,"column_start":5,"column_end":9},"name":"Home","qualname":"::input::keyboard::Key::Home","value":"Key::Home","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1860},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179606,"byte_end":179612,"line_start":129,"line_end":129,"column_start":5,"column_end":11},"name":"Insert","qualname":"::input::keyboard::Key::Insert","value":"Key::Insert","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1862},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179618,"byte_end":179629,"line_start":130,"line_end":130,"column_start":5,"column_end":16},"name":"LeftBracket","qualname":"::input::keyboard::Key::LeftBracket","value":"Key::LeftBracket","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1864},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179635,"byte_end":179644,"line_start":131,"line_end":131,"column_start":5,"column_end":14},"name":"LeftParen","qualname":"::input::keyboard::Key::LeftParen","value":"Key::LeftParen","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1866},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179650,"byte_end":179658,"line_start":132,"line_end":132,"column_start":5,"column_end":13},"name":"LessThan","qualname":"::input::keyboard::Key::LessThan","value":"Key::LessThan","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1868},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179664,"byte_end":179669,"line_start":133,"line_end":133,"column_start":5,"column_end":10},"name":"Minus","qualname":"::input::keyboard::Key::Minus","value":"Key::Minus","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1870},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179675,"byte_end":179683,"line_start":134,"line_end":134,"column_start":5,"column_end":13},"name":"PageDown","qualname":"::input::keyboard::Key::PageDown","value":"Key::PageDown","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1872},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179689,"byte_end":179695,"line_start":135,"line_end":135,"column_start":5,"column_end":11},"name":"PageUp","qualname":"::input::keyboard::Key::PageUp","value":"Key::PageUp","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1874},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179701,"byte_end":179706,"line_start":136,"line_end":136,"column_start":5,"column_end":10},"name":"Pause","qualname":"::input::keyboard::Key::Pause","value":"Key::Pause","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1876},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179712,"byte_end":179719,"line_start":137,"line_end":137,"column_start":5,"column_end":12},"name":"Percent","qualname":"::input::keyboard::Key::Percent","value":"Key::Percent","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1878},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179725,"byte_end":179731,"line_start":138,"line_end":138,"column_start":5,"column_end":11},"name":"Period","qualname":"::input::keyboard::Key::Period","value":"Key::Period","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1880},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179737,"byte_end":179741,"line_start":139,"line_end":139,"column_start":5,"column_end":9},"name":"Plus","qualname":"::input::keyboard::Key::Plus","value":"Key::Plus","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1882},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179747,"byte_end":179758,"line_start":140,"line_end":140,"column_start":5,"column_end":16},"name":"PrintScreen","qualname":"::input::keyboard::Key::PrintScreen","value":"Key::PrintScreen","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1884},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179764,"byte_end":179772,"line_start":141,"line_end":141,"column_start":5,"column_end":13},"name":"Question","qualname":"::input::keyboard::Key::Question","value":"Key::Question","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1886},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179778,"byte_end":179783,"line_start":142,"line_end":142,"column_start":5,"column_end":10},"name":"Quote","qualname":"::input::keyboard::Key::Quote","value":"Key::Quote","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1888},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179789,"byte_end":179801,"line_start":143,"line_end":143,"column_start":5,"column_end":17},"name":"RightBracket","qualname":"::input::keyboard::Key::RightBracket","value":"Key::RightBracket","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1890},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179807,"byte_end":179817,"line_start":144,"line_end":144,"column_start":5,"column_end":15},"name":"RightParen","qualname":"::input::keyboard::Key::RightParen","value":"Key::RightParen","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1892},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179823,"byte_end":179833,"line_start":145,"line_end":145,"column_start":5,"column_end":15},"name":"ScrollLock","qualname":"::input::keyboard::Key::ScrollLock","value":"Key::ScrollLock","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1894},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179839,"byte_end":179848,"line_start":146,"line_end":146,"column_start":5,"column_end":14},"name":"Semicolon","qualname":"::input::keyboard::Key::Semicolon","value":"Key::Semicolon","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1896},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179854,"byte_end":179859,"line_start":147,"line_end":147,"column_start":5,"column_end":10},"name":"Slash","qualname":"::input::keyboard::Key::Slash","value":"Key::Slash","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1898},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179865,"byte_end":179870,"line_start":148,"line_end":148,"column_start":5,"column_end":10},"name":"Space","qualname":"::input::keyboard::Key::Space","value":"Key::Space","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1900},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179876,"byte_end":179879,"line_start":149,"line_end":149,"column_start":5,"column_end":8},"name":"Tab","qualname":"::input::keyboard::Key::Tab","value":"Key::Tab","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1902},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179885,"byte_end":179895,"line_start":150,"line_end":150,"column_start":5,"column_end":15},"name":"Underscore","qualname":"::input::keyboard::Key::Underscore","value":"Key::Underscore","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1645},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178480,"byte_end":178483,"line_start":15,"line_end":15,"column_start":10,"column_end":13},"name":"Key","qualname":"::input::keyboard::Key","value":"pub enum Key {\n    A,\n    B,\n    C,\n    D,\n    E,\n    F,\n    G,\n    H,\n    I,\n    J,\n    K,\n    L,\n    M,\n    N,\n    O,\n    P,\n    Q,\n    R,\n    S,\n    T,\n    U,\n    V,\n    W,\n    X,\n    Y,\n    Z,\n    Num0,\n    Num1,\n    Num2,\n    Num3,\n    Num4,\n    Num5,\n    Num6,\n    Num7,\n    Num8,\n    Num9,\n    F1,\n    F2,\n    F3,\n    F4,\n    F5,\n    F6,\n    F7,\n    F8,\n    F9,\n    F10,\n    F11,\n    F12,\n    F13,\n    F14,\n    F15,\n    F16,\n    F17,\n    F18,\n    F19,\n    F20,\n    F21,\n    F22,\n    F23,\n    F24,\n    NumLock,\n    NumPad1,\n    NumPad2,\n    NumPad3,\n    NumPad4,\n    NumPad5,\n    NumPad6,\n    NumPad7,\n    NumPad8,\n    NumPad9,\n    NumPad0,\n    NumPadPlus,\n    NumPadMinus,\n    NumPadMultiply,\n    NumPadDivide,\n    NumPadEnter,\n    LeftCtrl,\n    LeftShift,\n    LeftAlt,\n    RightCtrl,\n    RightShift,\n    RightAlt,\n    Up,\n    Down,\n    Left,\n    Right,\n    Ampersand,\n    Asterisk,\n    At,\n    Backquote,\n    Backslash,\n    Backspace,\n    CapsLock,\n    Caret,\n    Colon,\n    Comma,\n    Delete,\n    Dollar,\n    DoubleQuote,\n    End,\n    Enter,\n    Equals,\n    Escape,\n    Exclaim,\n    GreaterThan,\n    Hash,\n    Home,\n    Insert,\n    LeftBracket,\n    LeftParen,\n    LessThan,\n    Minus,\n    PageDown,\n    PageUp,\n    Pause,\n    Percent,\n    Period,\n    Plus,\n    PrintScreen,\n    Question,\n    Quote,\n    RightBracket,\n    RightParen,\n    ScrollLock,\n    Semicolon,\n    Slash,\n    Space,\n    Tab,\n    Underscore,\n}","parent":null,"children":[{"krate":0,"index":1646},{"krate":0,"index":1648},{"krate":0,"index":1650},{"krate":0,"index":1652},{"krate":0,"index":1654},{"krate":0,"index":1656},{"krate":0,"index":1658},{"krate":0,"index":1660},{"krate":0,"index":1662},{"krate":0,"index":1664},{"krate":0,"index":1666},{"krate":0,"index":1668},{"krate":0,"index":1670},{"krate":0,"index":1672},{"krate":0,"index":1674},{"krate":0,"index":1676},{"krate":0,"index":1678},{"krate":0,"index":1680},{"krate":0,"index":1682},{"krate":0,"index":1684},{"krate":0,"index":1686},{"krate":0,"index":1688},{"krate":0,"index":1690},{"krate":0,"index":1692},{"krate":0,"index":1694},{"krate":0,"index":1696},{"krate":0,"index":1698},{"krate":0,"index":1700},{"krate":0,"index":1702},{"krate":0,"index":1704},{"krate":0,"index":1706},{"krate":0,"index":1708},{"krate":0,"index":1710},{"krate":0,"index":1712},{"krate":0,"index":1714},{"krate":0,"index":1716},{"krate":0,"index":1718},{"krate":0,"index":1720},{"krate":0,"index":1722},{"krate":0,"index":1724},{"krate":0,"index":1726},{"krate":0,"index":1728},{"krate":0,"index":1730},{"krate":0,"index":1732},{"krate":0,"index":1734},{"krate":0,"index":1736},{"krate":0,"index":1738},{"krate":0,"index":1740},{"krate":0,"index":1742},{"krate":0,"index":1744},{"krate":0,"index":1746},{"krate":0,"index":1748},{"krate":0,"index":1750},{"krate":0,"index":1752},{"krate":0,"index":1754},{"krate":0,"index":1756},{"krate":0,"index":1758},{"krate":0,"index":1760},{"krate":0,"index":1762},{"krate":0,"index":1764},{"krate":0,"index":1766},{"krate":0,"index":1768},{"krate":0,"index":1770},{"krate":0,"index":1772},{"krate":0,"index":1774},{"krate":0,"index":1776},{"krate":0,"index":1778},{"krate":0,"index":1780},{"krate":0,"index":1782},{"krate":0,"index":1784},{"krate":0,"index":1786},{"krate":0,"index":1788},{"krate":0,"index":1790},{"krate":0,"index":1792},{"krate":0,"index":1794},{"krate":0,"index":1796},{"krate":0,"index":1798},{"krate":0,"index":1800},{"krate":0,"index":1802},{"krate":0,"index":1804},{"krate":0,"index":1806},{"krate":0,"index":1808},{"krate":0,"index":1810},{"krate":0,"index":1812},{"krate":0,"index":1814},{"krate":0,"index":1816},{"krate":0,"index":1818},{"krate":0,"index":1820},{"krate":0,"index":1822},{"krate":0,"index":1824},{"krate":0,"index":1826},{"krate":0,"index":1828},{"krate":0,"index":1830},{"krate":0,"index":1832},{"krate":0,"index":1834},{"krate":0,"index":1836},{"krate":0,"index":1838},{"krate":0,"index":1840},{"krate":0,"index":1842},{"krate":0,"index":1844},{"krate":0,"index":1846},{"krate":0,"index":1848},{"krate":0,"index":1850},{"krate":0,"index":1852},{"krate":0,"index":1854},{"krate":0,"index":1856},{"krate":0,"index":1858},{"krate":0,"index":1860},{"krate":0,"index":1862},{"krate":0,"index":1864},{"krate":0,"index":1866},{"krate":0,"index":1868},{"krate":0,"index":1870},{"krate":0,"index":1872},{"krate":0,"index":1874},{"krate":0,"index":1876},{"krate":0,"index":1878},{"krate":0,"index":1880},{"krate":0,"index":1882},{"krate":0,"index":1884},{"krate":0,"index":1886},{"krate":0,"index":1888},{"krate":0,"index":1890},{"krate":0,"index":1892},{"krate":0,"index":1894},{"krate":0,"index":1896},{"krate":0,"index":1898},{"krate":0,"index":1900},{"krate":0,"index":1902}],"decl_id":null,"docs":" A key on a keyboard.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178267,"byte_end":178289,"line_start":8,"line_end":8,"column_start":1,"column_end":23}},{"value":"/ A key on a keyboard.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178290,"byte_end":178314,"line_start":9,"line_end":9,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178315,"byte_end":178318,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Serde","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178319,"byte_end":178330,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178331,"byte_end":178334,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Serialization and deserialization of this type (via [Serde](https://serde.rs/))","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178335,"byte_end":178418,"line_start":13,"line_end":13,"column_start":1,"column_end":84}},{"value":"/ can be enabled via the `serde_support` feature.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":178419,"byte_end":178470,"line_start":14,"line_end":14,"column_start":1,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1919},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":180413,"byte_end":180417,"line_start":169,"line_end":169,"column_start":5,"column_end":9},"name":"Ctrl","qualname":"::input::keyboard::KeyModifier::Ctrl","value":"KeyModifier::Ctrl","parent":{"krate":0,"index":1918},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1921},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":180423,"byte_end":180426,"line_start":170,"line_end":170,"column_start":5,"column_end":8},"name":"Alt","qualname":"::input::keyboard::KeyModifier::Alt","value":"KeyModifier::Alt","parent":{"krate":0,"index":1918},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1923},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":180432,"byte_end":180437,"line_start":171,"line_end":171,"column_start":5,"column_end":10},"name":"Shift","qualname":"::input::keyboard::KeyModifier::Shift","value":"KeyModifier::Shift","parent":{"krate":0,"index":1918},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1918},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":180395,"byte_end":180406,"line_start":168,"line_end":168,"column_start":10,"column_end":21},"name":"KeyModifier","qualname":"::input::keyboard::KeyModifier","value":"pub enum KeyModifier { Ctrl, Alt, Shift, }","parent":null,"children":[{"krate":0,"index":1919},{"krate":0,"index":1921},{"krate":0,"index":1923}],"decl_id":null,"docs":" A key modifier on the keyboard.","sig":null,"attributes":[{"value":"/ A key modifier on the keyboard.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179900,"byte_end":179935,"line_start":153,"line_end":153,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179936,"byte_end":179939,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ These mainly consist of keys that have duplicates in multiple places on the keyboard, such as","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":179940,"byte_end":180037,"line_start":155,"line_end":155,"column_start":1,"column_end":98}},{"value":"/ Control and Shift.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":180038,"byte_end":180060,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":180061,"byte_end":180064,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ # Serde","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":180065,"byte_end":180076,"line_start":158,"line_end":158,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":180077,"byte_end":180080,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ Serialization and deserialization of this type (via [Serde](https://serde.rs/))","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":180081,"byte_end":180164,"line_start":160,"line_end":160,"column_start":1,"column_end":84}},{"value":"/ can be enabled via the `serde_support` feature.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":180165,"byte_end":180216,"line_start":161,"line_end":161,"column_start":1,"column_end":52}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":180363,"byte_end":180385,"line_start":167,"line_end":167,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":786},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":180506,"byte_end":180517,"line_start":175,"line_end":175,"column_start":8,"column_end":19},"name":"is_key_down","qualname":"::input::keyboard::is_key_down","value":"pub fn is_key_down(&Context, Key) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the specified key is currently down.\n","sig":null,"attributes":[{"value":"/ Returns true if the specified key is currently down.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":180442,"byte_end":180498,"line_start":174,"line_end":174,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":787},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":180657,"byte_end":180666,"line_start":180,"line_end":180,"column_start":8,"column_end":17},"name":"is_key_up","qualname":"::input::keyboard::is_key_up","value":"pub fn is_key_up(&Context, Key) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the specified key is currently up.\n","sig":null,"attributes":[{"value":"/ Returns true if the specified key is currently up.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":180595,"byte_end":180649,"line_start":179,"line_end":179,"column_start":1,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":788},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":180825,"byte_end":180839,"line_start":185,"line_end":185,"column_start":8,"column_end":22},"name":"is_key_pressed","qualname":"::input::keyboard::is_key_pressed","value":"pub fn is_key_pressed(&Context, Key) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the specified key was pressed since the last update.\n","sig":null,"attributes":[{"value":"/ Returns true if the specified key was pressed since the last update.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":180745,"byte_end":180817,"line_start":184,"line_end":184,"column_start":1,"column_end":73}}]},{"kind":"Function","id":{"krate":0,"index":789},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":181001,"byte_end":181016,"line_start":190,"line_end":190,"column_start":8,"column_end":23},"name":"is_key_released","qualname":"::input::keyboard::is_key_released","value":"pub fn is_key_released(&Context, Key) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the specified key was released since the last update.\n","sig":null,"attributes":[{"value":"/ Returns true if the specified key was released since the last update.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":180920,"byte_end":180993,"line_start":189,"line_end":189,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":790},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":181171,"byte_end":181191,"line_start":195,"line_end":195,"column_start":8,"column_end":28},"name":"is_key_modifier_down","qualname":"::input::keyboard::is_key_modifier_down","value":"pub fn is_key_modifier_down(&Context, KeyModifier) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the specified key modifier is currently down.\n","sig":null,"attributes":[{"value":"/ Returns true if the specified key modifier is currently down.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":181098,"byte_end":181163,"line_start":194,"line_end":194,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":791},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":181416,"byte_end":181434,"line_start":202,"line_end":202,"column_start":8,"column_end":26},"name":"is_key_modifier_up","qualname":"::input::keyboard::is_key_modifier_up","value":"pub fn is_key_modifier_up(&Context, KeyModifier) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the specified key modifier is currently up.\n","sig":null,"attributes":[{"value":"/ Returns true if the specified key modifier is currently up.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":181345,"byte_end":181408,"line_start":201,"line_end":201,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":792},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":181652,"byte_end":181665,"line_start":209,"line_end":209,"column_start":8,"column_end":21},"name":"get_keys_down","qualname":"::input::keyboard::get_keys_down","value":"pub fn get_keys_down(&Context) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator of the keys that are currently down.\n","sig":null,"attributes":[{"value":"/ Returns an iterator of the keys that are currently down.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":181584,"byte_end":181644,"line_start":208,"line_end":208,"column_start":1,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":794},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":181831,"byte_end":181847,"line_start":214,"line_end":214,"column_start":8,"column_end":24},"name":"get_keys_pressed","qualname":"::input::keyboard::get_keys_pressed","value":"pub fn get_keys_pressed(&Context) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator of the keys that were pressed since the last update.\n","sig":null,"attributes":[{"value":"/ Returns an iterator of the keys that were pressed since the last update.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":181747,"byte_end":181823,"line_start":213,"line_end":213,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":796},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":182017,"byte_end":182034,"line_start":219,"line_end":219,"column_start":8,"column_end":25},"name":"get_keys_released","qualname":"::input::keyboard::get_keys_released","value":"pub fn get_keys_released(&Context) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator of the keys that were released since the last update.\n","sig":null,"attributes":[{"value":"/ Returns an iterator of the keys that were released since the last update.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/keyboard.rs","byte_start":181932,"byte_end":182009,"line_start":218,"line_end":218,"column_start":1,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1940},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/mouse.rs","byte_start":183487,"byte_end":183491,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Left","qualname":"::input::mouse::MouseButton::Left","value":"MouseButton::Left","parent":{"krate":0,"index":1939},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1942},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/mouse.rs","byte_start":183497,"byte_end":183503,"line_start":18,"line_end":18,"column_start":5,"column_end":11},"name":"Middle","qualname":"::input::mouse::MouseButton::Middle","value":"MouseButton::Middle","parent":{"krate":0,"index":1939},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1944},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/mouse.rs","byte_start":183509,"byte_end":183514,"line_start":19,"line_end":19,"column_start":5,"column_end":10},"name":"Right","qualname":"::input::mouse::MouseButton::Right","value":"MouseButton::Right","parent":{"krate":0,"index":1939},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1946},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/mouse.rs","byte_start":183520,"byte_end":183522,"line_start":20,"line_end":20,"column_start":5,"column_end":7},"name":"X1","qualname":"::input::mouse::MouseButton::X1","value":"MouseButton::X1","parent":{"krate":0,"index":1939},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1948},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/mouse.rs","byte_start":183528,"byte_end":183530,"line_start":21,"line_end":21,"column_start":5,"column_end":7},"name":"X2","qualname":"::input::mouse::MouseButton::X2","value":"MouseButton::X2","parent":{"krate":0,"index":1939},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1939},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/mouse.rs","byte_start":183469,"byte_end":183480,"line_start":16,"line_end":16,"column_start":10,"column_end":21},"name":"MouseButton","qualname":"::input::mouse::MouseButton","value":"pub enum MouseButton { Left, Middle, Right, X1, X2, }","parent":null,"children":[{"krate":0,"index":1940},{"krate":0,"index":1942},{"krate":0,"index":1944},{"krate":0,"index":1946},{"krate":0,"index":1948}],"decl_id":null,"docs":" A button on a mouse.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/mouse.rs","byte_start":183256,"byte_end":183278,"line_start":9,"line_end":9,"column_start":1,"column_end":23}},{"value":"/ A button on a mouse.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/mouse.rs","byte_start":183279,"byte_end":183303,"line_start":10,"line_end":10,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/mouse.rs","byte_start":183304,"byte_end":183307,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Serde","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/mouse.rs","byte_start":183308,"byte_end":183319,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/mouse.rs","byte_start":183320,"byte_end":183323,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Serialization and deserialization of this type (via [Serde](https://serde.rs/))","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/mouse.rs","byte_start":183324,"byte_end":183407,"line_start":14,"line_end":14,"column_start":1,"column_end":84}},{"value":"/ can be enabled via the `serde_support` feature.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/mouse.rs","byte_start":183408,"byte_end":183459,"line_start":15,"line_end":15,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":804},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/mouse.rs","byte_start":183608,"byte_end":183628,"line_start":25,"line_end":25,"column_start":8,"column_end":28},"name":"is_mouse_button_down","qualname":"::input::mouse::is_mouse_button_down","value":"pub fn is_mouse_button_down(&Context, MouseButton) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the specified mouse button is currently down.\n","sig":null,"attributes":[{"value":"/ Returns true if the specified mouse button is currently down.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/mouse.rs","byte_start":183535,"byte_end":183600,"line_start":24,"line_end":24,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":805},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/mouse.rs","byte_start":183800,"byte_end":183818,"line_start":30,"line_end":30,"column_start":8,"column_end":26},"name":"is_mouse_button_up","qualname":"::input::mouse::is_mouse_button_up","value":"pub fn is_mouse_button_up(&Context, MouseButton) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the specified mouse button is currently up.\n","sig":null,"attributes":[{"value":"/ Returns true if the specified mouse button is currently up.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/mouse.rs","byte_start":183729,"byte_end":183792,"line_start":29,"line_end":29,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":806},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/mouse.rs","byte_start":184009,"byte_end":184032,"line_start":35,"line_end":35,"column_start":8,"column_end":31},"name":"is_mouse_button_pressed","qualname":"::input::mouse::is_mouse_button_pressed","value":"pub fn is_mouse_button_pressed(&Context, MouseButton) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the specified mouse button was pressed since the last update.\n","sig":null,"attributes":[{"value":"/ Returns true if the specified mouse button was pressed since the last update.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/mouse.rs","byte_start":183920,"byte_end":184001,"line_start":34,"line_end":34,"column_start":1,"column_end":82}}]},{"kind":"Function","id":{"krate":0,"index":807},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/mouse.rs","byte_start":184226,"byte_end":184250,"line_start":40,"line_end":40,"column_start":8,"column_end":32},"name":"is_mouse_button_released","qualname":"::input::mouse::is_mouse_button_released","value":"pub fn is_mouse_button_released(&Context, MouseButton) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the specified mouse button was released since the last update.\n","sig":null,"attributes":[{"value":"/ Returns true if the specified mouse button was released since the last update.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/mouse.rs","byte_start":184136,"byte_end":184218,"line_start":39,"line_end":39,"column_start":1,"column_end":83}}]},{"kind":"Function","id":{"krate":0,"index":808},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/mouse.rs","byte_start":184426,"byte_end":184446,"line_start":45,"line_end":45,"column_start":8,"column_end":28},"name":"is_mouse_scrolled_up","qualname":"::input::mouse::is_mouse_scrolled_up","value":"pub fn is_mouse_scrolled_up(&Context) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the user scrolled up since the last update.\n","sig":null,"attributes":[{"value":"/ Returns true if the user scrolled up since the last update.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/mouse.rs","byte_start":184355,"byte_end":184418,"line_start":44,"line_end":44,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":809},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/mouse.rs","byte_start":184588,"byte_end":184610,"line_start":50,"line_end":50,"column_start":8,"column_end":30},"name":"is_mouse_scrolled_down","qualname":"::input::mouse::is_mouse_scrolled_down","value":"pub fn is_mouse_scrolled_down(&Context) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the user scrolled down since the last update.\n","sig":null,"attributes":[{"value":"/ Returns true if the user scrolled down since the last update.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/mouse.rs","byte_start":184515,"byte_end":184580,"line_start":49,"line_end":49,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":810},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/mouse.rs","byte_start":184726,"byte_end":184737,"line_start":55,"line_end":55,"column_start":8,"column_end":19},"name":"get_mouse_x","qualname":"::input::mouse::get_mouse_x","value":"pub fn get_mouse_x(&Context) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Get the X co-ordinate of the mouse.\n","sig":null,"attributes":[{"value":"/ Get the X co-ordinate of the mouse.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/mouse.rs","byte_start":184679,"byte_end":184718,"line_start":54,"line_end":54,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":811},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/mouse.rs","byte_start":184843,"byte_end":184854,"line_start":60,"line_end":60,"column_start":8,"column_end":19},"name":"get_mouse_y","qualname":"::input::mouse::get_mouse_y","value":"pub fn get_mouse_y(&Context) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Get the Y co-ordinate of the mouse.\n","sig":null,"attributes":[{"value":"/ Get the Y co-ordinate of the mouse.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/mouse.rs","byte_start":184796,"byte_end":184835,"line_start":59,"line_end":59,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":812},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/mouse.rs","byte_start":184955,"byte_end":184973,"line_start":65,"line_end":65,"column_start":8,"column_end":26},"name":"get_mouse_position","qualname":"::input::mouse::get_mouse_position","value":"pub fn get_mouse_position(&Context) -> Vec2<f32>","parent":null,"children":[],"decl_id":null,"docs":" Get the position of the mouse.\n","sig":null,"attributes":[{"value":"/ Get the position of the mouse.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/mouse.rs","byte_start":184913,"byte_end":184947,"line_start":64,"line_end":64,"column_start":1,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":813},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/mouse.rs","byte_start":185417,"byte_end":185441,"line_start":76,"line_end":76,"column_start":8,"column_end":32},"name":"get_mouse_wheel_movement","qualname":"::input::mouse::get_mouse_wheel_movement","value":"pub fn get_mouse_wheel_movement(&Context) -> Vec2<i32>","parent":null,"children":[],"decl_id":null,"docs":" Get the amount that the mouse wheel moved since the last update.","sig":null,"attributes":[{"value":"/ Get the amount that the mouse wheel moved since the last update.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/mouse.rs","byte_start":185036,"byte_end":185104,"line_start":69,"line_end":69,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/mouse.rs","byte_start":185105,"byte_end":185108,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Most 'normal' mice can only scroll vertically, but some devices can also scroll horizontally.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/mouse.rs","byte_start":185109,"byte_end":185206,"line_start":71,"line_end":71,"column_start":1,"column_end":98}},{"value":"/ Use the Y component of the returned vector if you don't care about horizontal scroll.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/mouse.rs","byte_start":185207,"byte_end":185296,"line_start":72,"line_end":72,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/mouse.rs","byte_start":185297,"byte_end":185300,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ Positive values correspond to scrolling up/right, negative values correspond to scrolling","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/mouse.rs","byte_start":185301,"byte_end":185394,"line_start":74,"line_end":74,"column_start":1,"column_end":94}},{"value":"/ down/left.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/mouse.rs","byte_start":185395,"byte_end":185409,"line_start":75,"line_end":75,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":840},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":166592,"byte_end":166606,"line_start":94,"line_end":94,"column_start":8,"column_end":22},"name":"get_text_input","qualname":"::input::get_text_input","value":"pub fn get_text_input(&Context) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the text that the user entered since the last update.\n This will match the user's keyboard and OS settings.\n","sig":null,"attributes":[{"value":"/ Returns the text that the user entered since the last update.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":166462,"byte_end":166527,"line_start":92,"line_end":92,"column_start":1,"column_end":66}},{"value":"/ This will match the user's keyboard and OS settings.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":166528,"byte_end":166584,"line_start":93,"line_end":93,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":841},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":166887,"byte_end":166905,"line_start":104,"line_end":104,"column_start":8,"column_end":26},"name":"get_clipboard_text","qualname":"::input::get_clipboard_text","value":"pub fn get_clipboard_text(&Context) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Gets the text currently stored in the system's clipboard.","sig":null,"attributes":[{"value":"/ Gets the text currently stored in the system's clipboard.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":166687,"byte_end":166748,"line_start":98,"line_end":98,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":166749,"byte_end":166752,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":166753,"byte_end":166765,"line_start":100,"line_end":100,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":166766,"byte_end":166769,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ * `TetraError::PlatformError` will be returned if the text could not be","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":166770,"byte_end":166845,"line_start":102,"line_end":102,"column_start":1,"column_end":76}},{"value":"/ retrieved from the clipboard.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":166846,"byte_end":166879,"line_start":103,"line_end":103,"column_start":1,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":842},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":167152,"byte_end":167170,"line_start":114,"line_end":114,"column_start":8,"column_end":26},"name":"set_clipboard_text","qualname":"::input::set_clipboard_text","value":"pub fn set_clipboard_text(&Context, &str) -> Result","parent":null,"children":[],"decl_id":null,"docs":" Sets the contents of the system's clipboard.","sig":null,"attributes":[{"value":"/ Sets the contents of the system's clipboard.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":166980,"byte_end":167028,"line_start":108,"line_end":108,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":167029,"byte_end":167032,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":167033,"byte_end":167045,"line_start":110,"line_end":110,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":167046,"byte_end":167049,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ * `TetraError::PlatformError` will be returned if the clipboard could not","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":167050,"byte_end":167127,"line_start":112,"line_end":112,"column_start":1,"column_end":78}},{"value":"/ be modified.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":167128,"byte_end":167144,"line_start":113,"line_end":113,"column_start":1,"column_end":17}}]},{"kind":"Trait","id":{"krate":0,"index":856},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":187074,"byte_end":187079,"line_start":17,"line_end":17,"column_start":11,"column_end":16},"name":"State","qualname":"::lifecycle::State","value":"State<E = TetraError>","parent":null,"children":[{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860}],"decl_id":null,"docs":" Implemented by types that contain game state and provide logic for updating it\n and drawing it to the screen.","sig":null,"attributes":[{"value":"/ Implemented by types that contain game state and provide logic for updating it","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":186516,"byte_end":186598,"line_start":7,"line_end":7,"column_start":1,"column_end":83}},{"value":"/ and drawing it to the screen.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":186599,"byte_end":186632,"line_start":8,"line_end":8,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":186633,"byte_end":186636,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The methods on `State` allow you to return a `Result`, either explicitly or via the `?`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":186637,"byte_end":186728,"line_start":10,"line_end":10,"column_start":1,"column_end":92}},{"value":"/ operator. If an error is returned, the game will close and the error will be returned from","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":186729,"byte_end":186823,"line_start":11,"line_end":11,"column_start":1,"column_end":95}},{"value":"/ the `run` function that was used to start it.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":186824,"byte_end":186873,"line_start":12,"line_end":12,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":186874,"byte_end":186877,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The error type defaults to `TetraError`, but this can be overridden by adding a type parameter","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":186878,"byte_end":186976,"line_start":14,"line_end":14,"column_start":1,"column_end":99}},{"value":"/ to your `State` implementation (e.g. `State<MyError>`).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":186977,"byte_end":187036,"line_start":15,"line_end":15,"column_start":1,"column_end":60}},{"value":"allow(unused_variables)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":187037,"byte_end":187063,"line_start":16,"line_end":16,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":187160,"byte_end":187166,"line_start":19,"line_end":19,"column_start":8,"column_end":14},"name":"update","qualname":"::lifecycle::State::update","value":"pub fn update(&mut Self, &mut Context) -> Result<(), E>","parent":{"krate":0,"index":856},"children":[],"decl_id":null,"docs":" Called when it is time for the game to update.\n","sig":null,"attributes":[{"value":"/ Called when it is time for the game to update.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":187102,"byte_end":187152,"line_start":18,"line_end":18,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":859},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":187302,"byte_end":187306,"line_start":24,"line_end":24,"column_start":8,"column_end":12},"name":"draw","qualname":"::lifecycle::State::draw","value":"pub fn draw(&mut Self, &mut Context) -> Result<(), E>","parent":{"krate":0,"index":856},"children":[],"decl_id":null,"docs":" Called when it is time for the game to be drawn.\n","sig":null,"attributes":[{"value":"/ Called when it is time for the game to be drawn.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":187242,"byte_end":187294,"line_start":23,"line_end":23,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":187437,"byte_end":187442,"line_start":29,"line_end":29,"column_start":8,"column_end":13},"name":"event","qualname":"::lifecycle::State::event","value":"pub fn event(&mut Self, &mut Context, Event) -> Result<(), E>","parent":{"krate":0,"index":856},"children":[],"decl_id":null,"docs":" Called when a window or input event occurs.\n","sig":null,"attributes":[{"value":"/ Called when a window or input event occurs.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":187382,"byte_end":187429,"line_start":28,"line_end":28,"column_start":5,"column_end":52}}]},{"kind":"StructVariant","id":{"krate":0,"index":1965},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":187962,"byte_end":187969,"line_start":47,"line_end":47,"column_start":5,"column_end":12},"name":"Resized","qualname":"::lifecycle::Event::Resized","value":"Event::Resized { width, height }","parent":{"krate":0,"index":1964},"children":[],"decl_id":null,"docs":" The game window was resized.\n","sig":null,"attributes":[{"value":"/ The game window was resized.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":187925,"byte_end":187957,"line_start":46,"line_end":46,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1968},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":188168,"byte_end":188179,"line_start":56,"line_end":56,"column_start":5,"column_end":16},"name":"FocusGained","qualname":"::lifecycle::Event::FocusGained","value":"Event::FocusGained","parent":{"krate":0,"index":1964},"children":[],"decl_id":null,"docs":" The game window was focused by the user.\n","sig":null,"attributes":[{"value":"/ The game window was focused by the user.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":188119,"byte_end":188163,"line_start":55,"line_end":55,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1970},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":188238,"byte_end":188247,"line_start":59,"line_end":59,"column_start":5,"column_end":14},"name":"FocusLost","qualname":"::lifecycle::Event::FocusLost","value":"Event::FocusLost","parent":{"krate":0,"index":1964},"children":[],"decl_id":null,"docs":" The game window was un-focused by the user.\n","sig":null,"attributes":[{"value":"/ The game window was un-focused by the user.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":188186,"byte_end":188233,"line_start":58,"line_end":58,"column_start":5,"column_end":52}}]},{"kind":"StructVariant","id":{"krate":0,"index":1972},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":188297,"byte_end":188307,"line_start":62,"line_end":62,"column_start":5,"column_end":15},"name":"KeyPressed","qualname":"::lifecycle::Event::KeyPressed","value":"Event::KeyPressed { key }","parent":{"krate":0,"index":1964},"children":[],"decl_id":null,"docs":" A key on the keyboard was pressed.\n","sig":null,"attributes":[{"value":"/ A key on the keyboard was pressed.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":188254,"byte_end":188292,"line_start":61,"line_end":61,"column_start":5,"column_end":43}}]},{"kind":"StructVariant","id":{"krate":0,"index":1974},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":188422,"byte_end":188433,"line_start":68,"line_end":68,"column_start":5,"column_end":16},"name":"KeyReleased","qualname":"::lifecycle::Event::KeyReleased","value":"Event::KeyReleased { key }","parent":{"krate":0,"index":1964},"children":[],"decl_id":null,"docs":" A key on the keyboard was released.\n","sig":null,"attributes":[{"value":"/ A key on the keyboard was released.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":188378,"byte_end":188417,"line_start":67,"line_end":67,"column_start":5,"column_end":44}}]},{"kind":"StructVariant","id":{"krate":0,"index":1976},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":188548,"byte_end":188566,"line_start":74,"line_end":74,"column_start":5,"column_end":23},"name":"MouseButtonPressed","qualname":"::lifecycle::Event::MouseButtonPressed","value":"Event::MouseButtonPressed { button }","parent":{"krate":0,"index":1964},"children":[],"decl_id":null,"docs":" A button on the mouse was pressed.\n","sig":null,"attributes":[{"value":"/ A button on the mouse was pressed.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":188505,"byte_end":188543,"line_start":73,"line_end":73,"column_start":5,"column_end":43}}]},{"kind":"StructVariant","id":{"krate":0,"index":1978},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":188695,"byte_end":188714,"line_start":80,"line_end":80,"column_start":5,"column_end":24},"name":"MouseButtonReleased","qualname":"::lifecycle::Event::MouseButtonReleased","value":"Event::MouseButtonReleased { button }","parent":{"krate":0,"index":1964},"children":[],"decl_id":null,"docs":" A button on the mouse was released.\n","sig":null,"attributes":[{"value":"/ A button on the mouse was released.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":188651,"byte_end":188690,"line_start":79,"line_end":79,"column_start":5,"column_end":44}}]},{"kind":"StructVariant","id":{"krate":0,"index":1980},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":188829,"byte_end":188839,"line_start":86,"line_end":86,"column_start":5,"column_end":15},"name":"MouseMoved","qualname":"::lifecycle::Event::MouseMoved","value":"Event::MouseMoved { position, delta }","parent":{"krate":0,"index":1964},"children":[],"decl_id":null,"docs":" The mouse was moved.\n","sig":null,"attributes":[{"value":"/ The mouse was moved.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":188800,"byte_end":188824,"line_start":85,"line_end":85,"column_start":5,"column_end":29}}]},{"kind":"StructVariant","id":{"krate":0,"index":1983},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":189281,"byte_end":189296,"line_start":99,"line_end":99,"column_start":5,"column_end":20},"name":"MouseWheelMoved","qualname":"::lifecycle::Event::MouseWheelMoved","value":"Event::MouseWheelMoved { amount }","parent":{"krate":0,"index":1964},"children":[],"decl_id":null,"docs":" The mouse wheel was moved.\n","sig":null,"attributes":[{"value":"/ The mouse wheel was moved.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":189246,"byte_end":189276,"line_start":98,"line_end":98,"column_start":5,"column_end":35}}]},{"kind":"StructVariant","id":{"krate":0,"index":1985},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":189787,"byte_end":189799,"line_start":111,"line_end":111,"column_start":5,"column_end":17},"name":"GamepadAdded","qualname":"::lifecycle::Event::GamepadAdded","value":"Event::GamepadAdded { id }","parent":{"krate":0,"index":1964},"children":[],"decl_id":null,"docs":" A gamepad was connected to the system.\n","sig":null,"attributes":[{"value":"/ A gamepad was connected to the system.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":189740,"byte_end":189782,"line_start":110,"line_end":110,"column_start":5,"column_end":47}}]},{"kind":"StructVariant","id":{"krate":0,"index":1987},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":189933,"byte_end":189947,"line_start":117,"line_end":117,"column_start":5,"column_end":19},"name":"GamepadRemoved","qualname":"::lifecycle::Event::GamepadRemoved","value":"Event::GamepadRemoved { id }","parent":{"krate":0,"index":1964},"children":[],"decl_id":null,"docs":" A gamepad was removed from the system.\n","sig":null,"attributes":[{"value":"/ A gamepad was removed from the system.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":189886,"byte_end":189928,"line_start":116,"line_end":116,"column_start":5,"column_end":47}}]},{"kind":"StructVariant","id":{"krate":0,"index":1989},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":190076,"byte_end":190096,"line_start":123,"line_end":123,"column_start":5,"column_end":25},"name":"GamepadButtonPressed","qualname":"::lifecycle::Event::GamepadButtonPressed","value":"Event::GamepadButtonPressed { id, button }","parent":{"krate":0,"index":1964},"children":[],"decl_id":null,"docs":" A button on a gamepad was pressed.\n","sig":null,"attributes":[{"value":"/ A button on a gamepad was pressed.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":190033,"byte_end":190071,"line_start":122,"line_end":122,"column_start":5,"column_end":43}}]},{"kind":"StructVariant","id":{"krate":0,"index":1992},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":190282,"byte_end":190303,"line_start":132,"line_end":132,"column_start":5,"column_end":26},"name":"GamepadButtonReleased","qualname":"::lifecycle::Event::GamepadButtonReleased","value":"Event::GamepadButtonReleased { id, button }","parent":{"krate":0,"index":1964},"children":[],"decl_id":null,"docs":" A button on a gamepad was released.\n","sig":null,"attributes":[{"value":"/ A button on a gamepad was released.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":190238,"byte_end":190277,"line_start":131,"line_end":131,"column_start":5,"column_end":44}}]},{"kind":"StructVariant","id":{"krate":0,"index":1995},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":190486,"byte_end":190502,"line_start":141,"line_end":141,"column_start":5,"column_end":21},"name":"GamepadAxisMoved","qualname":"::lifecycle::Event::GamepadAxisMoved","value":"Event::GamepadAxisMoved { id, axis, position }","parent":{"krate":0,"index":1964},"children":[],"decl_id":null,"docs":" An axis on a gamepad was moved.\n","sig":null,"attributes":[{"value":"/ An axis on a gamepad was moved.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":190446,"byte_end":190481,"line_start":140,"line_end":140,"column_start":5,"column_end":40}}]},{"kind":"StructVariant","id":{"krate":0,"index":1999},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":190750,"byte_end":190767,"line_start":153,"line_end":153,"column_start":5,"column_end":22},"name":"GamepadStickMoved","qualname":"::lifecycle::Event::GamepadStickMoved","value":"Event::GamepadStickMoved { id, stick, position }","parent":{"krate":0,"index":1964},"children":[],"decl_id":null,"docs":" A control stick on a gamepad was moved.\n","sig":null,"attributes":[{"value":"/ A control stick on a gamepad was moved.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":190702,"byte_end":190745,"line_start":152,"line_end":152,"column_start":5,"column_end":48}}]},{"kind":"StructVariant","id":{"krate":0,"index":2003},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":191011,"byte_end":191020,"line_start":165,"line_end":165,"column_start":5,"column_end":14},"name":"TextInput","qualname":"::lifecycle::Event::TextInput","value":"Event::TextInput { text }","parent":{"krate":0,"index":1964},"children":[],"decl_id":null,"docs":" The user typed some text.\n","sig":null,"attributes":[{"value":"/ The user typed some text.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":190977,"byte_end":191006,"line_start":164,"line_end":164,"column_start":5,"column_end":34}}]},{"kind":"StructVariant","id":{"krate":0,"index":2005},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":191535,"byte_end":191546,"line_start":178,"line_end":178,"column_start":5,"column_end":16},"name":"FileDropped","qualname":"::lifecycle::Event::FileDropped","value":"Event::FileDropped { path }","parent":{"krate":0,"index":1964},"children":[],"decl_id":null,"docs":" The user dropped a file into the window.","sig":null,"attributes":[{"value":"/ The user dropped a file into the window.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":191106,"byte_end":191150,"line_start":170,"line_end":170,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":191155,"byte_end":191158,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ This event will be fired multiple times if the user dropped multiple files at the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":191163,"byte_end":191248,"line_start":172,"line_end":172,"column_start":5,"column_end":90}},{"value":"/ same time.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":191253,"byte_end":191267,"line_start":173,"line_end":173,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":191272,"byte_end":191275,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ Note that on MacOS, you must [edit your `info.plist` file to set which document types","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":191280,"byte_end":191369,"line_start":175,"line_end":175,"column_start":5,"column_end":94}},{"value":"/ you want your application to support](https://help.apple.com/xcode/mac/current/#/devddd273fdd),","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":191374,"byte_end":191473,"line_start":176,"line_end":176,"column_start":5,"column_end":104}},{"value":"/ otherwise no `FileDropped` events will be fired.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":191478,"byte_end":191530,"line_start":177,"line_end":177,"column_start":5,"column_end":57}}]},{"kind":"Enum","id":{"krate":0,"index":1964},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":187913,"byte_end":187918,"line_start":45,"line_end":45,"column_start":10,"column_end":15},"name":"Event","qualname":"::lifecycle::Event","value":"pub enum Event {\n\n    /// The game window was resized.\n    Resized {\n        /// The new width of the game window.\n        width: i32,\n        /// The new height of the game window.\n        height: i32,\n    },\n\n    /// The game window was focused by the user.\n    FocusGained,\n\n    /// The game window was un-focused by the user.\n    FocusLost,\n\n    /// A key on the keyboard was pressed.\n    KeyPressed {\n        /// The key that was pressed.\n        key: Key,\n    },\n\n    /// A key on the keyboard was released.\n    KeyReleased {\n        /// The key that was released.\n        key: Key,\n    },\n\n    /// A button on the mouse was pressed.\n    MouseButtonPressed {\n        /// The button that was pressed.\n        button: MouseButton,\n    },\n\n    /// A button on the mouse was released.\n    MouseButtonReleased {\n        /// The button that was released.\n        button: MouseButton,\n    },\n\n    /// The mouse was moved.\n    MouseMoved {\n        /// The new position of the mouse, in window co-ordinates.\n        ///\n        /// If [relative mouse mode](./window/fn.set_relative_mouse_mode.html) is\n        /// enabled, this field is not guarenteed to update.\n        position: Vec2<f32>,\n        /// The movement of the mouse, relative to the `position` of the previous\n        /// `MouseMoved` event.\n        delta: Vec2<f32>,\n    },\n\n    /// The mouse wheel was moved.\n    MouseWheelMoved {\n        /// The amount that the wheel was moved.\n        ///\n        /// Most 'normal' mice can only scroll vertically, but some devices can also scroll horizontally.\n        /// Use the Y component of the returned vector if you don't care about horizontal scroll.\n        ///\n        /// Positive values correspond to scrolling up/right, negative values correspond to scrolling\n        /// down/left.\n        amount: Vec2<i32>,\n    },\n\n    /// A gamepad was connected to the system.\n    GamepadAdded {\n        /// The ID that was assigned to the gamepad.\n        id: usize,\n    },\n\n    /// A gamepad was removed from the system.\n    GamepadRemoved {\n        /// The ID of the gamepad that was removed.\n        id: usize,\n    },\n\n    /// A button on a gamepad was pressed.\n    GamepadButtonPressed {\n        /// The ID of the gamepad.\n        id: usize,\n        /// The button that was pressed.\n        button: GamepadButton,\n    },\n\n    /// A button on a gamepad was released.\n    GamepadButtonReleased {\n        /// The ID of the gamepad.\n        id: usize,\n        /// The button that was released.\n        button: GamepadButton,\n    },\n\n    /// An axis on a gamepad was moved.\n    GamepadAxisMoved {\n        /// The ID of the gamepad.\n        id: usize,\n        /// The axis that was moved.\n        axis: GamepadAxis,\n        /// The new position of the axis.\n        position: f32,\n    },\n\n    /// A control stick on a gamepad was moved.\n    GamepadStickMoved {\n        /// The ID of the gamepad.\n        id: usize,\n        /// The stick that was moved.\n        stick: GamepadStick,\n        /// The new position of the stick.\n        position: Vec2<f32>,\n    },\n\n    /// The user typed some text.\n    TextInput {\n        /// The text that was typed by the user.\n        text: String,\n    },\n\n    /// The user dropped a file into the window.\n    ///\n    /// This event will be fired multiple times if the user dropped multiple files at the\n    /// same time.\n    ///\n    /// Note that on MacOS, you must [edit your `info.plist` file to set which document types\n    /// you want your application to support](https://help.apple.com/xcode/mac/current/#/devddd273fdd),\n    /// otherwise no `FileDropped` events will be fired.\n    FileDropped {\n        /// The path of the file that was dropped.\n        path: PathBuf,\n    },\n}","parent":null,"children":[{"krate":0,"index":1965},{"krate":0,"index":1968},{"krate":0,"index":1970},{"krate":0,"index":1972},{"krate":0,"index":1974},{"krate":0,"index":1976},{"krate":0,"index":1978},{"krate":0,"index":1980},{"krate":0,"index":1983},{"krate":0,"index":1985},{"krate":0,"index":1987},{"krate":0,"index":1989},{"krate":0,"index":1992},{"krate":0,"index":1995},{"krate":0,"index":1999},{"krate":0,"index":2003},{"krate":0,"index":2005}],"decl_id":null,"docs":" Events that can occur while the game is running.","sig":null,"attributes":[{"value":"/ Events that can occur while the game is running.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":187530,"byte_end":187582,"line_start":34,"line_end":34,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":187583,"byte_end":187586,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ The [`event` method on the `State` trait](trait.State.html#method.event) will recieve","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":187587,"byte_end":187676,"line_start":36,"line_end":36,"column_start":1,"column_end":90}},{"value":"/ events as they occur.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":187677,"byte_end":187702,"line_start":37,"line_end":37,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":187703,"byte_end":187706,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":187707,"byte_end":187721,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":187722,"byte_end":187725,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ The [`events`](https://github.com/17cupsofcoffee/tetra/blob/main/examples/events.rs)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":187726,"byte_end":187814,"line_start":41,"line_end":41,"column_start":1,"column_end":89}},{"value":"/ example demonstrates how to handle events.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":187815,"byte_end":187861,"line_start":42,"line_end":42,"column_start":1,"column_end":47}},{"value":"non_exhaustive","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lifecycle.rs","byte_start":187862,"byte_end":187879,"line_start":43,"line_end":43,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":861},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/math.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"math","qualname":"::math","value":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/math.rs","parent":null,"children":[{"krate":0,"index":862}],"decl_id":null,"docs":" Functions and types relating to vector math (provided by the `vek` crate).","sig":null,"attributes":[{"value":"/ Functions and types relating to vector math (provided by the `vek` crate).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/math.rs","byte_start":191815,"byte_end":191893,"line_start":1,"line_end":1,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/math.rs","byte_start":191894,"byte_end":191897,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ `vek` is a Rust crate that provides vector math types that are well-documented and","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/math.rs","byte_start":191898,"byte_end":191984,"line_start":3,"line_end":3,"column_start":1,"column_end":87}},{"value":"/ convenient to use. Rather than reinventing the wheel, Tetra re-exports the contents","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/math.rs","byte_start":191985,"byte_end":192072,"line_start":4,"line_end":4,"column_start":1,"column_end":88}},{"value":"/ of that crate - both for its own internal use, and for you to use in your games.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/math.rs","byte_start":192073,"byte_end":192157,"line_start":5,"line_end":5,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/math.rs","byte_start":192158,"byte_end":192161,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Ideally, the documentation for `vek` would be reproduced here for your convienence.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/math.rs","byte_start":192162,"byte_end":192249,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/ Unfortunately, [rustdoc currently doesn't handle re-exports very well](https://github.com/rust-lang/rust/issues/58693),","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/math.rs","byte_start":192250,"byte_end":192373,"line_start":8,"line_end":8,"column_start":1,"column_end":124}},{"value":"/ so this would probably be more confusing than helpful. Until those issues are fixed,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/math.rs","byte_start":192374,"byte_end":192462,"line_start":9,"line_end":9,"column_start":1,"column_end":89}},{"value":"/ you can find the documentation for `vek` by clicking the re-export link below.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/math.rs","byte_start":192463,"byte_end":192545,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/math.rs","byte_start":192546,"byte_end":192549,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Note that all of the important types in `vek` (such as `Vec2` and `Mat4`) are","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/math.rs","byte_start":192550,"byte_end":192631,"line_start":12,"line_end":12,"column_start":1,"column_end":82}},{"value":"/ re-exported at the top level - you don't need to dig down into the submodules","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/math.rs","byte_start":192632,"byte_end":192713,"line_start":13,"line_end":13,"column_start":1,"column_end":82}},{"value":"/ when importing things.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/math.rs","byte_start":192714,"byte_end":192740,"line_start":14,"line_end":14,"column_start":1,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2022},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/platform/device_gl.rs","byte_start":213682,"byte_end":213692,"line_start":717,"line_end":717,"column_start":5,"column_end":15},"name":"StaticDraw","qualname":"::platform::device_gl::BufferUsage::StaticDraw","value":"BufferUsage::StaticDraw","parent":{"krate":0,"index":2021},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2024},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/platform/device_gl.rs","byte_start":213698,"byte_end":213709,"line_start":718,"line_end":718,"column_start":5,"column_end":16},"name":"DynamicDraw","qualname":"::platform::device_gl::BufferUsage::DynamicDraw","value":"BufferUsage::DynamicDraw","parent":{"krate":0,"index":2021},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2021},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/platform/device_gl.rs","byte_start":213664,"byte_end":213675,"line_start":716,"line_end":716,"column_start":10,"column_end":21},"name":"BufferUsage","qualname":"::platform::device_gl::BufferUsage","value":"pub enum BufferUsage { StaticDraw, DynamicDraw, }","parent":null,"children":[{"krate":0,"index":2022},{"krate":0,"index":2024}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2030},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/platform/device_gl.rs","byte_start":214008,"byte_end":214017,"line_start":731,"line_end":731,"column_start":5,"column_end":14},"name":"Clockwise","qualname":"::platform::device_gl::FrontFace::Clockwise","value":"FrontFace::Clockwise","parent":{"krate":0,"index":2029},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2032},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/platform/device_gl.rs","byte_start":214023,"byte_end":214039,"line_start":732,"line_end":732,"column_start":5,"column_end":21},"name":"CounterClockwise","qualname":"::platform::device_gl::FrontFace::CounterClockwise","value":"FrontFace::CounterClockwise","parent":{"krate":0,"index":2029},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2029},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/platform/device_gl.rs","byte_start":213992,"byte_end":214001,"line_start":730,"line_end":730,"column_start":10,"column_end":19},"name":"FrontFace","qualname":"::platform::device_gl::FrontFace","value":"pub enum FrontFace { Clockwise, CounterClockwise, }","parent":null,"children":[{"krate":0,"index":2030},{"krate":0,"index":2032}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1090},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::time","value":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","parent":null,"children":[{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":2077},{"krate":0,"index":2086},{"krate":0,"index":2085},{"krate":0,"index":2083},{"krate":0,"index":1096},{"krate":0,"index":1100},{"krate":0,"index":1105},{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1113},{"krate":0,"index":1114},{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1117}],"decl_id":null,"docs":" Functions and types relating to measuring and manipulating time.\n","sig":null,"attributes":[{"value":"/ Functions and types relating to measuring and manipulating time.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":247196,"byte_end":247264,"line_start":1,"line_end":1,"column_start":1,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2078},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":248807,"byte_end":248812,"line_start":36,"line_end":36,"column_start":5,"column_end":10},"name":"Fixed","qualname":"::time::Timestep::Fixed","value":"Timestep::Fixed(f64)","parent":{"krate":0,"index":2077},"children":[],"decl_id":null,"docs":" In fixed timestep mode, updates will happen at a consistent rate (the `f64` value in the enum\n variant representing the number of times per second), while rendering will happen as fast as\n the hardware (and vsync settings) will allow.","sig":null,"attributes":[{"value":"/ In fixed timestep mode, updates will happen at a consistent rate (the `f64` value in the enum","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":247717,"byte_end":247814,"line_start":21,"line_end":21,"column_start":5,"column_end":102}},{"value":"/ variant representing the number of times per second), while rendering will happen as fast as","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":247819,"byte_end":247915,"line_start":22,"line_end":22,"column_start":5,"column_end":101}},{"value":"/ the hardware (and vsync settings) will allow.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":247920,"byte_end":247969,"line_start":23,"line_end":23,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":247974,"byte_end":247977,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ This has the advantage of making your game's updates deterministic, so they will act the same","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":247982,"byte_end":248079,"line_start":25,"line_end":25,"column_start":5,"column_end":102}},{"value":"/ on hardware of different speeds. It also means that your update code does not need to use","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":248084,"byte_end":248177,"line_start":26,"line_end":26,"column_start":5,"column_end":98}},{"value":"/ `time::get_delta_time` to integrate the amount of time passed into your calculations. However,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":248182,"byte_end":248280,"line_start":27,"line_end":27,"column_start":5,"column_end":103}},{"value":"/ it can lead to some slight stutter if your rendering code does not account for the possibility","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":248285,"byte_end":248383,"line_start":28,"line_end":28,"column_start":5,"column_end":103}},{"value":"/ of updating and rendering to be out of sync with each other.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":248388,"byte_end":248452,"line_start":29,"line_end":29,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":248457,"byte_end":248460,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ To avoid stutter, you should interpolate your rendering using `time::get_blend_factor`. The","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":248465,"byte_end":248560,"line_start":31,"line_end":31,"column_start":5,"column_end":100}},{"value":"/ [`interpolation`](https://github.com/17cupsofcoffee/tetra/blob/main/examples/interpolation.rs)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":248565,"byte_end":248663,"line_start":32,"line_end":32,"column_start":5,"column_end":103}},{"value":"/ example in the Tetra repository shows some different approaches to doing this.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":248668,"byte_end":248750,"line_start":33,"line_end":33,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":248755,"byte_end":248758,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This mode is currently the default.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":248763,"byte_end":248802,"line_start":35,"line_end":35,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2081},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":249362,"byte_end":249370,"line_start":47,"line_end":47,"column_start":5,"column_end":13},"name":"Variable","qualname":"::time::Timestep::Variable","value":"Timestep::Variable","parent":{"krate":0,"index":2077},"children":[],"decl_id":null,"docs":" In variable timestep mode, updates and rendering will happen in lockstep, one after the other,\n as fast as the hardware (and vsync settings) will allow.","sig":null,"attributes":[{"value":"/ In variable timestep mode, updates and rendering will happen in lockstep, one after the other,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":248824,"byte_end":248922,"line_start":38,"line_end":38,"column_start":5,"column_end":103}},{"value":"/ as fast as the hardware (and vsync settings) will allow.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":248927,"byte_end":248987,"line_start":39,"line_end":39,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":248992,"byte_end":248995,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ This has the advantage of being simple to reason about (updates can never happen multiple times","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":249000,"byte_end":249099,"line_start":41,"line_end":41,"column_start":5,"column_end":104}},{"value":"/ or get skipped), but is not deterministic, so your updates may not act the same on every","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":249104,"byte_end":249196,"line_start":42,"line_end":42,"column_start":5,"column_end":97}},{"value":"/ run of the game loop.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":249201,"byte_end":249226,"line_start":43,"line_end":43,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":249231,"byte_end":249234,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ To integrate the amount of time that has passed into your game's calculations, use","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":249239,"byte_end":249325,"line_start":45,"line_end":45,"column_start":5,"column_end":91}},{"value":"/ `time::get_delta_time`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":249330,"byte_end":249357,"line_start":46,"line_end":46,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":2077},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":247702,"byte_end":247710,"line_start":20,"line_end":20,"column_start":10,"column_end":18},"name":"Timestep","qualname":"::time::Timestep","value":"pub enum Timestep {\n\n    /// In fixed timestep mode, updates will happen at a consistent rate (the `f64` value in the enum\n    /// variant representing the number of times per second), while rendering will happen as fast as\n    /// the hardware (and vsync settings) will allow.\n    ///\n    /// This has the advantage of making your game's updates deterministic, so they will act the same\n    /// on hardware of different speeds. It also means that your update code does not need to use\n    /// `time::get_delta_time` to integrate the amount of time passed into your calculations. However,\n    /// it can lead to some slight stutter if your rendering code does not account for the possibility\n    /// of updating and rendering to be out of sync with each other.\n    ///\n    /// To avoid stutter, you should interpolate your rendering using `time::get_blend_factor`. The\n    /// [`interpolation`](https://github.com/17cupsofcoffee/tetra/blob/main/examples/interpolation.rs)\n    /// example in the Tetra repository shows some different approaches to doing this.\n    ///\n    /// This mode is currently the default.\n    Fixed(f64),\n\n    /// In variable timestep mode, updates and rendering will happen in lockstep, one after the other,\n    /// as fast as the hardware (and vsync settings) will allow.\n    ///\n    /// This has the advantage of being simple to reason about (updates can never happen multiple times\n    /// or get skipped), but is not deterministic, so your updates may not act the same on every\n    /// run of the game loop.\n    ///\n    /// To integrate the amount of time that has passed into your game's calculations, use\n    /// `time::get_delta_time`.\n    Variable,\n}","parent":null,"children":[{"krate":0,"index":2078},{"krate":0,"index":2081}],"decl_id":null,"docs":" The different timestep modes that a game can have.","sig":null,"attributes":[{"value":"/ The different timestep modes that a game can have.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":247357,"byte_end":247411,"line_start":9,"line_end":9,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":247412,"byte_end":247415,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Serde","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":247416,"byte_end":247427,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":247428,"byte_end":247431,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Serialization and deserialization of this type (via [Serde](https://serde.rs/))","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":247432,"byte_end":247515,"line_start":13,"line_end":13,"column_start":1,"column_end":84}},{"value":"/ can be enabled via the `serde_support` feature.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":247516,"byte_end":247567,"line_start":14,"line_end":14,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":1110},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":251676,"byte_end":251690,"line_start":123,"line_end":123,"column_start":8,"column_end":22},"name":"get_delta_time","qualname":"::time::get_delta_time","value":"pub fn get_delta_time(&Context) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time that has passed since the last frame was rendered.","sig":null,"attributes":[{"value":"/ Returns the amount of time that has passed since the last frame was rendered.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":251124,"byte_end":251205,"line_start":114,"line_end":114,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":251206,"byte_end":251209,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ When using a variable time step, you should use this to integrate the amount of time that","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":251210,"byte_end":251303,"line_start":116,"line_end":116,"column_start":1,"column_end":94}},{"value":"/ has passed into your game's calculations. For example, if you wanted to move a `Vec2` 32","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":251304,"byte_end":251396,"line_start":117,"line_end":117,"column_start":1,"column_end":93}},{"value":"/ units to the right per second, you would do","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":251397,"byte_end":251444,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/ `foo.y += 32.0 * time::get_delta_time(ctx).as_secs_f32()`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":251445,"byte_end":251506,"line_start":119,"line_end":119,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":251507,"byte_end":251510,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ When using a fixed time step, the above still applies, but only to rendering - you should","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":251511,"byte_end":251604,"line_start":121,"line_end":121,"column_start":1,"column_end":94}},{"value":"/ not integrate the delta time into your update calculations.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":251605,"byte_end":251668,"line_start":122,"line_end":122,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":1111},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":252036,"byte_end":252051,"line_start":133,"line_end":133,"column_start":8,"column_end":23},"name":"get_accumulator","qualname":"::time::get_accumulator","value":"pub fn get_accumulator(&Context) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time that has accumulated between updates.","sig":null,"attributes":[{"value":"/ Returns the amount of time that has accumulated between updates.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":251744,"byte_end":251812,"line_start":127,"line_end":127,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":251813,"byte_end":251816,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ When using a fixed time step, as time passes, this value will increase;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":251817,"byte_end":251892,"line_start":129,"line_end":129,"column_start":1,"column_end":76}},{"value":"/ as updates occur, it will decrease.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":251893,"byte_end":251932,"line_start":130,"line_end":130,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":251933,"byte_end":251936,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ When using a variable time step, this function always returns `Duration::from_secs(0)`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":251937,"byte_end":252028,"line_start":132,"line_end":132,"column_start":1,"column_end":92}}]},{"kind":"Function","id":{"krate":0,"index":1112},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":252712,"byte_end":252728,"line_start":151,"line_end":151,"column_start":8,"column_end":24},"name":"get_blend_factor","qualname":"::time::get_blend_factor","value":"pub fn get_blend_factor(&Context) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns a value between 0.0 and 1.0, representing how far between updates the game loop\n currently is.","sig":null,"attributes":[{"value":"/ Returns a value between 0.0 and 1.0, representing how far between updates the game loop","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":252203,"byte_end":252294,"line_start":140,"line_end":140,"column_start":1,"column_end":92}},{"value":"/ currently is.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":252295,"byte_end":252312,"line_start":141,"line_end":141,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":252313,"byte_end":252316,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ For example, if the value is 0.01, an update just happened; if the value is 0.99,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":252317,"byte_end":252402,"line_start":143,"line_end":143,"column_start":1,"column_end":86}},{"value":"/ an update is about to happen.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":252403,"byte_end":252436,"line_start":144,"line_end":144,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":252437,"byte_end":252440,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ This can be used to interpolate when rendering.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":252441,"byte_end":252492,"line_start":146,"line_end":146,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":252493,"byte_end":252496,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ This function returns an f32, which is usually what you want when blending - however,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":252497,"byte_end":252586,"line_start":148,"line_end":148,"column_start":1,"column_end":90}},{"value":"/ if you need a more precise representation of the blend factor, you can call","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":252587,"byte_end":252666,"line_start":149,"line_end":149,"column_start":1,"column_end":80}},{"value":"/ `time::get_blend_factor_precise`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":252667,"byte_end":252704,"line_start":150,"line_end":150,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":1113},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":253432,"byte_end":253456,"line_start":169,"line_end":169,"column_start":8,"column_end":32},"name":"get_blend_factor_precise","qualname":"::time::get_blend_factor_precise","value":"pub fn get_blend_factor_precise(&Context) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns a precise value between 0.0 and 1.0, representing how far between updates the game loop\n currently is.","sig":null,"attributes":[{"value":"/ Returns a precise value between 0.0 and 1.0, representing how far between updates the game loop","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":252902,"byte_end":253001,"line_start":158,"line_end":158,"column_start":1,"column_end":100}},{"value":"/ currently is.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":253002,"byte_end":253019,"line_start":159,"line_end":159,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":253020,"byte_end":253023,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ For example, if the value is 0.01, an update just happened; if the value is 0.99,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":253024,"byte_end":253109,"line_start":161,"line_end":161,"column_start":1,"column_end":86}},{"value":"/ an update is about to happen.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":253110,"byte_end":253143,"line_start":162,"line_end":162,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":253144,"byte_end":253147,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ This can be used to interpolate when rendering.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":253148,"byte_end":253199,"line_start":164,"line_end":164,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":253200,"byte_end":253203,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ This function returns an f64, which is a very precise representation of the blend factor,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":253204,"byte_end":253297,"line_start":166,"line_end":166,"column_start":1,"column_end":94}},{"value":"/ but often difficult to use in game logic without casting. If you need an `f32`, call","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":253298,"byte_end":253386,"line_start":167,"line_end":167,"column_start":1,"column_end":89}},{"value":"/ `time::get_blend_factor` instead.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":253387,"byte_end":253424,"line_start":168,"line_end":168,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":1114},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":253687,"byte_end":253699,"line_start":177,"line_end":177,"column_start":8,"column_end":20},"name":"get_timestep","qualname":"::time::get_timestep","value":"pub fn get_timestep(&Context) -> Timestep","parent":null,"children":[],"decl_id":null,"docs":" Gets the current timestep of the application.\n","sig":null,"attributes":[{"value":"/ Gets the current timestep of the application.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":253630,"byte_end":253679,"line_start":176,"line_end":176,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":1115},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":253918,"byte_end":253930,"line_start":185,"line_end":185,"column_start":8,"column_end":20},"name":"set_timestep","qualname":"::time::set_timestep","value":"pub fn set_timestep(&mut Context, Timestep)","parent":null,"children":[],"decl_id":null,"docs":" Sets the timestep of the application.\n","sig":null,"attributes":[{"value":"/ Sets the timestep of the application.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":253869,"byte_end":253910,"line_start":184,"line_end":184,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":1117},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":254491,"byte_end":254498,"line_start":201,"line_end":201,"column_start":8,"column_end":15},"name":"get_fps","qualname":"::time::get_fps","value":"pub fn get_fps(&Context) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the current frame rate, averaged out over the last 200 frames.\n","sig":null,"attributes":[{"value":"/ Returns the current frame rate, averaged out over the last 200 frames.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":254409,"byte_end":254483,"line_start":200,"line_end":200,"column_start":1,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":1118},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"window","qualname":"::window","value":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","parent":null,"children":[{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1135},{"krate":0,"index":1136},{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1139},{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":1142},{"krate":0,"index":1143},{"krate":0,"index":1144},{"krate":0,"index":1146},{"krate":0,"index":1148},{"krate":0,"index":1149},{"krate":0,"index":1150},{"krate":0,"index":1151},{"krate":0,"index":1153},{"krate":0,"index":1155}],"decl_id":null,"docs":" Functions and types relating to the game window, and the environment it is running in.\n","sig":null,"attributes":[{"value":"/ Functions and types relating to the game window, and the environment it is running in.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":254818,"byte_end":254908,"line_start":1,"line_end":1,"column_start":1,"column_end":91}}]},{"kind":"Function","id":{"krate":0,"index":1122},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":255143,"byte_end":255147,"line_start":9,"line_end":9,"column_start":8,"column_end":12},"name":"quit","qualname":"::window::quit","value":"pub fn quit(&mut Context)","parent":null,"children":[],"decl_id":null,"docs":" Quits the game, if it is currently running.","sig":null,"attributes":[{"value":"/ Quits the game, if it is currently running.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":254941,"byte_end":254988,"line_start":5,"line_end":5,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":254989,"byte_end":254992,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Note that quitting the game does not take effect until the end of the current","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":254993,"byte_end":255074,"line_start":7,"line_end":7,"column_start":1,"column_end":82}},{"value":"/ cycle of the game loop. This will probably change later.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":255075,"byte_end":255135,"line_start":8,"line_end":8,"column_start":1,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":1123},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":255246,"byte_end":255255,"line_start":14,"line_end":14,"column_start":8,"column_end":17},"name":"get_title","qualname":"::window::get_title","value":"pub fn get_title(&Context) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Gets the current title of the window.\n","sig":null,"attributes":[{"value":"/ Gets the current title of the window.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":255197,"byte_end":255238,"line_start":13,"line_end":13,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":1124},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":255359,"byte_end":255368,"line_start":19,"line_end":19,"column_start":8,"column_end":17},"name":"set_title","qualname":"::window::set_title","value":"pub fn set_title<S>(&mut Context, S) where S: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Sets the title of the window.\n","sig":null,"attributes":[{"value":"/ Sets the title of the window.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":255318,"byte_end":255351,"line_start":18,"line_end":18,"column_start":1,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":1126},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":255511,"byte_end":255520,"line_start":27,"line_end":27,"column_start":8,"column_end":17},"name":"get_width","qualname":"::window::get_width","value":"pub fn get_width(&Context) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Gets the width of the window.\n","sig":null,"attributes":[{"value":"/ Gets the width of the window.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":255470,"byte_end":255503,"line_start":26,"line_end":26,"column_start":1,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":1127},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":255761,"byte_end":255770,"line_start":37,"line_end":37,"column_start":8,"column_end":17},"name":"set_width","qualname":"::window::set_width","value":"pub fn set_width(&mut Context, i32) -> Result","parent":null,"children":[],"decl_id":null,"docs":" Sets the width of the window.","sig":null,"attributes":[{"value":"/ Sets the width of the window.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":255582,"byte_end":255615,"line_start":31,"line_end":31,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":255616,"byte_end":255619,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":255620,"byte_end":255632,"line_start":33,"line_end":33,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":255633,"byte_end":255636,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ * `TetraError::FailedToChangeDisplayMode` will be returned if the game was unable to","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":255637,"byte_end":255725,"line_start":35,"line_end":35,"column_start":1,"column_end":89}},{"value":"/ change the window size.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":255726,"byte_end":255753,"line_start":36,"line_end":36,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":1128},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":255916,"byte_end":255926,"line_start":42,"line_end":42,"column_start":8,"column_end":18},"name":"get_height","qualname":"::window::get_height","value":"pub fn get_height(&Context) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Gets the height of the window.\n","sig":null,"attributes":[{"value":"/ Gets the height of the window.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":255874,"byte_end":255908,"line_start":41,"line_end":41,"column_start":1,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":1129},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":256169,"byte_end":256179,"line_start":52,"line_end":52,"column_start":8,"column_end":18},"name":"set_height","qualname":"::window::set_height","value":"pub fn set_height(&mut Context, i32) -> Result","parent":null,"children":[],"decl_id":null,"docs":" Sets the height of the window.","sig":null,"attributes":[{"value":"/ Sets the height of the window.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":255989,"byte_end":256023,"line_start":46,"line_end":46,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":256024,"byte_end":256027,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":256028,"byte_end":256040,"line_start":48,"line_end":48,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":256041,"byte_end":256044,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ * `TetraError::FailedToChangeDisplayMode` will be returned if the game was unable to","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":256045,"byte_end":256133,"line_start":50,"line_end":50,"column_start":1,"column_end":89}},{"value":"/ change the window size.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":256134,"byte_end":256161,"line_start":51,"line_end":51,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":1130},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":256324,"byte_end":256332,"line_start":57,"line_end":57,"column_start":8,"column_end":16},"name":"get_size","qualname":"::window::get_size","value":"pub fn get_size(&Context) -> (i32, i32)","parent":null,"children":[],"decl_id":null,"docs":" Gets the size of the window.\n","sig":null,"attributes":[{"value":"/ Gets the size of the window.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":256284,"byte_end":256316,"line_start":56,"line_end":56,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":1131},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":256578,"byte_end":256586,"line_start":67,"line_end":67,"column_start":8,"column_end":16},"name":"set_size","qualname":"::window::set_size","value":"pub fn set_size(&mut Context, i32, i32) -> Result","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the window.","sig":null,"attributes":[{"value":"/ Sets the size of the window.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":256400,"byte_end":256432,"line_start":61,"line_end":61,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":256433,"byte_end":256436,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":256437,"byte_end":256449,"line_start":63,"line_end":63,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":256450,"byte_end":256453,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ * `TetraError::FailedToChangeDisplayMode` will be returned if the game was unable to","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":256454,"byte_end":256542,"line_start":65,"line_end":65,"column_start":1,"column_end":89}},{"value":"/ change the window size.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":256543,"byte_end":256570,"line_start":66,"line_end":66,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":1132},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":256879,"byte_end":256888,"line_start":77,"line_end":77,"column_start":8,"column_end":17},"name":"set_vsync","qualname":"::window::set_vsync","value":"pub fn set_vsync(&mut Context, bool) -> Result","parent":null,"children":[],"decl_id":null,"docs":" Sets whether the window should be vsynced.","sig":null,"attributes":[{"value":"/ Sets whether the window should be vsynced.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":256692,"byte_end":256738,"line_start":71,"line_end":71,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":256739,"byte_end":256742,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":256743,"byte_end":256755,"line_start":73,"line_end":73,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":256756,"byte_end":256759,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ * `TetraError::FailedToChangeDisplayMode` will be returned if the game was unable to","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":256760,"byte_end":256848,"line_start":75,"line_end":75,"column_start":1,"column_end":89}},{"value":"/ change vsync mode.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":256849,"byte_end":256871,"line_start":76,"line_end":76,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":1133},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":257021,"byte_end":257037,"line_start":82,"line_end":82,"column_start":8,"column_end":24},"name":"is_vsync_enabled","qualname":"::window::is_vsync_enabled","value":"pub fn is_vsync_enabled(&Context) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whethere or not vsync is enabled.\n","sig":null,"attributes":[{"value":"/ Returns whethere or not vsync is enabled.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":256968,"byte_end":257013,"line_start":81,"line_end":81,"column_start":1,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":1134},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":257305,"byte_end":257319,"line_start":92,"line_end":92,"column_start":8,"column_end":22},"name":"set_fullscreen","qualname":"::window::set_fullscreen","value":"pub fn set_fullscreen(&mut Context, bool) -> Result","parent":null,"children":[],"decl_id":null,"docs":" Sets whether the window should be in fullscreen mode.","sig":null,"attributes":[{"value":"/ Sets whether the window should be in fullscreen mode.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":257100,"byte_end":257157,"line_start":86,"line_end":86,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":257158,"byte_end":257161,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":257162,"byte_end":257174,"line_start":88,"line_end":88,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":257175,"byte_end":257178,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ * `TetraError::FailedToChangeDisplayMode` will be returned if the game was unable to","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":257179,"byte_end":257267,"line_start":90,"line_end":90,"column_start":1,"column_end":89}},{"value":"/ enter or exit fullscreen.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":257268,"byte_end":257297,"line_start":91,"line_end":91,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":1135},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":257492,"byte_end":257505,"line_start":97,"line_end":97,"column_start":8,"column_end":21},"name":"is_fullscreen","qualname":"::window::is_fullscreen","value":"pub fn is_fullscreen(&Context) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether or not the window is currently in fullscreen mode.\n","sig":null,"attributes":[{"value":"/ Returns whether or not the window is currently in fullscreen mode.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":257414,"byte_end":257484,"line_start":96,"line_end":96,"column_start":1,"column_end":71}}]},{"kind":"Function","id":{"krate":0,"index":1136},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":257742,"byte_end":257759,"line_start":106,"line_end":106,"column_start":8,"column_end":25},"name":"set_mouse_visible","qualname":"::window::set_mouse_visible","value":"pub fn set_mouse_visible(&mut Context, bool) -> Result","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not the mouse cursor should be visible.","sig":null,"attributes":[{"value":"/ Sets whether or not the mouse cursor should be visible.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":257565,"byte_end":257624,"line_start":101,"line_end":101,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":257625,"byte_end":257628,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":257629,"byte_end":257641,"line_start":103,"line_end":103,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":257642,"byte_end":257645,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ * `TetraError::PlatformError` will be returned if the cursor state was inaccessible.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":257646,"byte_end":257734,"line_start":105,"line_end":105,"column_start":1,"column_end":89}}]},{"kind":"Function","id":{"krate":0,"index":1137},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":257924,"byte_end":257940,"line_start":111,"line_end":111,"column_start":8,"column_end":24},"name":"is_mouse_visible","qualname":"::window::is_mouse_visible","value":"pub fn is_mouse_visible(&Context) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether or not the mouse cursor is currently visible.\n","sig":null,"attributes":[{"value":"/ Returns whether or not the mouse cursor is currently visible.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":257851,"byte_end":257916,"line_start":110,"line_end":110,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":1138},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":258172,"byte_end":258189,"line_start":119,"line_end":119,"column_start":8,"column_end":25},"name":"set_mouse_grabbed","qualname":"::window::set_mouse_grabbed","value":"pub fn set_mouse_grabbed(&mut Context, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not the mouse is grabbed by the window.","sig":null,"attributes":[{"value":"/ Sets whether or not the mouse is grabbed by the window.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":258003,"byte_end":258062,"line_start":115,"line_end":115,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":258063,"byte_end":258066,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ When this is active, the cursor will not be able to leave the window while it","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":258067,"byte_end":258148,"line_start":117,"line_end":117,"column_start":1,"column_end":82}},{"value":"/ is focused.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":258149,"byte_end":258164,"line_start":118,"line_end":118,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":1139},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":258466,"byte_end":258482,"line_start":127,"line_end":127,"column_start":8,"column_end":24},"name":"is_mouse_grabbed","qualname":"::window::is_mouse_grabbed","value":"pub fn is_mouse_grabbed(&Context) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether or not the mouse is currently grabbed by the window.","sig":null,"attributes":[{"value":"/ Returns whether or not the mouse is currently grabbed by the window.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":258284,"byte_end":258356,"line_start":123,"line_end":123,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":258357,"byte_end":258360,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ When this is active, the cursor will not be able to leave the window while it","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":258361,"byte_end":258442,"line_start":125,"line_end":125,"column_start":1,"column_end":82}},{"value":"/ is focused.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":258443,"byte_end":258458,"line_start":126,"line_end":126,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":1140},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":259176,"byte_end":259199,"line_start":141,"line_end":141,"column_start":8,"column_end":31},"name":"set_relative_mouse_mode","qualname":"::window::set_relative_mouse_mode","value":"pub fn set_relative_mouse_mode(&mut Context, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not relative mouse mode is enabled.","sig":null,"attributes":[{"value":"/ Sets whether or not relative mouse mode is enabled.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":258545,"byte_end":258600,"line_start":131,"line_end":131,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":258601,"byte_end":258604,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ While the mouse is in relative mode, the cursor is hidden and can move beyond the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":258605,"byte_end":258690,"line_start":133,"line_end":133,"column_start":1,"column_end":86}},{"value":"/ bounds of the window. The [`delta` field of `Event::MouseMoved`](../enum.Event.html#variant.MouseMoved.field.delta)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":258691,"byte_end":258810,"line_start":134,"line_end":134,"column_start":1,"column_end":120}},{"value":"/ can then be used to track the cursor's changes in position. This is useful when","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":258811,"byte_end":258894,"line_start":135,"line_end":135,"column_start":1,"column_end":84}},{"value":"/ implementing control schemes that require the mouse to be able to move infinitely","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":258895,"byte_end":258980,"line_start":136,"line_end":136,"column_start":1,"column_end":86}},{"value":"/ in any direction (for example, FPS-style movement).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":258981,"byte_end":259036,"line_start":137,"line_end":137,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":259037,"byte_end":259040,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ While this mode is enabled, the absolute position of the mouse may not be updated -","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":259041,"byte_end":259128,"line_start":139,"line_end":139,"column_start":1,"column_end":88}},{"value":"/ as such, you should not rely on it.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":259129,"byte_end":259168,"line_start":140,"line_end":140,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1141},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":259956,"byte_end":259978,"line_start":155,"line_end":155,"column_start":8,"column_end":30},"name":"is_relative_mouse_mode","qualname":"::window::is_relative_mouse_mode","value":"pub fn is_relative_mouse_mode(&Context) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether or not relative mouse mode is currently enabled.","sig":null,"attributes":[{"value":"/ Returns whether or not relative mouse mode is currently enabled.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":259312,"byte_end":259380,"line_start":145,"line_end":145,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":259381,"byte_end":259384,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ While the mouse is in relative mode, the cursor is hidden and can move beyond the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":259385,"byte_end":259470,"line_start":147,"line_end":147,"column_start":1,"column_end":86}},{"value":"/ bounds of the window. The [`delta` field of `Event::MouseMoved`](../enum.Event.html#variant.MouseMoved.field.delta)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":259471,"byte_end":259590,"line_start":148,"line_end":148,"column_start":1,"column_end":120}},{"value":"/ can then be used to track the cursor's changes in position. This is useful when","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":259591,"byte_end":259674,"line_start":149,"line_end":149,"column_start":1,"column_end":84}},{"value":"/ implementing control schemes that require the mouse to be able to move infinitely","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":259675,"byte_end":259760,"line_start":150,"line_end":150,"column_start":1,"column_end":86}},{"value":"/ in any direction (for example, FPS-style movement).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":259761,"byte_end":259816,"line_start":151,"line_end":151,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":259817,"byte_end":259820,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ While this mode is enabled, the absolute position of the mouse may not be updated -","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":259821,"byte_end":259908,"line_start":153,"line_end":153,"column_start":1,"column_end":88}},{"value":"/ as such, you should not rely on it.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":259909,"byte_end":259948,"line_start":154,"line_end":154,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1142},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":260221,"byte_end":260238,"line_start":164,"line_end":164,"column_start":8,"column_end":25},"name":"get_monitor_count","qualname":"::window::get_monitor_count","value":"pub fn get_monitor_count(&Context) -> Result<i32>","parent":null,"children":[],"decl_id":null,"docs":" Get the number of monitors connected to the device.","sig":null,"attributes":[{"value":"/ Get the number of monitors connected to the device.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":260047,"byte_end":260102,"line_start":159,"line_end":159,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":260103,"byte_end":260106,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":260107,"byte_end":260119,"line_start":161,"line_end":161,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":260120,"byte_end":260123,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ * `TetraError::PlatformError` will be returned if the monitor state was inaccessible.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":260124,"byte_end":260213,"line_start":163,"line_end":163,"column_start":1,"column_end":90}}]},{"kind":"Function","id":{"krate":0,"index":1143},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":260482,"byte_end":260498,"line_start":173,"line_end":173,"column_start":8,"column_end":24},"name":"get_monitor_name","qualname":"::window::get_monitor_name","value":"pub fn get_monitor_name(&Context, i32) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Get the name of a monitor connected to the device.","sig":null,"attributes":[{"value":"/ Get the name of a monitor connected to the device.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":260309,"byte_end":260363,"line_start":168,"line_end":168,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":260364,"byte_end":260367,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":260368,"byte_end":260380,"line_start":170,"line_end":170,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":260381,"byte_end":260384,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ * `TetraError::PlatformError` will be returned if the monitor state was inaccessible.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":260385,"byte_end":260474,"line_start":172,"line_end":172,"column_start":1,"column_end":90}}]},{"kind":"Function","id":{"krate":0,"index":1144},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":260778,"byte_end":260795,"line_start":182,"line_end":182,"column_start":8,"column_end":25},"name":"get_monitor_width","qualname":"::window::get_monitor_width","value":"pub fn get_monitor_width(&Context, i32) -> Result<i32>","parent":null,"children":[],"decl_id":null,"docs":" Get the width of a monitor connected to the device.","sig":null,"attributes":[{"value":"/ Get the width of a monitor connected to the device.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":260604,"byte_end":260659,"line_start":177,"line_end":177,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":260660,"byte_end":260663,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":260664,"byte_end":260676,"line_start":179,"line_end":179,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":260677,"byte_end":260680,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ * `TetraError::PlatformError` will be returned if the monitor state was inaccessible.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":260681,"byte_end":260770,"line_start":181,"line_end":181,"column_start":1,"column_end":90}}]},{"kind":"Function","id":{"krate":0,"index":1146},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":261083,"byte_end":261101,"line_start":191,"line_end":191,"column_start":8,"column_end":26},"name":"get_monitor_height","qualname":"::window::get_monitor_height","value":"pub fn get_monitor_height(&Context, i32) -> Result<i32>","parent":null,"children":[],"decl_id":null,"docs":" Get the height of a monitor connected to the device.","sig":null,"attributes":[{"value":"/ Get the height of a monitor connected to the device.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":260908,"byte_end":260964,"line_start":186,"line_end":186,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":260965,"byte_end":260968,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":260969,"byte_end":260981,"line_start":188,"line_end":188,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":260982,"byte_end":260985,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ * `TetraError::PlatformError` will be returned if the monitor state was inaccessible.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":260986,"byte_end":261075,"line_start":190,"line_end":190,"column_start":1,"column_end":90}}]},{"kind":"Function","id":{"krate":0,"index":1148},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":261387,"byte_end":261403,"line_start":200,"line_end":200,"column_start":8,"column_end":24},"name":"get_monitor_size","qualname":"::window::get_monitor_size","value":"pub fn get_monitor_size(&Context, i32) -> Result<(i32, i32)>","parent":null,"children":[],"decl_id":null,"docs":" Get the size of a monitor connected to the device.","sig":null,"attributes":[{"value":"/ Get the size of a monitor connected to the device.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":261214,"byte_end":261268,"line_start":195,"line_end":195,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":261269,"byte_end":261272,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":261273,"byte_end":261285,"line_start":197,"line_end":197,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":261286,"byte_end":261289,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ * `TetraError::PlatformError` will be returned if the monitor state was inaccessible.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":261290,"byte_end":261379,"line_start":199,"line_end":199,"column_start":1,"column_end":90}}]},{"kind":"Function","id":{"krate":0,"index":1149},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":261697,"byte_end":261716,"line_start":209,"line_end":209,"column_start":8,"column_end":27},"name":"get_current_monitor","qualname":"::window::get_current_monitor","value":"pub fn get_current_monitor(&Context) -> Result<i32>","parent":null,"children":[],"decl_id":null,"docs":" Get the index of the monitor that the window is currently on.","sig":null,"attributes":[{"value":"/ Get the index of the monitor that the window is currently on.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":261513,"byte_end":261578,"line_start":204,"line_end":204,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":261579,"byte_end":261582,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":261583,"byte_end":261595,"line_start":206,"line_end":206,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":261596,"byte_end":261599,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ * `TetraError::PlatformError` will be returned if the monitor state was inaccessible.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":261600,"byte_end":261689,"line_start":208,"line_end":208,"column_start":1,"column_end":90}}]},{"kind":"Function","id":{"krate":0,"index":1150},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":261972,"byte_end":261996,"line_start":218,"line_end":218,"column_start":8,"column_end":32},"name":"get_current_monitor_name","qualname":"::window::get_current_monitor_name","value":"pub fn get_current_monitor_name(&Context) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Get the name of the monitor that the window is currently on.","sig":null,"attributes":[{"value":"/ Get the name of the monitor that the window is currently on.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":261789,"byte_end":261853,"line_start":213,"line_end":213,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":261854,"byte_end":261857,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":261858,"byte_end":261870,"line_start":215,"line_end":215,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":261871,"byte_end":261874,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ * `TetraError::PlatformError` will be returned if the monitor state was inaccessible.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":261875,"byte_end":261964,"line_start":217,"line_end":217,"column_start":1,"column_end":90}}]},{"kind":"Function","id":{"krate":0,"index":1151},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":262325,"byte_end":262350,"line_start":228,"line_end":228,"column_start":8,"column_end":33},"name":"get_current_monitor_width","qualname":"::window::get_current_monitor_width","value":"pub fn get_current_monitor_width(&Context) -> Result<i32>","parent":null,"children":[],"decl_id":null,"docs":" Get the width of the monitor that the window is currently on.","sig":null,"attributes":[{"value":"/ Get the width of the monitor that the window is currently on.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":262141,"byte_end":262206,"line_start":223,"line_end":223,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":262207,"byte_end":262210,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":262211,"byte_end":262223,"line_start":225,"line_end":225,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":262224,"byte_end":262227,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ * `TetraError::PlatformError` will be returned if the monitor state was inaccessible.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":262228,"byte_end":262317,"line_start":227,"line_end":227,"column_start":1,"column_end":90}}]},{"kind":"Function","id":{"krate":0,"index":1153},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":262621,"byte_end":262647,"line_start":237,"line_end":237,"column_start":8,"column_end":34},"name":"get_current_monitor_height","qualname":"::window::get_current_monitor_height","value":"pub fn get_current_monitor_height(&Context) -> Result<i32>","parent":null,"children":[],"decl_id":null,"docs":" Get the height of the monitor that the window is currently on.","sig":null,"attributes":[{"value":"/ Get the height of the monitor that the window is currently on.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":262436,"byte_end":262502,"line_start":232,"line_end":232,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":262503,"byte_end":262506,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":262507,"byte_end":262519,"line_start":234,"line_end":234,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":262520,"byte_end":262523,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ * `TetraError::PlatformError` will be returned if the monitor state was inaccessible.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":262524,"byte_end":262613,"line_start":236,"line_end":236,"column_start":1,"column_end":90}}]},{"kind":"Function","id":{"krate":0,"index":1155},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":262916,"byte_end":262940,"line_start":246,"line_end":246,"column_start":8,"column_end":32},"name":"get_current_monitor_size","qualname":"::window::get_current_monitor_size","value":"pub fn get_current_monitor_size(&Context) -> Result<(i32, i32)>","parent":null,"children":[],"decl_id":null,"docs":" Get the size of the monitor that the window is currently on.","sig":null,"attributes":[{"value":"/ Get the size of the monitor that the window is currently on.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":262733,"byte_end":262797,"line_start":241,"line_end":241,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":262798,"byte_end":262801,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":262802,"byte_end":262814,"line_start":243,"line_end":243,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":262815,"byte_end":262818,"line_start":244,"line_end":244,"column_start":1,"column_end":4}},{"value":"/ * `TetraError::PlatformError` will be returned if the monitor state was inaccessible.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/window.rs","byte_start":262819,"byte_end":262908,"line_start":245,"line_end":245,"column_start":1,"column_end":90}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":4335,"byte_end":4340,"line_start":50,"line_end":50,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":33},{"krate":0,"index":35},{"krate":0,"index":37},{"krate":0,"index":39},{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":8866,"byte_end":8879,"line_start":167,"line_end":167,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":12315,"byte_end":12328,"line_start":274,"line_end":274,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":13572,"byte_end":13583,"line_start":322,"line_end":322,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":15803,"byte_end":15814,"line_start":411,"line_end":411,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":18502,"byte_end":18513,"line_start":492,"line_end":492,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":20526,"byte_end":20533,"line_start":26,"line_end":26,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":25586,"byte_end":25600,"line_start":195,"line_end":195,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":30236,"byte_end":30250,"line_start":346,"line_end":346,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","byte_start":33410,"byte_end":33420,"line_start":73,"line_end":73,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","byte_start":34620,"byte_end":34630,"line_start":97,"line_end":97,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":52670,"byte_end":52679,"line_start":35,"line_end":35,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":58855,"byte_end":58864,"line_start":196,"line_end":196,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":62163,"byte_end":62169,"line_start":62,"line_end":62,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":73467,"byte_end":73473,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":76946,"byte_end":76952,"line_start":146,"line_end":146,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":78467,"byte_end":78472,"line_start":41,"line_end":41,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":82122,"byte_end":82126,"line_start":143,"line_end":143,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":82263,"byte_end":82268,"line_start":149,"line_end":149,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":82369,"byte_end":82374,"line_start":155,"line_end":155,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":82655,"byte_end":82660,"line_start":168,"line_end":168,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":82887,"byte_end":82892,"line_start":177,"line_end":177,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":83173,"byte_end":83178,"line_start":190,"line_end":190,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":83405,"byte_end":83410,"line_start":199,"line_end":199,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":83691,"byte_end":83696,"line_start":212,"line_end":212,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":83923,"byte_end":83928,"line_start":221,"line_end":221,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":84209,"byte_end":84214,"line_start":234,"line_end":234,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":89349,"byte_end":89359,"line_start":41,"line_end":41,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":90484,"byte_end":90494,"line_start":84,"line_end":84,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":90803,"byte_end":90813,"line_start":97,"line_end":97,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":92367,"byte_end":92376,"line_start":28,"line_end":28,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":352},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":96873,"byte_end":96885,"line_start":160,"line_end":160,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":97187,"byte_end":97202,"line_start":175,"line_end":175,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":370},{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":100322,"byte_end":100334,"line_start":26,"line_end":26,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":105465,"byte_end":105477,"line_start":193,"line_end":193,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":112591,"byte_end":112607,"line_start":39,"line_end":39,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":114782,"byte_end":114788,"line_start":95,"line_end":95,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":432},{"krate":0,"index":434},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":439},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":120762,"byte_end":120767,"line_start":267,"line_end":267,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":120987,"byte_end":120994,"line_start":275,"line_end":275,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/cache.rs","byte_start":132305,"byte_end":132314,"line_start":102,"line_end":102,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/packer.rs","byte_start":139131,"byte_end":139142,"line_start":21,"line_end":21,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","byte_start":142858,"byte_end":142874,"line_start":20,"line_end":20,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","byte_start":143092,"byte_end":143108,"line_start":32,"line_end":32,"column_start":24,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":549},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","byte_start":146149,"byte_end":146166,"line_start":132,"line_end":132,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":560},{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":123676,"byte_end":123680,"line_start":44,"line_end":44,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":124572,"byte_end":124576,"line_start":68,"line_end":68,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":125327,"byte_end":125331,"line_start":95,"line_end":95,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":589},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":128437,"byte_end":128441,"line_start":200,"line_end":200,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":148509,"byte_end":148526,"line_start":19,"line_end":19,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":150138,"byte_end":150145,"line_start":66,"line_end":66,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":157451,"byte_end":157458,"line_start":280,"line_end":280,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/ui.rs","byte_start":159761,"byte_end":159770,"line_start":22,"line_end":22,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/ui.rs","byte_start":161707,"byte_end":161716,"line_start":91,"line_end":91,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":38402,"byte_end":38417,"line_start":78,"line_end":78,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":167941,"byte_end":167953,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":172425,"byte_end":172440,"line_start":181,"line_end":181,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":165454,"byte_end":165466,"line_start":55,"line_end":55,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":838}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/platform/device_gl.rs","byte_start":194229,"byte_end":194243,"line_start":40,"line_end":40,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":924},{"krate":0,"index":926},{"krate":0,"index":928},{"krate":0,"index":931},{"krate":0,"index":932}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/platform/device_gl.rs","byte_start":213363,"byte_end":213377,"line_start":703,"line_end":703,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":935}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/platform/device_gl.rs","byte_start":214869,"byte_end":214884,"line_start":773,"line_end":773,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/platform/device_gl.rs","byte_start":215308,"byte_end":215322,"line_start":795,"line_end":795,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/platform/device_gl.rs","byte_start":215721,"byte_end":215731,"line_start":815,"line_end":815,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":948}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/platform/device_gl.rs","byte_start":216142,"byte_end":216152,"line_start":838,"line_end":838,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":950},{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/platform/device_gl.rs","byte_start":216291,"byte_end":216301,"line_start":848,"line_end":848,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":953}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/platform/device_gl.rs","byte_start":216735,"byte_end":216749,"line_start":870,"line_end":870,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":955}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/platform/window_sdl.rs","byte_start":219430,"byte_end":219436,"line_start":51,"line_end":51,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1021},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/platform/window_sdl.rs","byte_start":244256,"byte_end":244269,"line_start":758,"line_end":758,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1072}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/platform/window_sdl.rs","byte_start":245348,"byte_end":245362,"line_start":781,"line_end":781,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1074}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/platform/window_sdl.rs","byte_start":245893,"byte_end":245904,"line_start":795,"line_end":795,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1076}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":249646,"byte_end":249657,"line_start":63,"line_end":63,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":2317,"byte_end":2322,"line_start":65,"line_end":65,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":2345,"byte_end":2350,"line_start":67,"line_end":67,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":156}},{"kind":"Mod","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":2368,"byte_end":2376,"line_start":69,"line_end":69,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":192}},{"kind":"Mod","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":37011,"byte_end":37020,"line_start":8,"line_end":8,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":193}},{"kind":"Mod","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":37094,"byte_end":37101,"line_start":14,"line_end":14,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":372}},{"kind":"Mod","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":37123,"byte_end":37127,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":456}},{"kind":"Mod","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":37150,"byte_end":37152,"line_start":18,"line_end":18,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":640}},{"kind":"Mod","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":2386,"byte_end":2391,"line_start":70,"line_end":70,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":727}},{"kind":"Mod","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":2416,"byte_end":2420,"line_start":72,"line_end":72,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":861}},{"kind":"Mod","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":2444,"byte_end":2448,"line_start":74,"line_end":74,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1090}},{"kind":"Mod","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/lib.rs","byte_start":2458,"byte_end":2464,"line_start":75,"line_end":75,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1118}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":4335,"byte_end":4340,"line_start":50,"line_end":50,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":8866,"byte_end":8879,"line_start":167,"line_end":167,"column_start":6,"column_end":19},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":12315,"byte_end":12328,"line_start":274,"line_end":274,"column_start":6,"column_end":19},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":13572,"byte_end":13583,"line_start":322,"line_end":322,"column_start":6,"column_end":17},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":62},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":15803,"byte_end":15814,"line_start":411,"line_end":411,"column_start":19,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":71},"to":{"krate":2,"index":5040}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/audio.rs","byte_start":18502,"byte_end":18513,"line_start":492,"line_end":492,"column_start":17,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":71},"to":{"krate":16,"index":1132}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":20526,"byte_end":20533,"line_start":26,"line_end":26,"column_start":6,"column_end":13},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":117},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":25586,"byte_end":25600,"line_start":195,"line_end":195,"column_start":6,"column_end":20},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1204},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/context.rs","byte_start":30236,"byte_end":30250,"line_start":346,"line_end":346,"column_start":18,"column_end":32},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1204},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","byte_start":33410,"byte_end":33420,"line_start":73,"line_end":73,"column_start":18,"column_end":28},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1224},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/error.rs","byte_start":34620,"byte_end":34630,"line_start":97,"line_end":97,"column_start":16,"column_end":26},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1224},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":52670,"byte_end":52679,"line_start":35,"line_end":35,"column_start":6,"column_end":15},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/animation.rs","byte_start":58855,"byte_end":58864,"line_start":196,"line_end":196,"column_start":19,"column_end":28},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1254},"to":{"krate":0,"index":343}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/camera.rs","byte_start":62163,"byte_end":62169,"line_start":62,"line_end":62,"column_start":6,"column_end":12},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":73467,"byte_end":73473,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1276},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/canvas.rs","byte_start":76946,"byte_end":76952,"line_start":146,"line_end":146,"column_start":19,"column_end":25},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1276},"to":{"krate":0,"index":343}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":78467,"byte_end":78472,"line_start":41,"line_end":41,"column_start":6,"column_end":11},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1287},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":82122,"byte_end":82126,"line_start":143,"line_end":143,"column_start":22,"column_end":26},"kind":{"Impl":{"id":17}},"from":{"krate":70,"index":3288},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":82263,"byte_end":82268,"line_start":149,"line_end":149,"column_start":26,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1287},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":82369,"byte_end":82374,"line_start":155,"line_end":155,"column_start":14,"column_end":19},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1287},"to":{"krate":2,"index":2036}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":82655,"byte_end":82660,"line_start":168,"line_end":168,"column_start":20,"column_end":25},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1287},"to":{"krate":2,"index":2067}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":82887,"byte_end":82892,"line_start":177,"line_end":177,"column_start":14,"column_end":19},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1287},"to":{"krate":2,"index":2041}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":83173,"byte_end":83178,"line_start":190,"line_end":190,"column_start":20,"column_end":25},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1287},"to":{"krate":2,"index":2071}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":83405,"byte_end":83410,"line_start":199,"line_end":199,"column_start":14,"column_end":19},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1287},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":83691,"byte_end":83696,"line_start":212,"line_end":212,"column_start":20,"column_end":25},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1287},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":83923,"byte_end":83928,"line_start":221,"line_end":221,"column_start":14,"column_end":19},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1287},"to":{"krate":2,"index":2051}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/color.rs","byte_start":84209,"byte_end":84214,"line_start":234,"line_end":234,"column_start":20,"column_end":25},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1287},"to":{"krate":2,"index":2079}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":89349,"byte_end":89359,"line_start":41,"line_end":41,"column_start":6,"column_end":16},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":90484,"byte_end":90494,"line_start":84,"line_end":84,"column_start":18,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1301},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/drawable.rs","byte_start":90803,"byte_end":90813,"line_start":97,"line_end":97,"column_start":26,"column_end":36},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1301},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":92367,"byte_end":92376,"line_start":28,"line_end":28,"column_start":6,"column_end":15},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":96873,"byte_end":96885,"line_start":160,"line_end":160,"column_start":19,"column_end":31},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1330},"to":{"krate":2,"index":5040}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/rectangle.rs","byte_start":97187,"byte_end":97202,"line_start":175,"line_end":175,"column_start":19,"column_end":34},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1336},"to":{"krate":2,"index":5040}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":100322,"byte_end":100334,"line_start":26,"line_end":26,"column_start":6,"column_end":18},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1342},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/scaling.rs","byte_start":105465,"byte_end":105477,"line_start":193,"line_end":193,"column_start":19,"column_end":31},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1342},"to":{"krate":0,"index":343}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":112591,"byte_end":112607,"line_start":39,"line_end":39,"column_start":20,"column_end":36},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1376},"to":{"krate":2,"index":1697}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":114782,"byte_end":114788,"line_start":95,"line_end":95,"column_start":6,"column_end":12},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1382},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":120762,"byte_end":120767,"line_start":267,"line_end":267,"column_start":23,"column_end":28},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1287},"to":{"krate":0,"index":445}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/shader.rs","byte_start":120987,"byte_end":120994,"line_start":275,"line_end":275,"column_start":23,"column_end":30},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1482},"to":{"krate":0,"index":445}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/cache.rs","byte_start":132305,"byte_end":132314,"line_start":102,"line_end":102,"column_start":6,"column_end":15},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":484},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/packer.rs","byte_start":139131,"byte_end":139142,"line_start":21,"line_end":21,"column_start":6,"column_end":17},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":504},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","byte_start":142858,"byte_end":142874,"line_start":20,"line_end":20,"column_start":9,"column_end":25},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":540},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","byte_start":143092,"byte_end":143108,"line_start":32,"line_end":32,"column_start":24,"column_end":40},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":540},"to":{"krate":0,"index":477}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text/vector.rs","byte_start":146149,"byte_end":146166,"line_start":132,"line_end":132,"column_start":6,"column_end":23},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1459},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":123676,"byte_end":123680,"line_start":44,"line_end":44,"column_start":6,"column_end":10},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1465},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":124572,"byte_end":124576,"line_start":68,"line_end":68,"column_start":16,"column_end":20},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1465},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":125327,"byte_end":125331,"line_start":95,"line_end":95,"column_start":6,"column_end":10},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1469},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/text.rs","byte_start":128437,"byte_end":128441,"line_start":200,"line_end":200,"column_start":19,"column_end":23},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1469},"to":{"krate":0,"index":343}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":148509,"byte_end":148526,"line_start":19,"line_end":19,"column_start":20,"column_end":37},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1477},"to":{"krate":2,"index":1697}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":150138,"byte_end":150145,"line_start":66,"line_end":66,"column_start":6,"column_end":13},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/texture.rs","byte_start":157451,"byte_end":157458,"line_start":280,"line_end":280,"column_start":19,"column_end":26},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1482},"to":{"krate":0,"index":343}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/ui.rs","byte_start":159761,"byte_end":159770,"line_start":22,"line_end":22,"column_start":6,"column_end":15},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1502},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics/ui.rs","byte_start":161707,"byte_end":161716,"line_start":91,"line_end":91,"column_start":19,"column_end":28},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1502},"to":{"krate":0,"index":343}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/graphics.rs","byte_start":38402,"byte_end":38417,"line_start":78,"line_end":78,"column_start":6,"column_end":21},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":688},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":167941,"byte_end":167953,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input/gamepad.rs","byte_start":172425,"byte_end":172440,"line_start":181,"line_end":181,"column_start":22,"column_end":37},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":753},"to":{"krate":2,"index":5040}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/input.rs","byte_start":165454,"byte_end":165466,"line_start":55,"line_end":55,"column_start":6,"column_end":18},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":826},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/platform/device_gl.rs","byte_start":194229,"byte_end":194243,"line_start":40,"line_end":40,"column_start":6,"column_end":20},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":891},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/platform/device_gl.rs","byte_start":213363,"byte_end":213377,"line_start":703,"line_end":703,"column_start":15,"column_end":29},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":891},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/platform/device_gl.rs","byte_start":214869,"byte_end":214884,"line_start":773,"line_end":773,"column_start":15,"column_end":30},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2037},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/platform/device_gl.rs","byte_start":215308,"byte_end":215322,"line_start":795,"line_end":795,"column_start":15,"column_end":29},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":2046},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/platform/device_gl.rs","byte_start":215721,"byte_end":215731,"line_start":815,"line_end":815,"column_start":15,"column_end":25},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":2054},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/platform/device_gl.rs","byte_start":216142,"byte_end":216152,"line_start":838,"line_end":838,"column_start":6,"column_end":16},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2061},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/platform/device_gl.rs","byte_start":216291,"byte_end":216301,"line_start":848,"line_end":848,"column_start":15,"column_end":25},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2061},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/platform/device_gl.rs","byte_start":216735,"byte_end":216749,"line_start":870,"line_end":870,"column_start":15,"column_end":29},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":2070},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/platform/window_sdl.rs","byte_start":219430,"byte_end":219436,"line_start":51,"line_end":51,"column_start":6,"column_end":12},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1008},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/platform/window_sdl.rs","byte_start":244256,"byte_end":244269,"line_start":758,"line_end":758,"column_start":33,"column_end":46},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1550},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/platform/window_sdl.rs","byte_start":245348,"byte_end":245362,"line_start":781,"line_end":781,"column_start":28,"column_end":42},"kind":{"Impl":{"id":84}},"from":{"krate":74,"index":2463},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/platform/window_sdl.rs","byte_start":245893,"byte_end":245904,"line_start":795,"line_end":795,"column_start":31,"column_end":42},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1599},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/tetra-0.5.2/src/time.rs","byte_start":249646,"byte_end":249657,"line_start":63,"line_end":63,"column_start":6,"column_end":17},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1100},"to":{"krate":4294967295,"index":4294967295}}]}