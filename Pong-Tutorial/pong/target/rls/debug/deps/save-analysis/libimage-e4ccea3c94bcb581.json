{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11","program":"/Users/marcpartensky/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","image","--edition=2018","/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"bmp\"","--cfg","feature=\"gif\"","--cfg","feature=\"jpeg\"","--cfg","feature=\"jpeg_rayon\"","--cfg","feature=\"png\"","-C","metadata=e4ccea3c94bcb581","-C","extra-filename=-e4ccea3c94bcb581","--out-dir","/Users/marcpartensky/Programs/Rust/Pong-Tutorial/pong/target/rls/debug/deps","-L","dependency=/Users/marcpartensky/Programs/Rust/Pong-Tutorial/pong/target/rls/debug/deps","--extern","bytemuck=/Users/marcpartensky/Programs/Rust/Pong-Tutorial/pong/target/rls/debug/deps/libbytemuck-ea70d62e73dd093b.rmeta","--extern","byteorder=/Users/marcpartensky/Programs/Rust/Pong-Tutorial/pong/target/rls/debug/deps/libbyteorder-1a76cad529fec8b0.rmeta","--extern","color_quant=/Users/marcpartensky/Programs/Rust/Pong-Tutorial/pong/target/rls/debug/deps/libcolor_quant-cf8a8f6be6b6513e.rmeta","--extern","gif=/Users/marcpartensky/Programs/Rust/Pong-Tutorial/pong/target/rls/debug/deps/libgif-861afe562d35c978.rmeta","--extern","jpeg=/Users/marcpartensky/Programs/Rust/Pong-Tutorial/pong/target/rls/debug/deps/libjpeg_decoder-deaaae6f6e4280ee.rmeta","--extern","num_iter=/Users/marcpartensky/Programs/Rust/Pong-Tutorial/pong/target/rls/debug/deps/libnum_iter-6dc6318db04ab085.rmeta","--extern","num_rational=/Users/marcpartensky/Programs/Rust/Pong-Tutorial/pong/target/rls/debug/deps/libnum_rational-b1eef71a282240ad.rmeta","--extern","num_traits=/Users/marcpartensky/Programs/Rust/Pong-Tutorial/pong/target/rls/debug/deps/libnum_traits-38066099c85918d8.rmeta","--extern","png=/Users/marcpartensky/Programs/Rust/Pong-Tutorial/pong/target/rls/debug/deps/libpng-32ee8c55fb9fa303.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/marcpartensky/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/marcpartensky/Programs/Rust/Pong-Tutorial/pong/target/rls/debug/deps/libimage-e4ccea3c94bcb581.rmeta"},"prelude":{"crate_id":{"name":"image","disambiguator":[8987493345310585541,15599453513109364174]},"crate_root":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src","external_crates":[{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9176452395873514981,10525323411957323785]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","num":2,"id":{"name":"core","disambiguator":[15010738070622620763,9605760616786660431]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8211843569075862794,5370502913999467694]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5168977417888994485,12129851499920233632]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9254821246596336482,1562696929571001984]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4867494102928472883,16549916413327868340]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12208796569805280475,9421298070223625802]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[16776259526442764164,2692171601035033462]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[8506315589905780113,7752550639658555424]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6004073670142137807,10055010459345902388]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[13812981793209371227,10465105188798852626]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[12279896640040761358,16819944754252654372]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[502125910674001101,4874613814734389117]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","num":14,"id":{"name":"object","disambiguator":[6964077277237141888,7151316435171244180]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[5505266058476155326,9550778519957076375]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","num":16,"id":{"name":"num_traits","disambiguator":[2187919300340126041,15326872639173662768]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/decoder.rs","num":17,"id":{"name":"byteorder","disambiguator":[8100689518988960638,1706710057921452686]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","num":18,"id":{"name":"gif","disambiguator":[7584374974849420212,2758902774187060588]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","num":19,"id":{"name":"color_quant","disambiguator":[5913017604879052591,16011614591089837859]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","num":20,"id":{"name":"weezl","disambiguator":[2407607343720048586,1918124179607286839]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","num":21,"id":{"name":"num_rational","disambiguator":[17216135064323613916,17626132374345098875]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","num":22,"id":{"name":"num_integer","disambiguator":[15442726777171473026,4236330964141687349]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","num":23,"id":{"name":"jpeg_decoder","disambiguator":[9147064113414015420,8593524217276843277]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","num":24,"id":{"name":"rayon","disambiguator":[13482988502072394961,5341452013106807312]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","num":25,"id":{"name":"either","disambiguator":[6840162145648027142,11570858844429452840]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","num":26,"id":{"name":"rayon_core","disambiguator":[7906721944558906062,12822829303791109664]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","num":27,"id":{"name":"crossbeam_channel","disambiguator":[96482058019987782,10049745359990201099]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","num":28,"id":{"name":"cfg_if","disambiguator":[6571007890905016343,5363374063943722247]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","num":29,"id":{"name":"crossbeam_utils","disambiguator":[15920459522211560194,17488893388094700471]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","num":30,"id":{"name":"const_fn","disambiguator":[12119794419944630728,363572901849253722]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","num":31,"id":{"name":"lazy_static","disambiguator":[10699606976910705946,13251100683905982789]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","num":32,"id":{"name":"crossbeam_deque","disambiguator":[18277813011991207035,14348922882586262632]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","num":33,"id":{"name":"crossbeam_epoch","disambiguator":[6594559243876785556,16078967009545711141]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","num":34,"id":{"name":"scopeguard","disambiguator":[9225924681975274669,17251300067473531448]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","num":35,"id":{"name":"memoffset","disambiguator":[750861885489191778,8989627628777223909]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","num":36,"id":{"name":"num_cpus","disambiguator":[4085810363256194036,5847214990752377542]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","num":37,"id":{"name":"libc","disambiguator":[13590427990575096869,7285383817766672940]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","num":38,"id":{"name":"num_iter","disambiguator":[2888646180017252446,12935696569904960811]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","num":39,"id":{"name":"png","disambiguator":[8828557017916840014,17646141604630254962]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","num":40,"id":{"name":"bitflags","disambiguator":[16116468340896408149,12780401407780675886]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","num":41,"id":{"name":"deflate","disambiguator":[7207444767134470718,1456527242072854467]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","num":42,"id":{"name":"adler32","disambiguator":[11124242391470085160,17612107284133465246]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","num":43,"id":{"name":"crc32fast","disambiguator":[12661369090980535911,6349860293495720925]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","num":44,"id":{"name":"miniz_oxide","disambiguator":[2007018816125322066,6361282046468640186]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","num":45,"id":{"name":"bytemuck","disambiguator":[12894801332933928272,415272307425923105]}}],"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":0,"byte_end":12654,"line_start":1,"line_end":391,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":3108},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":3843,"byte_end":3852,"line_start":104,"line_end":104,"column_start":24,"column_end":33},"alias_span":null,"name":"ColorType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3147},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":3854,"byte_end":3871,"line_start":104,"line_end":104,"column_start":35,"column_end":52},"alias_span":null,"name":"ExtendedColorType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3571},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":3898,"byte_end":3902,"line_start":106,"line_end":106,"column_start":24,"column_end":28},"alias_span":null,"name":"Luma","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3572},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":3898,"byte_end":3902,"line_start":106,"line_end":106,"column_start":24,"column_end":28},"alias_span":null,"name":"Luma","value":"","parent":{"krate":0,"index":8}},{"kind":"Use","ref_id":{"krate":0,"index":3658},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":3904,"byte_end":3909,"line_start":106,"line_end":106,"column_start":30,"column_end":35},"alias_span":null,"name":"LumaA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3659},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":3904,"byte_end":3909,"line_start":106,"line_end":106,"column_start":30,"column_end":35},"alias_span":null,"name":"LumaA","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3513},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":3911,"byte_end":3914,"line_start":106,"line_end":106,"column_start":37,"column_end":40},"alias_span":null,"name":"Rgb","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3514},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":3911,"byte_end":3914,"line_start":106,"line_end":106,"column_start":37,"column_end":40},"alias_span":null,"name":"Rgb","value":"","parent":{"krate":0,"index":10}},{"kind":"Use","ref_id":{"krate":0,"index":3600},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":3916,"byte_end":3920,"line_start":106,"line_end":106,"column_start":42,"column_end":46},"alias_span":null,"name":"Rgba","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3601},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":3916,"byte_end":3920,"line_start":106,"line_end":106,"column_start":42,"column_end":46},"alias_span":null,"name":"Rgba","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":3542},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":3922,"byte_end":3925,"line_start":106,"line_end":106,"column_start":48,"column_end":51},"alias_span":null,"name":"Bgr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3543},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":3922,"byte_end":3925,"line_start":106,"line_end":106,"column_start":48,"column_end":51},"alias_span":null,"name":"Bgr","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":3629},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":3927,"byte_end":3931,"line_start":106,"line_end":106,"column_start":53,"column_end":57},"alias_span":null,"name":"Bgra","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3630},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":3927,"byte_end":3931,"line_start":106,"line_end":106,"column_start":53,"column_end":57},"alias_span":null,"name":"Bgra","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":2439},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":3958,"byte_end":3968,"line_start":108,"line_end":108,"column_start":24,"column_end":34},"alias_span":null,"name":"ImageError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":91},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":3970,"byte_end":3981,"line_start":108,"line_end":108,"column_start":36,"column_end":47},"alias_span":null,"name":"ImageResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2254},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":4008,"byte_end":4024,"line_start":110,"line_end":110,"column_start":24,"column_end":40},"alias_span":null,"name":"AnimationDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2280},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":4042,"byte_end":4054,"line_start":111,"line_end":111,"column_start":17,"column_end":29},"alias_span":null,"name":"GenericImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2267},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":4072,"byte_end":4088,"line_start":112,"line_end":112,"column_start":17,"column_end":33},"alias_span":null,"name":"GenericImageView","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2235},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":4106,"byte_end":4118,"line_start":113,"line_end":113,"column_start":17,"column_end":29},"alias_span":null,"name":"ImageDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2248},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":4136,"byte_end":4151,"line_start":114,"line_end":114,"column_start":17,"column_end":32},"alias_span":null,"name":"ImageDecoderExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2257},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":4169,"byte_end":4181,"line_start":115,"line_end":115,"column_start":17,"column_end":29},"alias_span":null,"name":"ImageEncoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3771},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":4199,"byte_end":4210,"line_start":116,"line_end":116,"column_start":17,"column_end":28},"alias_span":null,"name":"ImageFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3816},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":4228,"byte_end":4245,"line_start":117,"line_end":117,"column_start":17,"column_end":34},"alias_span":null,"name":"ImageOutputFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3843},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":4263,"byte_end":4271,"line_start":118,"line_end":118,"column_start":17,"column_end":25},"alias_span":null,"name":"Progress","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3858},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":4318,"byte_end":4324,"line_start":120,"line_end":120,"column_start":17,"column_end":23},"alias_span":null,"name":"Pixels","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2292},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":4342,"byte_end":4350,"line_start":121,"line_end":121,"column_start":17,"column_end":25},"alias_span":null,"name":"SubImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1823},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":4397,"byte_end":4411,"line_start":124,"line_end":124,"column_start":18,"column_end":32},"alias_span":null,"name":"GrayAlphaImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1822},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":4430,"byte_end":4439,"line_start":125,"line_end":125,"column_start":18,"column_end":27},"alias_span":null,"name":"GrayImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3077},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":4490,"byte_end":4501,"line_start":127,"line_end":127,"column_start":18,"column_end":29},"alias_span":null,"name":"ImageBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1820},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":4520,"byte_end":4528,"line_start":128,"line_end":128,"column_start":18,"column_end":26},"alias_span":null,"name":"RgbImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1821},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":4547,"byte_end":4556,"line_start":129,"line_end":129,"column_start":18,"column_end":27},"alias_span":null,"name":"RgbaImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2624},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":4581,"byte_end":4592,"line_start":131,"line_end":131,"column_start":22,"column_end":33},"alias_span":null,"name":"FlatSamples","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2340},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":4629,"byte_end":4644,"line_start":134,"line_end":134,"column_start":25,"column_end":40},"alias_span":null,"name":"EncodableLayout","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2346},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":4646,"byte_end":4655,"line_start":134,"line_end":134,"column_start":42,"column_end":51},"alias_span":null,"name":"Primitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2377},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":4657,"byte_end":4662,"line_start":134,"line_end":134,"column_start":53,"column_end":58},"alias_span":null,"name":"Pixel","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":519},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":4732,"byte_end":4744,"line_start":137,"line_end":137,"column_start":37,"column_end":49},"alias_span":null,"name":"guess_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":505},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":4746,"byte_end":4750,"line_start":137,"line_end":137,"column_start":51,"column_end":55},"alias_span":null,"name":"load","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2177},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":4779,"byte_end":4795,"line_start":138,"line_end":138,"column_start":27,"column_end":43},"alias_span":null,"name":"load_from_memory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2178},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":4797,"byte_end":4825,"line_start":138,"line_end":138,"column_start":45,"column_end":73},"alias_span":null,"name":"load_from_memory_with_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2169},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":4827,"byte_end":4831,"line_start":138,"line_end":138,"column_start":75,"column_end":79},"alias_span":null,"name":"open","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2173},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":4852,"byte_end":4863,"line_start":139,"line_end":139,"column_start":20,"column_end":31},"alias_span":null,"name":"save_buffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2175},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":4865,"byte_end":4888,"line_start":139,"line_end":139,"column_start":33,"column_end":56},"alias_span":null,"name":"save_buffer_with_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2171},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":4890,"byte_end":4906,"line_start":139,"line_end":139,"column_start":58,"column_end":74},"alias_span":null,"name":"image_dimensions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3738},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":4935,"byte_end":4947,"line_start":141,"line_end":141,"column_start":26,"column_end":38},"alias_span":null,"name":"DynamicImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3057},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":4977,"byte_end":4982,"line_start":143,"line_end":143,"column_start":28,"column_end":33},"alias_span":null,"name":"Delay","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3050},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":4984,"byte_end":4989,"line_start":143,"line_end":143,"column_start":35,"column_end":40},"alias_span":null,"name":"Frame","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1455},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":4991,"byte_end":4997,"line_start":143,"line_end":143,"column_start":42,"column_end":48},"alias_span":null,"name":"Frames","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1807},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":5220,"byte_end":5233,"line_start":152,"line_end":152,"column_start":9,"column_end":22},"alias_span":null,"name":"ConvertBuffer","value":"","parent":{"krate":0,"index":117}},{"kind":"Use","ref_id":{"krate":0,"index":1625},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":5243,"byte_end":5258,"line_start":153,"line_end":153,"column_start":9,"column_end":24},"alias_span":null,"name":"EnumeratePixels","value":"","parent":{"krate":0,"index":117}},{"kind":"Use","ref_id":{"krate":0,"index":1670},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":5268,"byte_end":5286,"line_start":154,"line_end":154,"column_start":9,"column_end":27},"alias_span":null,"name":"EnumeratePixelsMut","value":"","parent":{"krate":0,"index":117}},{"kind":"Use","ref_id":{"krate":0,"index":1648},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":5296,"byte_end":5309,"line_start":155,"line_end":155,"column_start":9,"column_end":22},"alias_span":null,"name":"EnumerateRows","value":"","parent":{"krate":0,"index":117}},{"kind":"Use","ref_id":{"krate":0,"index":1690},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":5319,"byte_end":5335,"line_start":156,"line_end":156,"column_start":9,"column_end":25},"alias_span":null,"name":"EnumerateRowsMut","value":"","parent":{"krate":0,"index":117}},{"kind":"Use","ref_id":{"krate":0,"index":1527},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":5345,"byte_end":5351,"line_start":157,"line_end":157,"column_start":9,"column_end":15},"alias_span":null,"name":"Pixels","value":"","parent":{"krate":0,"index":117}},{"kind":"Use","ref_id":{"krate":0,"index":1552},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":5361,"byte_end":5370,"line_start":158,"line_end":158,"column_start":9,"column_end":18},"alias_span":null,"name":"PixelsMut","value":"","parent":{"krate":0,"index":117}},{"kind":"Use","ref_id":{"krate":0,"index":1574},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":5380,"byte_end":5384,"line_start":159,"line_end":159,"column_start":9,"column_end":13},"alias_span":null,"name":"Rows","value":"","parent":{"krate":0,"index":117}},{"kind":"Use","ref_id":{"krate":0,"index":1601},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":5394,"byte_end":5401,"line_start":160,"line_end":160,"column_start":9,"column_end":16},"alias_span":null,"name":"RowsMut","value":"","parent":{"krate":0,"index":117}},{"kind":"Use","ref_id":{"krate":0,"index":2580},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/mod.rs","byte_start":30444,"byte_end":30448,"line_start":6,"line_end":6,"column_start":21,"column_end":25},"alias_span":null,"name":"Rect","value":"","parent":{"krate":0,"index":128}},{"kind":"Use","ref_id":{"krate":0,"index":2605},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":36101,"byte_end":36111,"line_start":9,"line_end":9,"column_start":23,"column_end":33},"alias_span":null,"name":"FilterType","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":2610},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":36149,"byte_end":36159,"line_start":11,"line_end":11,"column_start":36,"column_end":46},"alias_span":null,"name":"CatmullRom","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":2611},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":36149,"byte_end":36159,"line_start":11,"line_end":11,"column_start":36,"column_end":46},"alias_span":null,"name":"CatmullRom","value":"","parent":{"krate":0,"index":162}},{"kind":"Use","ref_id":{"krate":0,"index":2612},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":36161,"byte_end":36169,"line_start":11,"line_end":11,"column_start":48,"column_end":56},"alias_span":null,"name":"Gaussian","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":2613},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":36161,"byte_end":36169,"line_start":11,"line_end":11,"column_start":48,"column_end":56},"alias_span":null,"name":"Gaussian","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":2614},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":36171,"byte_end":36179,"line_start":11,"line_end":11,"column_start":58,"column_end":66},"alias_span":null,"name":"Lanczos3","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":2615},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":36171,"byte_end":36179,"line_start":11,"line_end":11,"column_start":58,"column_end":66},"alias_span":null,"name":"Lanczos3","value":"","parent":{"krate":0,"index":164}},{"kind":"Use","ref_id":{"krate":0,"index":2606},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":36181,"byte_end":36188,"line_start":11,"line_end":11,"column_start":68,"column_end":75},"alias_span":null,"name":"Nearest","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":2607},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":36181,"byte_end":36188,"line_start":11,"line_end":11,"column_start":68,"column_end":75},"alias_span":null,"name":"Nearest","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":2608},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":36190,"byte_end":36198,"line_start":11,"line_end":11,"column_start":77,"column_end":85},"alias_span":null,"name":"Triangle","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":2609},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":36190,"byte_end":36198,"line_start":11,"line_end":11,"column_start":77,"column_end":85},"alias_span":null,"name":"Triangle","value":"","parent":{"krate":0,"index":166}},{"kind":"Use","ref_id":{"krate":0,"index":222},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":36257,"byte_end":36272,"line_start":15,"line_end":15,"column_start":5,"column_end":20},"alias_span":null,"name":"flip_horizontal","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":234},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":36274,"byte_end":36298,"line_start":15,"line_end":15,"column_start":22,"column_end":46},"alias_span":null,"name":"flip_horizontal_in_place","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":224},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":36300,"byte_end":36313,"line_start":15,"line_end":15,"column_start":48,"column_end":61},"alias_span":null,"name":"flip_vertical","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":236},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":36315,"byte_end":36337,"line_start":15,"line_end":15,"column_start":63,"column_end":85},"alias_span":null,"name":"flip_vertical_in_place","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":209},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":36339,"byte_end":36348,"line_start":15,"line_end":15,"column_start":87,"column_end":96},"alias_span":null,"name":"rotate180","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":232},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":36354,"byte_end":36372,"line_start":16,"line_end":16,"column_start":5,"column_end":23},"alias_span":null,"name":"rotate180_in_place","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":211},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":36374,"byte_end":36383,"line_start":16,"line_end":16,"column_start":25,"column_end":34},"alias_span":null,"name":"rotate270","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":207},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":36385,"byte_end":36393,"line_start":16,"line_end":16,"column_start":36,"column_end":44},"alias_span":null,"name":"rotate90","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":216},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":36395,"byte_end":36407,"line_start":16,"line_end":16,"column_start":46,"column_end":58},"alias_span":null,"name":"rotate180_in","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":213},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":36409,"byte_end":36420,"line_start":16,"line_end":16,"column_start":60,"column_end":71},"alias_span":null,"name":"rotate90_in","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":219},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":36422,"byte_end":36434,"line_start":16,"line_end":16,"column_start":73,"column_end":85},"alias_span":null,"name":"rotate270_in","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":226},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":36436,"byte_end":36454,"line_start":16,"line_end":16,"column_start":87,"column_end":105},"alias_span":null,"name":"flip_horizontal_in","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":229},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":36456,"byte_end":36472,"line_start":16,"line_end":16,"column_start":107,"column_end":123},"alias_span":null,"name":"flip_vertical_in","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":392},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":36519,"byte_end":36523,"line_start":20,"line_end":20,"column_start":24,"column_end":28},"alias_span":null,"name":"blur","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":385},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":36525,"byte_end":36534,"line_start":20,"line_end":20,"column_start":30,"column_end":39},"alias_span":null,"name":"filter3x3","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":390},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":36536,"byte_end":36542,"line_start":20,"line_end":20,"column_start":41,"column_end":47},"alias_span":null,"name":"resize","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":362},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":36544,"byte_end":36553,"line_start":20,"line_end":20,"column_start":49,"column_end":58},"alias_span":null,"name":"thumbnail","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":395},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":36555,"byte_end":36564,"line_start":20,"line_end":20,"column_start":60,"column_end":69},"alias_span":null,"name":"unsharpen","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":266},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":36614,"byte_end":36622,"line_start":23,"line_end":23,"column_start":26,"column_end":34},"alias_span":null,"name":"brighten","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":261},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":36624,"byte_end":36632,"line_start":23,"line_end":23,"column_start":36,"column_end":44},"alias_span":null,"name":"contrast","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":307},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":36634,"byte_end":36640,"line_start":23,"line_end":23,"column_start":46,"column_end":52},"alias_span":null,"name":"dither","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":257},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":36642,"byte_end":36651,"line_start":23,"line_end":23,"column_start":54,"column_end":63},"alias_span":null,"name":"grayscale","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":272},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":36653,"byte_end":36662,"line_start":23,"line_end":23,"column_start":65,"column_end":74},"alias_span":null,"name":"huerotate","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":312},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":36664,"byte_end":36676,"line_start":23,"line_end":23,"column_start":76,"column_end":88},"alias_span":null,"name":"index_colors","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":259},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":36678,"byte_end":36684,"line_start":23,"line_end":23,"column_start":90,"column_end":96},"alias_span":null,"name":"invert","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":2600},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":36711,"byte_end":36718,"line_start":24,"line_end":24,"column_start":26,"column_end":33},"alias_span":null,"name":"BiLevel","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":2601},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":36711,"byte_end":36718,"line_start":24,"line_end":24,"column_start":26,"column_end":33},"alias_span":null,"name":"BiLevel","value":"","parent":{"krate":0,"index":195}},{"kind":"Use","ref_id":{"krate":0,"index":277},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":36720,"byte_end":36728,"line_start":24,"line_end":24,"column_start":35,"column_end":43},"alias_span":null,"name":"ColorMap","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":448},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/mod.rs","byte_start":100320,"byte_end":100326,"line_start":5,"line_end":5,"column_start":23,"column_end":29},"alias_span":null,"name":"Reader","value":"","parent":{"krate":0,"index":426}},{"kind":"Use","ref_id":{"krate":0,"index":815},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/mod.rs","byte_start":183477,"byte_end":183487,"line_start":10,"line_end":10,"column_start":24,"column_end":34},"alias_span":null,"name":"BmpDecoder","value":"","parent":{"krate":0,"index":704}},{"kind":"Use","ref_id":{"krate":0,"index":931},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/mod.rs","byte_start":183590,"byte_end":183600,"line_start":12,"line_end":12,"column_start":25,"column_end":35},"alias_span":null,"name":"BmpEncoder","value":"","parent":{"krate":0,"index":704}},{"kind":"Use","ref_id":{"krate":0,"index":935},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/mod.rs","byte_start":183602,"byte_end":183612,"line_start":12,"line_end":12,"column_start":37,"column_end":47},"alias_span":null,"name":"BMPEncoder","value":"","parent":{"krate":0,"index":704}},{"kind":"Use","ref_id":{"krate":0,"index":1085},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/mod.rs","byte_start":266540,"byte_end":266551,"line_start":10,"line_end":10,"column_start":24,"column_end":35},"alias_span":null,"name":"JpegDecoder","value":"","parent":{"krate":0,"index":1060}},{"kind":"Use","ref_id":{"krate":0,"index":1198},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/mod.rs","byte_start":266654,"byte_end":266665,"line_start":12,"line_end":12,"column_start":25,"column_end":36},"alias_span":null,"name":"JpegEncoder","value":"","parent":{"krate":0,"index":1060}},{"kind":"Use","ref_id":{"krate":0,"index":2983},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/mod.rs","byte_start":266667,"byte_end":266679,"line_start":12,"line_end":12,"column_start":38,"column_end":50},"alias_span":null,"name":"PixelDensity","value":"","parent":{"krate":0,"index":1060}},{"kind":"Use","ref_id":{"krate":0,"index":2965},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/mod.rs","byte_start":266681,"byte_end":266697,"line_start":12,"line_end":12,"column_start":52,"column_end":68},"alias_span":null,"name":"PixelDensityUnit","value":"","parent":{"krate":0,"index":1060}},{"kind":"Use","ref_id":{"krate":0,"index":1210},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/mod.rs","byte_start":266699,"byte_end":266710,"line_start":12,"line_end":12,"column_start":70,"column_end":81},"alias_span":null,"name":"JPEGEncoder","value":"","parent":{"krate":0,"index":1060}},{"kind":"Use","ref_id":{"krate":0,"index":935},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":8617,"byte_end":8627,"line_start":257,"line_end":257,"column_start":34,"column_end":44},"alias_span":null,"name":"BMPEncoder","value":"","parent":{"krate":0,"index":1423}},{"kind":"Use","ref_id":{"krate":0,"index":815},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":8629,"byte_end":8639,"line_start":257,"line_end":257,"column_start":46,"column_end":56},"alias_span":null,"name":"BmpDecoder","value":"","parent":{"krate":0,"index":1423}},{"kind":"Use","ref_id":{"krate":0,"index":931},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":8641,"byte_end":8651,"line_start":257,"line_end":257,"column_start":58,"column_end":68},"alias_span":null,"name":"BmpEncoder","value":"","parent":{"krate":0,"index":1423}},{"kind":"Use","ref_id":{"krate":0,"index":1039},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":9482,"byte_end":9489,"line_start":285,"line_end":285,"column_start":34,"column_end":41},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":1428}},{"kind":"Use","ref_id":{"krate":0,"index":991},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":9491,"byte_end":9501,"line_start":285,"line_end":285,"column_start":43,"column_end":53},"alias_span":null,"name":"GifDecoder","value":"","parent":{"krate":0,"index":1428}},{"kind":"Use","ref_id":{"krate":0,"index":1035},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":9503,"byte_end":9513,"line_start":285,"line_end":285,"column_start":55,"column_end":65},"alias_span":null,"name":"GifEncoder","value":"","parent":{"krate":0,"index":1428}},{"kind":"Use","ref_id":{"krate":0,"index":997},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":9515,"byte_end":9524,"line_start":285,"line_end":285,"column_start":67,"column_end":76},"alias_span":null,"name":"GifReader","value":"","parent":{"krate":0,"index":1428}},{"kind":"Use","ref_id":{"krate":0,"index":1210},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":10371,"byte_end":10382,"line_start":311,"line_end":311,"column_start":9,"column_end":20},"alias_span":null,"name":"JPEGEncoder","value":"","parent":{"krate":0,"index":1434}},{"kind":"Use","ref_id":{"krate":0,"index":1085},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":10384,"byte_end":10395,"line_start":311,"line_end":311,"column_start":22,"column_end":33},"alias_span":null,"name":"JpegDecoder","value":"","parent":{"krate":0,"index":1434}},{"kind":"Use","ref_id":{"krate":0,"index":1198},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":10397,"byte_end":10408,"line_start":311,"line_end":311,"column_start":35,"column_end":46},"alias_span":null,"name":"JpegEncoder","value":"","parent":{"krate":0,"index":1434}},{"kind":"Use","ref_id":{"krate":0,"index":2983},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":10410,"byte_end":10422,"line_start":311,"line_end":311,"column_start":48,"column_end":60},"alias_span":null,"name":"PixelDensity","value":"","parent":{"krate":0,"index":1434}},{"kind":"Use","ref_id":{"krate":0,"index":2965},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":10424,"byte_end":10440,"line_start":311,"line_end":311,"column_start":62,"column_end":78},"alias_span":null,"name":"PixelDensityUnit","value":"","parent":{"krate":0,"index":1434}},{"kind":"Use","ref_id":{"krate":0,"index":1368},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":10642,"byte_end":10653,"line_start":320,"line_end":320,"column_start":9,"column_end":20},"alias_span":null,"name":"ApngDecoder","value":"","parent":{"krate":0,"index":1441}},{"kind":"Use","ref_id":{"krate":0,"index":1399},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":10655,"byte_end":10665,"line_start":320,"line_end":320,"column_start":22,"column_end":32},"alias_span":null,"name":"PNGEncoder","value":"","parent":{"krate":0,"index":1441}},{"kind":"Use","ref_id":{"krate":0,"index":1335},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":10667,"byte_end":10676,"line_start":320,"line_end":320,"column_start":34,"column_end":43},"alias_span":null,"name":"PNGReader","value":"","parent":{"krate":0,"index":1441}},{"kind":"Use","ref_id":{"krate":0,"index":1344},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":10678,"byte_end":10688,"line_start":320,"line_end":320,"column_start":45,"column_end":55},"alias_span":null,"name":"PngDecoder","value":"","parent":{"krate":0,"index":1441}},{"kind":"Use","ref_id":{"krate":0,"index":1394},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":10690,"byte_end":10700,"line_start":320,"line_end":320,"column_start":57,"column_end":67},"alias_span":null,"name":"PngEncoder","value":"","parent":{"krate":0,"index":1441}},{"kind":"Use","ref_id":{"krate":0,"index":1330},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":10702,"byte_end":10711,"line_start":320,"line_end":320,"column_start":69,"column_end":78},"alias_span":null,"name":"PngReader","value":"","parent":{"krate":0,"index":1441}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":0,"byte_end":12654,"line_start":1,"line_end":391,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":3921},{"krate":0,"index":9},{"krate":0,"index":3923},{"krate":0,"index":10},{"krate":0,"index":3925},{"krate":0,"index":11},{"krate":0,"index":3927},{"krate":0,"index":12},{"krate":0,"index":3929},{"krate":0,"index":13},{"krate":0,"index":3931},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":117},{"krate":0,"index":128},{"krate":0,"index":148},{"krate":0,"index":426},{"krate":0,"index":524},{"krate":0,"index":703},{"krate":0,"index":1423},{"krate":0,"index":1428},{"krate":0,"index":1434},{"krate":0,"index":1441},{"krate":0,"index":1449},{"krate":0,"index":1489},{"krate":0,"index":1830},{"krate":0,"index":2028},{"krate":0,"index":2180},{"krate":0,"index":2325},{"krate":0,"index":2423},{"krate":0,"index":3914},{"krate":0,"index":2438}],"decl_id":null,"docs":" # Overview","sig":null,"attributes":[{"value":"/ # Overview","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":0,"byte_end":14,"line_start":1,"line_end":1,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":15,"byte_end":18,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate provides native rust implementations of image encoding and decoding as well as some","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":19,"byte_end":117,"line_start":3,"line_end":3,"column_start":1,"column_end":99}},{"value":"/ basic image manipulation functions. Additional documentation can currently also be found in the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":118,"byte_end":217,"line_start":4,"line_end":4,"column_start":1,"column_end":100}},{"value":"/ [README.md file which is most easily viewed on","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":218,"byte_end":268,"line_start":5,"line_end":5,"column_start":1,"column_end":51}},{"value":"/ github](https://github.com/image-rs/image/blob/master/README.md).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":269,"byte_end":338,"line_start":6,"line_end":6,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":339,"byte_end":342,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ There are two core problems for which this library provides solutions: a unified interface for image","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":343,"byte_end":447,"line_start":8,"line_end":8,"column_start":1,"column_end":105}},{"value":"/ encodings and simple generic buffers for their content. It's possible to use either feature","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":448,"byte_end":543,"line_start":9,"line_end":9,"column_start":1,"column_end":96}},{"value":"/ without the other. The focus is on a small and stable set of common operations that can be","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":544,"byte_end":638,"line_start":10,"line_end":10,"column_start":1,"column_end":95}},{"value":"/ supplemented by other specialized crates. The library also prefers safe solutions with few","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":639,"byte_end":733,"line_start":11,"line_end":11,"column_start":1,"column_end":95}},{"value":"/ dependencies.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":734,"byte_end":751,"line_start":12,"line_end":12,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":752,"byte_end":755,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # High level API","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":756,"byte_end":776,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":777,"byte_end":780,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Load images using [`io::Reader`]:","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":781,"byte_end":818,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":819,"byte_end":822,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":823,"byte_end":841,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"/ # use std::io::Cursor;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":842,"byte_end":868,"line_start":19,"line_end":19,"column_start":1,"column_end":27}},{"value":"/ use image::io::Reader as ImageReader;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":869,"byte_end":910,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ # fn main() -> Result<(), image::ImageError> {","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":911,"byte_end":961,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/ # let bytes = vec![0u8];","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":962,"byte_end":990,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":991,"byte_end":994,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let img = ImageReader::open(\"myimage.png\")?.decode()?;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":995,"byte_end":1053,"line_start":24,"line_end":24,"column_start":1,"column_end":59}},{"value":"/ let img2 = ImageReader::new(Cursor::new(bytes)).decode()?;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":1054,"byte_end":1116,"line_start":25,"line_end":25,"column_start":1,"column_end":63}},{"value":"/ # Ok(())","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":1117,"byte_end":1129,"line_start":26,"line_end":26,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":1130,"byte_end":1137,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":1138,"byte_end":1145,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":1146,"byte_end":1149,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ And save them using [`save`] or [`write_to`] methods:","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":1150,"byte_end":1207,"line_start":30,"line_end":30,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":1208,"byte_end":1211,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":1212,"byte_end":1230,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"/ # use std::io::Write;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":1231,"byte_end":1256,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"/ # use image::ImageOutputFormat;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":1257,"byte_end":1292,"line_start":34,"line_end":34,"column_start":1,"column_end":36}},{"value":"/ # use image::DynamicImage;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":1293,"byte_end":1323,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/ # #[cfg(feature = \"png\")]","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":1324,"byte_end":1353,"line_start":36,"line_end":36,"column_start":1,"column_end":30}},{"value":"/ # fn main() -> Result<(), image::ImageError> {","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":1354,"byte_end":1404,"line_start":37,"line_end":37,"column_start":1,"column_end":51}},{"value":"/ # let img: DynamicImage = unimplemented!();","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":1405,"byte_end":1452,"line_start":38,"line_end":38,"column_start":1,"column_end":48}},{"value":"/ # let img2: DynamicImage = unimplemented!();","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":1453,"byte_end":1501,"line_start":39,"line_end":39,"column_start":1,"column_end":49}},{"value":"/ img.save(\"empty.jpg\")?;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":1502,"byte_end":1529,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":1530,"byte_end":1533,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ let mut bytes: Vec<u8> = Vec::new();","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":1534,"byte_end":1574,"line_start":42,"line_end":42,"column_start":1,"column_end":41}},{"value":"/ img2.write_to(&mut bytes, image::ImageOutputFormat::Png)?;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":1575,"byte_end":1637,"line_start":43,"line_end":43,"column_start":1,"column_end":63}},{"value":"/ # Ok(())","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":1638,"byte_end":1650,"line_start":44,"line_end":44,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":1651,"byte_end":1658,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(not(feature = \"png\"))] fn main() {}","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":1659,"byte_end":1706,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":1707,"byte_end":1714,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":1715,"byte_end":1718,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ With default features, the crate includes support for [many common image formats](codecs/index.html#supported-formats).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":1719,"byte_end":1842,"line_start":49,"line_end":49,"column_start":1,"column_end":124}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":1843,"byte_end":1846,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ [`save`]: enum.DynamicImage.html#method.save","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":1847,"byte_end":1895,"line_start":51,"line_end":51,"column_start":1,"column_end":49}},{"value":"/ [`write_to`]: enum.DynamicImage.html#method.write_to","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":1896,"byte_end":1952,"line_start":52,"line_end":52,"column_start":1,"column_end":57}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":1953,"byte_end":1994,"line_start":53,"line_end":53,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":1995,"byte_end":1998,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # Image buffers","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":1999,"byte_end":2018,"line_start":55,"line_end":55,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":2019,"byte_end":2022,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ The two main types for storing images:","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":2023,"byte_end":2065,"line_start":57,"line_end":57,"column_start":1,"column_end":43}},{"value":"/ * [`ImageBuffer`] which holds statically typed image contents.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":2066,"byte_end":2132,"line_start":58,"line_end":58,"column_start":1,"column_end":67}},{"value":"/ * [`DynamicImage`] which is an enum over the supported ImageBuffer formats","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":2133,"byte_end":2211,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/     and supports conversions between them.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":2212,"byte_end":2258,"line_start":60,"line_end":60,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":2259,"byte_end":2262,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ As well as a few more specialized options:","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":2263,"byte_end":2309,"line_start":62,"line_end":62,"column_start":1,"column_end":47}},{"value":"/ * [`GenericImage`] trait for a mutable image buffer.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":2310,"byte_end":2366,"line_start":63,"line_end":63,"column_start":1,"column_end":57}},{"value":"/ * [`GenericImageView`] trait for read only references to a GenericImage.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":2367,"byte_end":2443,"line_start":64,"line_end":64,"column_start":1,"column_end":77}},{"value":"/ * [`flat`] module containing types for interoperability with generic channel","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":2444,"byte_end":2524,"line_start":65,"line_end":65,"column_start":1,"column_end":81}},{"value":"/     matrices and foreign interfaces.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":2525,"byte_end":2565,"line_start":66,"line_end":66,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":2566,"byte_end":2569,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ [`GenericImageView`]: trait.GenericImageView.html","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":2570,"byte_end":2623,"line_start":68,"line_end":68,"column_start":1,"column_end":54}},{"value":"/ [`GenericImage`]: trait.GenericImage.html","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":2624,"byte_end":2669,"line_start":69,"line_end":69,"column_start":1,"column_end":46}},{"value":"/ [`ImageBuffer`]: struct.ImageBuffer.html","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":2670,"byte_end":2714,"line_start":70,"line_end":70,"column_start":1,"column_end":45}},{"value":"/ [`DynamicImage`]: enum.DynamicImage.html","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":2715,"byte_end":2759,"line_start":71,"line_end":71,"column_start":1,"column_end":45}},{"value":"/ [`flat`]: flat/index.html","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":2760,"byte_end":2789,"line_start":72,"line_end":72,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":2790,"byte_end":2793,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ # Low level encoding/decoding API","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":2794,"byte_end":2831,"line_start":74,"line_end":74,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":2832,"byte_end":2835,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ The [`ImageDecoder`] and [`ImageDecoderExt`] traits are implemented for many image file","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":2836,"byte_end":2927,"line_start":76,"line_end":76,"column_start":1,"column_end":92}},{"value":"/ formats. They decode image data by directly on raw byte slices. Given an ImageDecoder, you can","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":2928,"byte_end":3026,"line_start":77,"line_end":77,"column_start":1,"column_end":99}},{"value":"/ produce a DynamicImage via [`DynamicImage::from_decoder`].","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":3027,"byte_end":3089,"line_start":78,"line_end":78,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":3090,"byte_end":3093,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ [`ImageEncoder`] provides the analogous functionality for encoding image data.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":3094,"byte_end":3176,"line_start":80,"line_end":80,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":3177,"byte_end":3180,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ [`DynamicImage::from_decoder`]: enum.DynamicImage.html#method.from_decoder","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":3181,"byte_end":3259,"line_start":82,"line_end":82,"column_start":1,"column_end":79}},{"value":"/ [`ImageDecoderExt`]: trait.ImageDecoderExt.html","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":3260,"byte_end":3311,"line_start":83,"line_end":83,"column_start":1,"column_end":52}},{"value":"/ [`ImageDecoder`]: trait.ImageDecoder.html","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":3312,"byte_end":3357,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"/ [`ImageEncoder`]: trait.ImageEncoder.html","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":3358,"byte_end":3403,"line_start":85,"line_end":85,"column_start":1,"column_end":46}},{"value":"warn(missing_docs)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":3404,"byte_end":3426,"line_start":86,"line_end":86,"column_start":1,"column_end":23}},{"value":"warn(unused_qualifications)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":3427,"byte_end":3458,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"deny(unreachable_pub)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":3459,"byte_end":3484,"line_start":88,"line_end":88,"column_start":1,"column_end":26}},{"value":"deny(deprecated)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":3485,"byte_end":3505,"line_start":89,"line_end":89,"column_start":1,"column_end":21}},{"value":"deny(missing_copy_implementations)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":3506,"byte_end":3544,"line_start":90,"line_end":90,"column_start":1,"column_end":39}},{"value":"allow(clippy :: many_single_char_names)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":3642,"byte_end":3683,"line_start":93,"line_end":93,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":55},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":2439},{"krate":0,"index":2458},{"krate":0,"index":2460},{"krate":0,"index":2463},{"krate":0,"index":2465},{"krate":0,"index":2487},{"krate":0,"index":2485},{"krate":0,"index":2482},{"krate":0,"index":2478},{"krate":0,"index":2479},{"krate":0,"index":2489},{"krate":0,"index":2492},{"krate":0,"index":2494},{"krate":0,"index":2497},{"krate":0,"index":2499},{"krate":0,"index":2521},{"krate":0,"index":2519},{"krate":0,"index":2516},{"krate":0,"index":2512},{"krate":0,"index":2513},{"krate":0,"index":2523},{"krate":0,"index":2526},{"krate":0,"index":2528},{"krate":0,"index":2530},{"krate":0,"index":2532},{"krate":0,"index":2552},{"krate":0,"index":2550},{"krate":0,"index":2547},{"krate":0,"index":2543},{"krate":0,"index":2544},{"krate":0,"index":2540},{"krate":0,"index":2541},{"krate":0,"index":2554},{"krate":0,"index":2578},{"krate":0,"index":2576},{"krate":0,"index":2573},{"krate":0,"index":2569},{"krate":0,"index":2570},{"krate":0,"index":63},{"krate":0,"index":67},{"krate":0,"index":72},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":85},{"krate":0,"index":87},{"krate":0,"index":89},{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":115}],"decl_id":null,"docs":" Contains detailed error representation.","sig":null,"attributes":[{"value":"/ Contains detailed error representation.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":12656,"byte_end":12699,"line_start":1,"line_end":1,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":12700,"byte_end":12703,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ See the main [`ImageError`] which contains a variant for each specialized error type. The","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":12704,"byte_end":12797,"line_start":3,"line_end":3,"column_start":1,"column_end":94}},{"value":"/ subtypes used in each variant are opaque by design. They can be roughly inspected through their","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":12798,"byte_end":12897,"line_start":4,"line_end":4,"column_start":1,"column_end":100}},{"value":"/ respective `kind` methods which work similar to `std::io::Error::kind`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":12898,"byte_end":12973,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":12974,"byte_end":12977,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The error interface makes it possible to inspect the error of an underlying decoder or encoder,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":12978,"byte_end":13077,"line_start":7,"line_end":7,"column_start":1,"column_end":100}},{"value":"/ through the `Error::source` method. Note that this is not part of the stable interface and you","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":13078,"byte_end":13176,"line_start":8,"line_end":8,"column_start":1,"column_end":99}},{"value":"/ may not rely on a particular error value for a particular operation. This means mainly that","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":13177,"byte_end":13272,"line_start":9,"line_end":9,"column_start":1,"column_end":96}},{"value":"/ `image` does not promise to remain on a particular version of its underlying decoders but if","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":13273,"byte_end":13369,"line_start":10,"line_end":10,"column_start":1,"column_end":97}},{"value":"/ you ensure to use the same version of the dependency (or at least of the error type) through","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":13370,"byte_end":13466,"line_start":11,"line_end":11,"column_start":1,"column_end":97}},{"value":"/ external means then you could inspect the error type in slightly more detail.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":13467,"byte_end":13548,"line_start":12,"line_end":12,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":13549,"byte_end":13552,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`ImageError`]: enum.ImageError.html","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":13553,"byte_end":13593,"line_start":14,"line_end":14,"column_start":1,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2440},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":14305,"byte_end":14313,"line_start":34,"line_end":34,"column_start":5,"column_end":13},"name":"Decoding","qualname":"::error::ImageError::Decoding","value":"ImageError::Decoding(DecodingError)","parent":{"krate":0,"index":2439},"children":[],"decl_id":null,"docs":" An error was encountered while decoding.","sig":null,"attributes":[{"value":"/ An error was encountered while decoding.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":14022,"byte_end":14066,"line_start":29,"line_end":29,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":14071,"byte_end":14074,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This means that the input data did not conform to the specification of some image format,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":14079,"byte_end":14172,"line_start":31,"line_end":31,"column_start":5,"column_end":98}},{"value":"/ or that no format could be determined, or that it did not match format specific","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":14177,"byte_end":14260,"line_start":32,"line_end":32,"column_start":5,"column_end":88}},{"value":"/ requirements set by the caller.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":14265,"byte_end":14300,"line_start":33,"line_end":33,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2443},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":14699,"byte_end":14707,"line_start":42,"line_end":42,"column_start":5,"column_end":13},"name":"Encoding","qualname":"::error::ImageError::Encoding","value":"ImageError::Encoding(EncodingError)","parent":{"krate":0,"index":2439},"children":[],"decl_id":null,"docs":" An error was encountered while encoding.","sig":null,"attributes":[{"value":"/ An error was encountered while encoding.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":14335,"byte_end":14379,"line_start":36,"line_end":36,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":14384,"byte_end":14387,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ The input image can not be encoded with the chosen format, for example because the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":14392,"byte_end":14478,"line_start":38,"line_end":38,"column_start":5,"column_end":91}},{"value":"/ specification has no representation for its color space or because a necessary conversion","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":14483,"byte_end":14576,"line_start":39,"line_end":39,"column_start":5,"column_end":98}},{"value":"/ is ambiguous. In some cases it might also happen that the dimensions can not be used with","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":14581,"byte_end":14674,"line_start":40,"line_end":40,"column_start":5,"column_end":98}},{"value":"/ the format.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":14679,"byte_end":14694,"line_start":41,"line_end":41,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2446},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":14947,"byte_end":14956,"line_start":48,"line_end":48,"column_start":5,"column_end":14},"name":"Parameter","qualname":"::error::ImageError::Parameter","value":"ImageError::Parameter(ParameterError)","parent":{"krate":0,"index":2439},"children":[],"decl_id":null,"docs":" An error was encountered in input arguments.","sig":null,"attributes":[{"value":"/ An error was encountered in input arguments.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":14729,"byte_end":14777,"line_start":44,"line_end":44,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":14782,"byte_end":14785,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This is a catch-all case for strictly internal operations such as scaling, conversions,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":14790,"byte_end":14881,"line_start":46,"line_end":46,"column_start":5,"column_end":96}},{"value":"/ etc. that involve no external format specifications.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":14886,"byte_end":14942,"line_start":47,"line_end":47,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2449},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":15216,"byte_end":15222,"line_start":54,"line_end":54,"column_start":5,"column_end":11},"name":"Limits","qualname":"::error::ImageError::Limits","value":"ImageError::Limits(LimitError)","parent":{"krate":0,"index":2439},"children":[],"decl_id":null,"docs":" Completing the operation would have required more resources than allowed.","sig":null,"attributes":[{"value":"/ Completing the operation would have required more resources than allowed.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":14979,"byte_end":15056,"line_start":50,"line_end":50,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":15061,"byte_end":15064,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Errors of this type are limits set by the user or environment, *not* inherent in a specific","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":15069,"byte_end":15164,"line_start":52,"line_end":52,"column_start":5,"column_end":100}},{"value":"/ format or operation that was executed.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":15169,"byte_end":15211,"line_start":53,"line_end":53,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2452},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":15560,"byte_end":15571,"line_start":62,"line_end":62,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::error::ImageError::Unsupported","value":"ImageError::Unsupported(UnsupportedError)","parent":{"krate":0,"index":2439},"children":[],"decl_id":null,"docs":" An operation can not be completed by the chosen abstraction.","sig":null,"attributes":[{"value":"/ An operation can not be completed by the chosen abstraction.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":15241,"byte_end":15305,"line_start":56,"line_end":56,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":15310,"byte_end":15313,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This means that it might be possible for the operation to succeed in general but","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":15318,"byte_end":15402,"line_start":58,"line_end":58,"column_start":5,"column_end":89}},{"value":"/ * it requires a disabled feature,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":15407,"byte_end":15444,"line_start":59,"line_end":59,"column_start":5,"column_end":42}},{"value":"/ * the implementation does not yet exist, or","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":15449,"byte_end":15496,"line_start":60,"line_end":60,"column_start":5,"column_end":52}},{"value":"/ * no abstraction for a lower level could be found.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":15501,"byte_end":15555,"line_start":61,"line_end":61,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2455},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":15662,"byte_end":15669,"line_start":65,"line_end":65,"column_start":5,"column_end":12},"name":"IoError","qualname":"::error::ImageError::IoError","value":"ImageError::IoError(io::Error)","parent":{"krate":0,"index":2439},"children":[],"decl_id":null,"docs":" An error occurred while interacting with the environment.\n","sig":null,"attributes":[{"value":"/ An error occurred while interacting with the environment.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":15596,"byte_end":15657,"line_start":64,"line_end":64,"column_start":5,"column_end":66}}]},{"kind":"Enum","id":{"krate":0,"index":2439},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":14005,"byte_end":14015,"line_start":28,"line_end":28,"column_start":10,"column_end":20},"name":"ImageError","qualname":"::error::ImageError","value":"pub enum ImageError {\n\n    /// An error was encountered while decoding.\n    ///\n    /// This means that the input data did not conform to the specification of some image format,\n    /// or that no format could be determined, or that it did not match format specific\n    /// requirements set by the caller.\n    Decoding(DecodingError),\n\n    /// An error was encountered while encoding.\n    ///\n    /// The input image can not be encoded with the chosen format, for example because the\n    /// specification has no representation for its color space or because a necessary conversion\n    /// is ambiguous. In some cases it might also happen that the dimensions can not be used with\n    /// the format.\n    Encoding(EncodingError),\n\n    /// An error was encountered in input arguments.\n    ///\n    /// This is a catch-all case for strictly internal operations such as scaling, conversions,\n    /// etc. that involve no external format specifications.\n    Parameter(ParameterError),\n\n    /// Completing the operation would have required more resources than allowed.\n    ///\n    /// Errors of this type are limits set by the user or environment, *not* inherent in a specific\n    /// format or operation that was executed.\n    Limits(LimitError),\n\n    /// An operation can not be completed by the chosen abstraction.\n    ///\n    /// This means that it might be possible for the operation to succeed in general but\n    /// * it requires a disabled feature,\n    /// * the implementation does not yet exist, or\n    /// * no abstraction for a lower level could be found.\n    Unsupported(UnsupportedError),\n\n    /// An error occurred while interacting with the environment.\n    IoError(io::Error),\n}","parent":null,"children":[{"krate":0,"index":2440},{"krate":0,"index":2443},{"krate":0,"index":2446},{"krate":0,"index":2449},{"krate":0,"index":2452},{"krate":0,"index":2455}],"decl_id":null,"docs":" The generic error type for image operations.","sig":null,"attributes":[{"value":"/ The generic error type for image operations.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":13747,"byte_end":13795,"line_start":23,"line_end":23,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":13796,"byte_end":13799,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This high level enum allows, by variant matching, a rough separation of concerns between","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":13800,"byte_end":13892,"line_start":25,"line_end":25,"column_start":1,"column_end":93}},{"value":"/ underlying IO, the caller, format specifications, and the `image` implementation.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":13893,"byte_end":13978,"line_start":26,"line_end":26,"column_start":1,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":2460},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":15901,"byte_end":15917,"line_start":74,"line_end":74,"column_start":12,"column_end":28},"name":"UnsupportedError","qualname":"::error::UnsupportedError","value":"UnsupportedError {  }","parent":null,"children":[{"krate":0,"index":2461},{"krate":0,"index":2462}],"decl_id":null,"docs":" The implementation for an operation was not provided.","sig":null,"attributes":[{"value":"/ The implementation for an operation was not provided.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":15685,"byte_end":15742,"line_start":68,"line_end":68,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":15743,"byte_end":15746,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ See the variant [`Unsupported`] for more documentation.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":15747,"byte_end":15806,"line_start":70,"line_end":70,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":15807,"byte_end":15810,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ [`Unsupported`]: enum.ImageError.html#variant.Unsupported","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":15811,"byte_end":15872,"line_start":72,"line_end":72,"column_start":1,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2466},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":16156,"byte_end":16161,"line_start":83,"line_end":83,"column_start":5,"column_end":10},"name":"Color","qualname":"::error::UnsupportedErrorKind::Color","value":"UnsupportedErrorKind::Color(ExtendedColorType)","parent":{"krate":0,"index":2465},"children":[],"decl_id":null,"docs":" The required color type can not be handled.\n","sig":null,"attributes":[{"value":"/ The required color type can not be handled.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":16104,"byte_end":16151,"line_start":82,"line_end":82,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2469},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":16228,"byte_end":16234,"line_start":85,"line_end":85,"column_start":5,"column_end":11},"name":"Format","qualname":"::error::UnsupportedErrorKind::Format","value":"UnsupportedErrorKind::Format(ImageFormatHint)","parent":{"krate":0,"index":2465},"children":[],"decl_id":null,"docs":" An image format is not supported.\n","sig":null,"attributes":[{"value":"/ An image format is not supported.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":16186,"byte_end":16223,"line_start":84,"line_end":84,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2472},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":16378,"byte_end":16392,"line_start":88,"line_end":88,"column_start":5,"column_end":19},"name":"GenericFeature","qualname":"::error::UnsupportedErrorKind::GenericFeature","value":"UnsupportedErrorKind::GenericFeature(String)","parent":{"krate":0,"index":2465},"children":[],"decl_id":null,"docs":" Some feature specified by string.\n This is discouraged and is likely to get deprecated (but not removed).\n","sig":null,"attributes":[{"value":"/ Some feature specified by string.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":16257,"byte_end":16294,"line_start":86,"line_end":86,"column_start":5,"column_end":42}},{"value":"/ This is discouraged and is likely to get deprecated (but not removed).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":16299,"byte_end":16373,"line_start":87,"line_end":87,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2475},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":16425,"byte_end":16440,"line_start":90,"line_end":90,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::error::UnsupportedErrorKind::__NonExhaustive","value":"UnsupportedErrorKind::__NonExhaustive(NonExhaustiveMarker)","parent":{"krate":0,"index":2465},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2465},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":16077,"byte_end":16097,"line_start":81,"line_end":81,"column_start":10,"column_end":30},"name":"UnsupportedErrorKind","qualname":"::error::UnsupportedErrorKind","value":"pub enum UnsupportedErrorKind {\n\n    /// The required color type can not be handled.\n    Color(ExtendedColorType),\n\n    /// An image format is not supported.\n    Format(ImageFormatHint),\n\n    /// Some feature specified by string.\n    /// This is discouraged and is likely to get deprecated (but not removed).\n    GenericFeature(String),\n\n    #[doc(hidden)]\n    __NonExhaustive(NonExhaustiveMarker),\n}","parent":null,"children":[{"krate":0,"index":2466},{"krate":0,"index":2469},{"krate":0,"index":2472},{"krate":0,"index":2475}],"decl_id":null,"docs":" Details what feature is not supported.\n","sig":null,"attributes":[{"value":"/ Details what feature is not supported.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":15984,"byte_end":16026,"line_start":79,"line_end":79,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":2489},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":16759,"byte_end":16772,"line_start":100,"line_end":100,"column_start":12,"column_end":25},"name":"EncodingError","qualname":"::error::EncodingError","value":"EncodingError {  }","parent":null,"children":[{"krate":0,"index":2490},{"krate":0,"index":2491}],"decl_id":null,"docs":" An error was encountered while encoding an image.","sig":null,"attributes":[{"value":"/ An error was encountered while encoding an image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":16466,"byte_end":16519,"line_start":93,"line_end":93,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":16520,"byte_end":16523,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ This is used as an opaque representation for the [`ImageError::Encoding`] variant. See its","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":16524,"byte_end":16618,"line_start":95,"line_end":95,"column_start":1,"column_end":95}},{"value":"/ documentation for more information.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":16619,"byte_end":16658,"line_start":96,"line_end":96,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":16659,"byte_end":16662,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ [`ImageError::Encoding`]: enum.ImageError.html#variant.Encoding","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":16663,"byte_end":16730,"line_start":98,"line_end":98,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":2494},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":17154,"byte_end":17168,"line_start":113,"line_end":113,"column_start":12,"column_end":26},"name":"ParameterError","qualname":"::error::ParameterError","value":"ParameterError {  }","parent":null,"children":[{"krate":0,"index":2495},{"krate":0,"index":2496}],"decl_id":null,"docs":" An error was encountered in inputs arguments.","sig":null,"attributes":[{"value":"/ An error was encountered in inputs arguments.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":16862,"byte_end":16911,"line_start":106,"line_end":106,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":16912,"byte_end":16915,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ This is used as an opaque representation for the [`ImageError::Parameter`] variant. See its","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":16916,"byte_end":17011,"line_start":108,"line_end":108,"column_start":1,"column_end":96}},{"value":"/ documentation for more information.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":17012,"byte_end":17051,"line_start":109,"line_end":109,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":17052,"byte_end":17055,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ [`ImageError::Parameter`]: enum.ImageError.html#variant.Parameter","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":17056,"byte_end":17125,"line_start":111,"line_end":111,"column_start":1,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2500},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":17416,"byte_end":17433,"line_start":122,"line_end":122,"column_start":5,"column_end":22},"name":"DimensionMismatch","qualname":"::error::ParameterErrorKind::DimensionMismatch","value":"ParameterErrorKind::DimensionMismatch","parent":{"krate":0,"index":2499},"children":[],"decl_id":null,"docs":" The dimensions passed are wrong.\n","sig":null,"attributes":[{"value":"/ The dimensions passed are wrong.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":17375,"byte_end":17411,"line_start":121,"line_end":121,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2502},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":17531,"byte_end":17544,"line_start":124,"line_end":124,"column_start":5,"column_end":18},"name":"FailedAlready","qualname":"::error::ParameterErrorKind::FailedAlready","value":"ParameterErrorKind::FailedAlready","parent":{"krate":0,"index":2499},"children":[],"decl_id":null,"docs":" Repeated an operation for which error that could not be cloned was emitted already.\n","sig":null,"attributes":[{"value":"/ Repeated an operation for which error that could not be cloned was emitted already.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":17439,"byte_end":17526,"line_start":123,"line_end":123,"column_start":5,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2504},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":17672,"byte_end":17679,"line_start":127,"line_end":127,"column_start":5,"column_end":12},"name":"Generic","qualname":"::error::ParameterErrorKind::Generic","value":"ParameterErrorKind::Generic(String)","parent":{"krate":0,"index":2499},"children":[],"decl_id":null,"docs":" A string describing the parameter.\n This is discouraged and is likely to get deprecated (but not removed).\n","sig":null,"attributes":[{"value":"/ A string describing the parameter.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":17550,"byte_end":17588,"line_start":125,"line_end":125,"column_start":5,"column_end":43}},{"value":"/ This is discouraged and is likely to get deprecated (but not removed).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":17593,"byte_end":17667,"line_start":126,"line_end":126,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2507},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":17740,"byte_end":17750,"line_start":129,"line_end":129,"column_start":5,"column_end":15},"name":"NoMoreData","qualname":"::error::ParameterErrorKind::NoMoreData","value":"ParameterErrorKind::NoMoreData","parent":{"krate":0,"index":2499},"children":[],"decl_id":null,"docs":" The end of the image has been reached.\n","sig":null,"attributes":[{"value":"/ The end of the image has been reached.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":17693,"byte_end":17735,"line_start":128,"line_end":128,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2509},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":17834,"byte_end":17849,"line_start":132,"line_end":132,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::error::ParameterErrorKind::__NonExhaustive","value":"ParameterErrorKind::__NonExhaustive(NonExhaustiveMarker)","parent":{"krate":0,"index":2499},"children":[],"decl_id":null,"docs":" Do not use this, not part of stability guarantees.\n","sig":null,"attributes":[{"value":"/ Do not use this, not part of stability guarantees.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":17775,"byte_end":17829,"line_start":131,"line_end":131,"column_start":5,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":2499},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":17350,"byte_end":17368,"line_start":120,"line_end":120,"column_start":10,"column_end":28},"name":"ParameterErrorKind","qualname":"::error::ParameterErrorKind","value":"pub enum ParameterErrorKind {\n\n    /// The dimensions passed are wrong.\n    DimensionMismatch,\n\n    /// Repeated an operation for which error that could not be cloned was emitted already.\n    FailedAlready,\n\n    /// A string describing the parameter.\n    /// This is discouraged and is likely to get deprecated (but not removed).\n    Generic(String),\n\n    /// The end of the image has been reached.\n    NoMoreData,\n\n    #[doc(hidden)]\n    /// Do not use this, not part of stability guarantees.\n    __NonExhaustive(NonExhaustiveMarker),\n}","parent":null,"children":[{"krate":0,"index":2500},{"krate":0,"index":2502},{"krate":0,"index":2504},{"krate":0,"index":2507},{"krate":0,"index":2509}],"decl_id":null,"docs":" Details how a parameter is malformed.\n","sig":null,"attributes":[{"value":"/ Details how a parameter is malformed.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":17258,"byte_end":17299,"line_start":118,"line_end":118,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":2523},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":18168,"byte_end":18181,"line_start":142,"line_end":142,"column_start":12,"column_end":25},"name":"DecodingError","qualname":"::error::DecodingError","value":"DecodingError {  }","parent":null,"children":[{"krate":0,"index":2524},{"krate":0,"index":2525}],"decl_id":null,"docs":" An error was encountered while decoding an image.","sig":null,"attributes":[{"value":"/ An error was encountered while decoding an image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":17875,"byte_end":17928,"line_start":135,"line_end":135,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":17929,"byte_end":17932,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ This is used as an opaque representation for the [`ImageError::Decoding`] variant. See its","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":17933,"byte_end":18027,"line_start":137,"line_end":137,"column_start":1,"column_end":95}},{"value":"/ documentation for more information.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":18028,"byte_end":18067,"line_start":138,"line_end":138,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":18068,"byte_end":18071,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ [`ImageError::Decoding`]: enum.ImageError.html#variant.Decoding","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":18072,"byte_end":18139,"line_start":140,"line_end":140,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":2528},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":18581,"byte_end":18591,"line_start":154,"line_end":154,"column_start":12,"column_end":22},"name":"LimitError","qualname":"::error::LimitError","value":"LimitError {  }","parent":null,"children":[{"krate":0,"index":2529}],"decl_id":null,"docs":" Completing the operation would have required more resources than allowed.","sig":null,"attributes":[{"value":"/ Completing the operation would have required more resources than allowed.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":18270,"byte_end":18347,"line_start":147,"line_end":147,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":18348,"byte_end":18351,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ This is used as an opaque representation for the [`ImageError::Limits`] variant. See its","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":18352,"byte_end":18444,"line_start":149,"line_end":149,"column_start":1,"column_end":93}},{"value":"/ documentation for more information.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":18445,"byte_end":18484,"line_start":150,"line_end":150,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":18485,"byte_end":18488,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ [`ImageError::Limits`]: enum.ImageError.html#variant.Limits","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":18489,"byte_end":18552,"line_start":152,"line_end":152,"column_start":1,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2533},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":19123,"byte_end":19137,"line_start":167,"line_end":167,"column_start":5,"column_end":19},"name":"DimensionError","qualname":"::error::LimitErrorKind::DimensionError","value":"LimitErrorKind::DimensionError","parent":{"krate":0,"index":2532},"children":[],"decl_id":null,"docs":" The resulting image exceed dimension limits in either direction.\n","sig":null,"attributes":[{"value":"/ The resulting image exceed dimension limits in either direction.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":19050,"byte_end":19118,"line_start":166,"line_end":166,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2535},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":19221,"byte_end":19239,"line_start":169,"line_end":169,"column_start":5,"column_end":23},"name":"InsufficientMemory","qualname":"::error::LimitErrorKind::InsufficientMemory","value":"LimitErrorKind::InsufficientMemory","parent":{"krate":0,"index":2532},"children":[],"decl_id":null,"docs":" The operation would have performed an allocation larger than allowed.\n","sig":null,"attributes":[{"value":"/ The operation would have performed an allocation larger than allowed.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":19143,"byte_end":19216,"line_start":168,"line_end":168,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2537},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":19323,"byte_end":19338,"line_start":172,"line_end":172,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::error::LimitErrorKind::__NonExhaustive","value":"LimitErrorKind::__NonExhaustive(NonExhaustiveMarker)","parent":{"krate":0,"index":2532},"children":[],"decl_id":null,"docs":" Do not use this, not part of stability guarantees.\n","sig":null,"attributes":[{"value":"/ Do not use this, not part of stability guarantees.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":19264,"byte_end":19318,"line_start":171,"line_end":171,"column_start":5,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":2532},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":19029,"byte_end":19043,"line_start":165,"line_end":165,"column_start":10,"column_end":24},"name":"LimitErrorKind","qualname":"::error::LimitErrorKind","value":"pub enum LimitErrorKind {\n\n    /// The resulting image exceed dimension limits in either direction.\n    DimensionError,\n\n    /// The operation would have performed an allocation larger than allowed.\n    InsufficientMemory,\n\n    #[doc(hidden)]\n    /// Do not use this, not part of stability guarantees.\n    __NonExhaustive(NonExhaustiveMarker),\n}","parent":null,"children":[{"krate":0,"index":2533},{"krate":0,"index":2535},{"krate":0,"index":2537}],"decl_id":null,"docs":" Indicates the limit that prevented an operation from completing.","sig":null,"attributes":[{"value":"/ Indicates the limit that prevented an operation from completing.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":18662,"byte_end":18730,"line_start":159,"line_end":159,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":18731,"byte_end":18734,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ Note that this enumeration is not exhaustive and may in the future be extended to provide more","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":18735,"byte_end":18833,"line_start":161,"line_end":161,"column_start":1,"column_end":99}},{"value":"/ detailed information or to incorporate other resources types.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":18834,"byte_end":18899,"line_start":162,"line_end":162,"column_start":1,"column_end":66}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":18945,"byte_end":18983,"line_start":164,"line_end":164,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2555},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":19525,"byte_end":19530,"line_start":179,"line_end":179,"column_start":5,"column_end":10},"name":"Exact","qualname":"::error::ImageFormatHint::Exact","value":"ImageFormatHint::Exact(ImageFormat)","parent":{"krate":0,"index":2554},"children":[],"decl_id":null,"docs":" The format is known exactly.\n","sig":null,"attributes":[{"value":"/ The format is known exactly.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":19488,"byte_end":19520,"line_start":178,"line_end":178,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2558},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":19598,"byte_end":19602,"line_start":182,"line_end":182,"column_start":5,"column_end":9},"name":"Name","qualname":"::error::ImageFormatHint::Name","value":"ImageFormatHint::Name(String)","parent":{"krate":0,"index":2554},"children":[],"decl_id":null,"docs":" The format can be identified by a name.\n","sig":null,"attributes":[{"value":"/ The format can be identified by a name.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":19550,"byte_end":19593,"line_start":181,"line_end":181,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2561},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":19674,"byte_end":19687,"line_start":185,"line_end":185,"column_start":5,"column_end":18},"name":"PathExtension","qualname":"::error::ImageFormatHint::PathExtension","value":"ImageFormatHint::PathExtension(std::path::PathBuf)","parent":{"krate":0,"index":2554},"children":[],"decl_id":null,"docs":" A common path extension for the format is known.\n","sig":null,"attributes":[{"value":"/ A common path extension for the format is known.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":19617,"byte_end":19669,"line_start":184,"line_end":184,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2564},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":19774,"byte_end":19781,"line_start":188,"line_end":188,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::error::ImageFormatHint::Unknown","value":"ImageFormatHint::Unknown","parent":{"krate":0,"index":2554},"children":[],"decl_id":null,"docs":" The format is not known or could not be determined.\n","sig":null,"attributes":[{"value":"/ The format is not known or could not be determined.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":19714,"byte_end":19769,"line_start":187,"line_end":187,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2566},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":19807,"byte_end":19822,"line_start":191,"line_end":191,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::error::ImageFormatHint::__NonExhaustive","value":"ImageFormatHint::__NonExhaustive(NonExhaustiveMarker)","parent":{"krate":0,"index":2554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2554},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":19466,"byte_end":19481,"line_start":177,"line_end":177,"column_start":10,"column_end":25},"name":"ImageFormatHint","qualname":"::error::ImageFormatHint","value":"pub enum ImageFormatHint {\n\n    /// The format is known exactly.\n    Exact(ImageFormat),\n\n    /// The format can be identified by a name.\n    Name(String),\n\n    /// A common path extension for the format is known.\n    PathExtension(std::path::PathBuf),\n\n    /// The format is not known or could not be determined.\n    Unknown,\n\n    #[doc(hidden)]\n    __NonExhaustive(NonExhaustiveMarker),\n}","parent":null,"children":[{"krate":0,"index":2555},{"krate":0,"index":2558},{"krate":0,"index":2561},{"krate":0,"index":2564},{"krate":0,"index":2566}],"decl_id":null,"docs":" A best effort representation for image formats.\n","sig":null,"attributes":[{"value":"/ A best effort representation for image formats.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":19364,"byte_end":19415,"line_start":175,"line_end":175,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":20094,"byte_end":20114,"line_start":199,"line_end":199,"column_start":12,"column_end":32},"name":"from_format_and_kind","qualname":"<UnsupportedError>::from_format_and_kind","value":"pub fn from_format_and_kind(ImageFormatHint, UnsupportedErrorKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `UnsupportedError` for an image with details on the unsupported feature.","sig":null,"attributes":[{"value":"/ Create an `UnsupportedError` for an image with details on the unsupported feature.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":19876,"byte_end":19962,"line_start":195,"line_end":195,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":19967,"byte_end":19970,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ If the operation was not connected to a particular image format then the hint may be","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":19975,"byte_end":20063,"line_start":197,"line_end":197,"column_start":5,"column_end":93}},{"value":"/ `Unknown`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":20068,"byte_end":20082,"line_start":198,"line_end":198,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":20342,"byte_end":20346,"line_start":207,"line_end":207,"column_start":12,"column_end":16},"name":"kind","qualname":"<UnsupportedError>::kind","value":"pub fn kind(&Self) -> UnsupportedErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding `UnsupportedErrorKind` of the error.\n","sig":null,"attributes":[{"value":"/ Returns the corresponding `UnsupportedErrorKind` of the error.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":20264,"byte_end":20330,"line_start":206,"line_end":206,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":20485,"byte_end":20496,"line_start":212,"line_end":212,"column_start":12,"column_end":23},"name":"format_hint","qualname":"<UnsupportedError>::format_hint","value":"pub fn format_hint(&Self) -> ImageFormatHint","parent":null,"children":[],"decl_id":null,"docs":" Returns the image format associated with this error.\n","sig":null,"attributes":[{"value":"/ Returns the image format associated with this error.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":20417,"byte_end":20473,"line_start":211,"line_end":211,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":20688,"byte_end":20691,"line_start":219,"line_end":219,"column_start":12,"column_end":15},"name":"new","qualname":"<DecodingError>::new","value":"pub fn new<impl Into<Box<dyn Error + Send + Sync>>: Into<Box<Error + Send +\n                                                             Sync>>>(ImageFormatHint,\n                                                                     impl Into<Box<dyn Error + Send + Sync>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `DecodingError` that stems from an arbitrary error of an underlying decoder.\n","sig":null,"attributes":[{"value":"/ Create a `DecodingError` that stems from an arbitrary error of an underlying decoder.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":20587,"byte_end":20676,"line_start":218,"line_end":218,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":21059,"byte_end":21075,"line_start":232,"line_end":232,"column_start":12,"column_end":28},"name":"from_format_hint","qualname":"<DecodingError>::from_format_hint","value":"pub fn from_format_hint(ImageFormatHint) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `DecodingError` for an image format.","sig":null,"attributes":[{"value":"/ Create a `DecodingError` for an image format.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":20903,"byte_end":20952,"line_start":229,"line_end":229,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":20957,"byte_end":20960,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ The error will not contain any further information but is very easy to create.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":20965,"byte_end":21047,"line_start":231,"line_end":231,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":21274,"byte_end":21285,"line_start":240,"line_end":240,"column_start":12,"column_end":23},"name":"format_hint","qualname":"<DecodingError>::format_hint","value":"pub fn format_hint(&Self) -> ImageFormatHint","parent":null,"children":[],"decl_id":null,"docs":" Returns the image format associated with this error.\n","sig":null,"attributes":[{"value":"/ Returns the image format associated with this error.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":21206,"byte_end":21262,"line_start":239,"line_end":239,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":21478,"byte_end":21481,"line_start":247,"line_end":247,"column_start":12,"column_end":15},"name":"new","qualname":"<EncodingError>::new","value":"pub fn new<impl Into<Box<dyn Error + Send + Sync>>: Into<Box<Error + Send +\n                                                             Sync>>>(ImageFormatHint,\n                                                                     impl Into<Box<dyn Error + Send + Sync>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `EncodingError` that stems from an arbitrary error of an underlying encoder.\n","sig":null,"attributes":[{"value":"/ Create an `EncodingError` that stems from an arbitrary error of an underlying encoder.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":21376,"byte_end":21466,"line_start":246,"line_end":246,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":21850,"byte_end":21866,"line_start":260,"line_end":260,"column_start":12,"column_end":28},"name":"from_format_hint","qualname":"<EncodingError>::from_format_hint","value":"pub fn from_format_hint(ImageFormatHint) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `EncodingError` for an image format.","sig":null,"attributes":[{"value":"/ Create an `EncodingError` for an image format.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":21693,"byte_end":21743,"line_start":257,"line_end":257,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":21748,"byte_end":21751,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ The error will not contain any further information but is very easy to create.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":21756,"byte_end":21838,"line_start":259,"line_end":259,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":22064,"byte_end":22075,"line_start":268,"line_end":268,"column_start":12,"column_end":23},"name":"format_hint","qualname":"<EncodingError>::format_hint","value":"pub fn format_hint(&Self) -> ImageFormatHint","parent":null,"children":[],"decl_id":null,"docs":" Return the image format associated with this error.\n","sig":null,"attributes":[{"value":"/ Return the image format associated with this error.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":21997,"byte_end":22052,"line_start":267,"line_end":267,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":22247,"byte_end":22256,"line_start":275,"line_end":275,"column_start":12,"column_end":21},"name":"from_kind","qualname":"<ParameterError>::from_kind","value":"pub fn from_kind(ParameterErrorKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a `ParameterError` directly from a corresponding kind.\n","sig":null,"attributes":[{"value":"/ Construct a `ParameterError` directly from a corresponding kind.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":22167,"byte_end":22235,"line_start":274,"line_end":274,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":22463,"byte_end":22467,"line_start":283,"line_end":283,"column_start":12,"column_end":16},"name":"kind","qualname":"<ParameterError>::kind","value":"pub fn kind(&Self) -> ParameterErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding `ParameterErrorKind` of the error.\n","sig":null,"attributes":[{"value":"/ Returns the corresponding `ParameterErrorKind` of the error.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":22387,"byte_end":22451,"line_start":282,"line_end":282,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":22640,"byte_end":22649,"line_start":290,"line_end":290,"column_start":12,"column_end":21},"name":"from_kind","qualname":"<LimitError>::from_kind","value":"pub fn from_kind(LimitErrorKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a generic `LimitError` directly from a corresponding kind.\n","sig":null,"attributes":[{"value":"/ Construct a generic `LimitError` directly from a corresponding kind.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":22556,"byte_end":22628,"line_start":289,"line_end":289,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":22814,"byte_end":22818,"line_start":297,"line_end":297,"column_start":12,"column_end":16},"name":"kind","qualname":"<LimitError>::kind","value":"pub fn kind(&Self) -> LimitErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding `LimitErrorKind` of the error.\n","sig":null,"attributes":[{"value":"/ Returns the corresponding `LimitErrorKind` of the error.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":22742,"byte_end":22802,"line_start":296,"line_end":296,"column_start":5,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":91},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":23697,"byte_end":23708,"line_start":333,"line_end":333,"column_start":10,"column_end":21},"name":"ImageResult","qualname":"::error::ImageResult","value":"Result<T, ImageError>","parent":null,"children":[],"decl_id":null,"docs":" Result of an image decoding/encoding process\n","sig":null,"attributes":[{"value":"/ Result of an image decoding/encoding process","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":23639,"byte_end":23687,"line_start":332,"line_end":332,"column_start":1,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":117},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":5125,"byte_end":5131,"line_start":149,"line_end":149,"column_start":9,"column_end":15},"name":"buffer","qualname":"::buffer","value":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127}],"decl_id":null,"docs":" Iterators and other auxiliary structure for the `ImageBuffer` type.\n","sig":null,"attributes":[{"value":"/ Iterators and other auxiliary structure for the `ImageBuffer` type.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":5045,"byte_end":5116,"line_start":148,"line_end":148,"column_start":1,"column_end":72}}]},{"kind":"Mod","id":{"krate":0,"index":128},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"math","qualname":"::math","value":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/mod.rs","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":143},{"krate":0,"index":146},{"krate":0,"index":147}],"decl_id":null,"docs":" Mathematical helper functions and types.\n","sig":null,"attributes":[{"value":"/ Mathematical helper functions and types.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/mod.rs","byte_start":30341,"byte_end":30385,"line_start":1,"line_end":1,"column_start":1,"column_end":45}}]},{"kind":"Mod","id":{"krate":0,"index":129},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"nq","qualname":"::math::nq","value":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":132},{"krate":0,"index":139},{"krate":0,"index":141}],"decl_id":null,"docs":" NEUQUANT Neural-Net quantization algorithm by Anthony Dekker, 1994.\n See \"Kohonen neural networks for optimal colour quantization\"\n in \"Network: Computation in Neural Systems\" Vol. 5 (1994) pp 351-367.\n for a discussion of the algorithm.\n See also <https://scientificgems.wordpress.com/stuff/neuquant-fast-high-quality-image-quantization/>\n","sig":null,"attributes":[{"value":"/ NEUQUANT Neural-Net quantization algorithm by Anthony Dekker, 1994.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":30451,"byte_end":30522,"line_start":1,"line_end":1,"column_start":1,"column_end":72}},{"value":"/ See \"Kohonen neural networks for optimal colour quantization\"","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":30523,"byte_end":30588,"line_start":2,"line_end":2,"column_start":1,"column_end":66}},{"value":"/ in \"Network: Computation in Neural Systems\" Vol. 5 (1994) pp 351-367.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":30589,"byte_end":30662,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ for a discussion of the algorithm.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":30663,"byte_end":30701,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"/ See also <https://scientificgems.wordpress.com/stuff/neuquant-fast-high-quality-image-quantization/>","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":30702,"byte_end":30806,"line_start":5,"line_end":5,"column_start":1,"column_end":105}}]},{"kind":"Struct","id":{"krate":0,"index":130},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":33749,"byte_end":33757,"line_start":73,"line_end":73,"column_start":12,"column_end":20},"name":"NeuQuant","qualname":"::math::nq::NeuQuant","value":"NeuQuant {  }","parent":null,"children":[{"krate":0,"index":131}],"decl_id":null,"docs":" Neural network color quantizer","sig":null,"attributes":[{"value":"/ Neural network color quantizer","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":31992,"byte_end":32026,"line_start":33,"line_end":33,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":32027,"byte_end":32030,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":32031,"byte_end":32045,"line_start":35,"line_end":35,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":32046,"byte_end":32053,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ use image::imageops::colorops::{index_colors, ColorMap};","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":32054,"byte_end":32114,"line_start":37,"line_end":37,"column_start":1,"column_end":61}},{"value":"/ use image::math::nq::NeuQuant;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":32115,"byte_end":32149,"line_start":38,"line_end":38,"column_start":1,"column_end":35}},{"value":"/ use image::{ImageBuffer, Rgba, RgbaImage};","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":32150,"byte_end":32196,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":32197,"byte_end":32200,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // Create simple color image with RGBA pixels.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":32201,"byte_end":32251,"line_start":41,"line_end":41,"column_start":1,"column_end":51}},{"value":"/ let (w, h) = (2, 2);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":32252,"byte_end":32276,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/ let red: Rgba<u8> = [255, 0, 0, 255].into();","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":32277,"byte_end":32325,"line_start":43,"line_end":43,"column_start":1,"column_end":49}},{"value":"/ let green: Rgba<u8> = [0, 255, 0, 255].into();","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":32326,"byte_end":32376,"line_start":44,"line_end":44,"column_start":1,"column_end":51}},{"value":"/ let blue: Rgba<u8> = [0, 0, 255, 255].into();","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":32377,"byte_end":32426,"line_start":45,"line_end":45,"column_start":1,"column_end":50}},{"value":"/ let white: Rgba<u8> = [255, 255, 255, 255].into();","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":32427,"byte_end":32481,"line_start":46,"line_end":46,"column_start":1,"column_end":55}},{"value":"/ let mut color_image = RgbaImage::new(w, h);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":32482,"byte_end":32529,"line_start":47,"line_end":47,"column_start":1,"column_end":48}},{"value":"/ color_image.put_pixel(0, 0, red);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":32530,"byte_end":32567,"line_start":48,"line_end":48,"column_start":1,"column_end":38}},{"value":"/ color_image.put_pixel(1, 0, green);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":32568,"byte_end":32607,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/ color_image.put_pixel(0, 1, blue);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":32608,"byte_end":32646,"line_start":50,"line_end":50,"column_start":1,"column_end":39}},{"value":"/ color_image.put_pixel(1, 1, white);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":32647,"byte_end":32686,"line_start":51,"line_end":51,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":32687,"byte_end":32690,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ // Create a `NeuQuant` colormap that will build an approximate color palette that best matches","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":32691,"byte_end":32789,"line_start":53,"line_end":53,"column_start":1,"column_end":99}},{"value":"/ // the original image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":32790,"byte_end":32816,"line_start":54,"line_end":54,"column_start":1,"column_end":27}},{"value":"/ // Note, the NeuQuant algorithm is only designed to work with 6-8 bit output, so `colors`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":32817,"byte_end":32910,"line_start":55,"line_end":55,"column_start":1,"column_end":94}},{"value":"/ // should be a power of 2 in the range [64, 256].","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":32911,"byte_end":32964,"line_start":56,"line_end":56,"column_start":1,"column_end":54}},{"value":"/ let pixels = color_image.clone().into_raw();","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":32965,"byte_end":33013,"line_start":57,"line_end":57,"column_start":1,"column_end":49}},{"value":"/ let cmap = NeuQuant::new(1, 256, &pixels);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":33014,"byte_end":33060,"line_start":58,"line_end":58,"column_start":1,"column_end":47}},{"value":"/ // Map the original image through the color map to create an indexed image stored in a","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":33061,"byte_end":33151,"line_start":59,"line_end":59,"column_start":1,"column_end":91}},{"value":"/ // `GrayImage`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":33152,"byte_end":33171,"line_start":60,"line_end":60,"column_start":1,"column_end":20}},{"value":"/ let palletized = index_colors(&color_image, &cmap);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":33172,"byte_end":33227,"line_start":61,"line_end":61,"column_start":1,"column_end":56}},{"value":"/ // Map indexed image back `RgbaImage`.  Note the NeuQuant algorithm creates an approximation of","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":33228,"byte_end":33327,"line_start":62,"line_end":62,"column_start":1,"column_end":100}},{"value":"/ // the original colors, so even in this simple example the output is not pixel equivalent to","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":33328,"byte_end":33424,"line_start":63,"line_end":63,"column_start":1,"column_end":97}},{"value":"/ // the original.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":33425,"byte_end":33445,"line_start":64,"line_end":64,"column_start":1,"column_end":21}},{"value":"/ let mapped = ImageBuffer::from_fn(w, h, |x, y| -> Rgba<u8> {","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":33446,"byte_end":33510,"line_start":65,"line_end":65,"column_start":1,"column_end":65}},{"value":"/     let p = palletized.get_pixel(x, y);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":33511,"byte_end":33554,"line_start":66,"line_end":66,"column_start":1,"column_end":44}},{"value":"/     cmap.lookup(p.0[0] as usize)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":33555,"byte_end":33591,"line_start":67,"line_end":67,"column_start":1,"column_end":37}},{"value":"/         .expect(\"indexed color out-of-range\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":33592,"byte_end":33641,"line_start":68,"line_end":68,"column_start":1,"column_end":50}},{"value":"/         .into()","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":33642,"byte_end":33661,"line_start":69,"line_end":69,"column_start":1,"column_end":20}},{"value":"/ });","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":33662,"byte_end":33669,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":33670,"byte_end":33677,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"deprecated(note = \"Use the `color_quant` crate instead\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":33678,"byte_end":33737,"line_start":72,"line_end":72,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":34276,"byte_end":34279,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"new","qualname":"<NeuQuant>::new","value":"pub fn new(i32, usize, &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":34422,"byte_end":34426,"line_start":90,"line_end":90,"column_start":12,"column_end":16},"name":"init","qualname":"<NeuQuant>::init","value":"pub fn init(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":34504,"byte_end":34513,"line_start":93,"line_end":93,"column_start":12,"column_end":21},"name":"map_pixel","qualname":"<NeuQuant>::map_pixel","value":"pub fn map_pixel(&Self, &mut [u8])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":34594,"byte_end":34602,"line_start":96,"line_end":96,"column_start":12,"column_end":20},"name":"index_of","qualname":"<NeuQuant>::index_of","value":"pub fn index_of(&Self, &[u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":34687,"byte_end":34693,"line_start":99,"line_end":99,"column_start":12,"column_end":18},"name":"lookup","qualname":"<NeuQuant>::lookup","value":"pub fn lookup(&Self, usize) -> Option<[u8; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":143},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/utils.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"utils","qualname":"::math::utils","value":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/utils.rs","parent":null,"children":[{"krate":0,"index":144}],"decl_id":null,"docs":" Shared mathematical utility functions.\n","sig":null,"attributes":[{"value":"/ Shared mathematical utility functions.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/utils.rs","byte_start":35066,"byte_end":35108,"line_start":1,"line_end":1,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":144},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/utils.rs","byte_start":35367,"byte_end":35372,"line_start":14,"line_end":14,"column_start":8,"column_end":13},"name":"clamp","qualname":"::math::utils::clamp","value":"pub fn clamp<N>(N, N, N) -> N where N: PartialOrd","parent":null,"children":[],"decl_id":null,"docs":" Cut value to be inside given range","sig":null,"attributes":[{"value":"/ Cut value to be inside given range","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/utils.rs","byte_start":35110,"byte_end":35148,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/utils.rs","byte_start":35149,"byte_end":35152,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/utils.rs","byte_start":35153,"byte_end":35160,"line_start":5,"line_end":5,"column_start":1,"column_end":8}},{"value":"/ use image::math::utils;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/utils.rs","byte_start":35161,"byte_end":35188,"line_start":6,"line_end":6,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/utils.rs","byte_start":35189,"byte_end":35192,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(utils::clamp(-5, 0, 10),  0);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/utils.rs","byte_start":35193,"byte_end":35237,"line_start":8,"line_end":8,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(utils::clamp( 6, 0, 10),  6);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/utils.rs","byte_start":35238,"byte_end":35282,"line_start":9,"line_end":9,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(utils::clamp(15, 0, 10), 10);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/utils.rs","byte_start":35283,"byte_end":35327,"line_start":10,"line_end":10,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/utils.rs","byte_start":35328,"byte_end":35335,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/utils.rs","byte_start":35336,"byte_end":35345,"line_start":12,"line_end":12,"column_start":1,"column_end":10}},{"value":"deprecated","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/utils.rs","byte_start":35346,"byte_end":35359,"line_start":13,"line_end":13,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2580},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/rect.rs","byte_start":35653,"byte_end":35657,"line_start":3,"line_end":3,"column_start":12,"column_end":16},"name":"Rect","qualname":"::math::rect::Rect","value":"Rect { x, y, width, height }","parent":null,"children":[{"krate":0,"index":2581},{"krate":0,"index":2582},{"krate":0,"index":2583},{"krate":0,"index":2584}],"decl_id":null,"docs":" A Rectangle defined by its top left corner, width and height.\n","sig":null,"attributes":[{"value":"/ A Rectangle defined by its top left corner, width and height.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/rect.rs","byte_start":35525,"byte_end":35590,"line_start":1,"line_end":1,"column_start":1,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":2581},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/rect.rs","byte_start":35717,"byte_end":35718,"line_start":5,"line_end":5,"column_start":9,"column_end":10},"name":"x","qualname":"::math::rect::Rect::x","value":"u32","parent":{"krate":0,"index":2580},"children":[],"decl_id":null,"docs":" The x coordinate of the top left corner.\n","sig":null,"attributes":[{"value":"/ The x coordinate of the top left corner.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/rect.rs","byte_start":35664,"byte_end":35708,"line_start":4,"line_end":4,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":2582},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/rect.rs","byte_start":35782,"byte_end":35783,"line_start":7,"line_end":7,"column_start":9,"column_end":10},"name":"y","qualname":"::math::rect::Rect::y","value":"u32","parent":{"krate":0,"index":2580},"children":[],"decl_id":null,"docs":" The y coordinate of the top left corner.\n","sig":null,"attributes":[{"value":"/ The y coordinate of the top left corner.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/rect.rs","byte_start":35729,"byte_end":35773,"line_start":6,"line_end":6,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":2583},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/rect.rs","byte_start":35829,"byte_end":35834,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"name":"width","qualname":"::math::rect::Rect::width","value":"u32","parent":{"krate":0,"index":2580},"children":[],"decl_id":null,"docs":" The rectangle's width.\n","sig":null,"attributes":[{"value":"/ The rectangle's width.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/rect.rs","byte_start":35794,"byte_end":35820,"line_start":8,"line_end":8,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":2584},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/rect.rs","byte_start":35881,"byte_end":35887,"line_start":11,"line_end":11,"column_start":9,"column_end":15},"name":"height","qualname":"::math::rect::Rect::height","value":"u32","parent":{"krate":0,"index":2580},"children":[],"decl_id":null,"docs":" The rectangle's height.\n","sig":null,"attributes":[{"value":"/ The rectangle's height.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/rect.rs","byte_start":35845,"byte_end":35872,"line_start":10,"line_end":10,"column_start":5,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":148},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"imageops","qualname":"::imageops","value":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":4051},{"krate":0,"index":163},{"krate":0,"index":4053},{"krate":0,"index":164},{"krate":0,"index":4055},{"krate":0,"index":165},{"krate":0,"index":4057},{"krate":0,"index":166},{"krate":0,"index":4059},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":4111},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":238},{"krate":0,"index":315},{"krate":0,"index":400},{"krate":0,"index":402},{"krate":0,"index":404},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":410},{"krate":0,"index":413},{"krate":0,"index":418},{"krate":0,"index":423}],"decl_id":null,"docs":" Image Processing Functions\n","sig":null,"attributes":[{"value":"/ Image Processing Functions","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":35897,"byte_end":35927,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":207},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/affine.rs","byte_start":48070,"byte_end":48078,"line_start":9,"line_end":9,"column_start":8,"column_end":16},"name":"rotate90","qualname":"::imageops::affine::rotate90","value":"pub fn rotate90<I: GenericImageView>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 90 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate an image 90 degrees clockwise.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/affine.rs","byte_start":48021,"byte_end":48062,"line_start":8,"line_end":8,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":209},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/affine.rs","byte_start":48410,"byte_end":48419,"line_start":21,"line_end":21,"column_start":8,"column_end":17},"name":"rotate180","qualname":"::imageops::affine::rotate180","value":"pub fn rotate180<I: GenericImageView>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 180 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate an image 180 degrees clockwise.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/affine.rs","byte_start":48360,"byte_end":48402,"line_start":20,"line_end":20,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":211},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/affine.rs","byte_start":48752,"byte_end":48761,"line_start":33,"line_end":33,"column_start":8,"column_end":17},"name":"rotate270","qualname":"::imageops::affine::rotate270","value":"pub fn rotate270<I: GenericImageView>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 270 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate an image 270 degrees clockwise.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/affine.rs","byte_start":48702,"byte_end":48744,"line_start":32,"line_end":32,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":213},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/affine.rs","byte_start":49149,"byte_end":49160,"line_start":45,"line_end":45,"column_start":8,"column_end":19},"name":"rotate90_in","qualname":"::imageops::affine::rotate90_in","value":"pub fn rotate90_in<I, Container>(&I, &mut ImageBuffer<I::Pixel, Container>)\n-> crate::ImageResult<()> where I: GenericImageView, I::Pixel: 'static,\nContainer: std::ops::DerefMut<Target = [<I::Pixel as Pixel>::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 90 degrees clockwise and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Rotate an image 90 degrees clockwise and put the result into the destination [`ImageBuffer`].","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/affine.rs","byte_start":49044,"byte_end":49141,"line_start":44,"line_end":44,"column_start":1,"column_end":98}}]},{"kind":"Function","id":{"krate":0,"index":216},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/affine.rs","byte_start":49934,"byte_end":49946,"line_start":70,"line_end":70,"column_start":8,"column_end":20},"name":"rotate180_in","qualname":"::imageops::affine::rotate180_in","value":"pub fn rotate180_in<I, Container>(&I, &mut ImageBuffer<I::Pixel, Container>)\n-> crate::ImageResult<()> where I: GenericImageView, I::Pixel: 'static,\nContainer: std::ops::DerefMut<Target = [<I::Pixel as Pixel>::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 180 degrees clockwise and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Rotate an image 180 degrees clockwise and put the result into the destination [`ImageBuffer`].","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/affine.rs","byte_start":49828,"byte_end":49926,"line_start":69,"line_end":69,"column_start":1,"column_end":99}}]},{"kind":"Function","id":{"krate":0,"index":219},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/affine.rs","byte_start":50729,"byte_end":50741,"line_start":95,"line_end":95,"column_start":8,"column_end":20},"name":"rotate270_in","qualname":"::imageops::affine::rotate270_in","value":"pub fn rotate270_in<I, Container>(&I, &mut ImageBuffer<I::Pixel, Container>)\n-> crate::ImageResult<()> where I: GenericImageView, I::Pixel: 'static,\nContainer: std::ops::DerefMut<Target = [<I::Pixel as Pixel>::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 270 degrees clockwise and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Rotate an image 270 degrees clockwise and put the result into the destination [`ImageBuffer`].","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/affine.rs","byte_start":50623,"byte_end":50721,"line_start":94,"line_end":94,"column_start":1,"column_end":99}}]},{"kind":"Function","id":{"krate":0,"index":222},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/affine.rs","byte_start":51447,"byte_end":51462,"line_start":120,"line_end":120,"column_start":8,"column_end":23},"name":"flip_horizontal","qualname":"::imageops::affine::flip_horizontal","value":"pub fn flip_horizontal<I: GenericImageView>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Flip an image horizontally\n","sig":null,"attributes":[{"value":"/ Flip an image horizontally","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/affine.rs","byte_start":51409,"byte_end":51439,"line_start":119,"line_end":119,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":224},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/affine.rs","byte_start":51787,"byte_end":51800,"line_start":132,"line_end":132,"column_start":8,"column_end":21},"name":"flip_vertical","qualname":"::imageops::affine::flip_vertical","value":"pub fn flip_vertical<I: GenericImageView>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Flip an image vertically\n","sig":null,"attributes":[{"value":"/ Flip an image vertically","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/affine.rs","byte_start":51751,"byte_end":51779,"line_start":131,"line_end":131,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":226},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/affine.rs","byte_start":52182,"byte_end":52200,"line_start":144,"line_end":144,"column_start":8,"column_end":26},"name":"flip_horizontal_in","qualname":"::imageops::affine::flip_horizontal_in","value":"pub fn flip_horizontal_in<I,\n                          Container>(&I,\n                                     &mut ImageBuffer<I::Pixel, Container>)\n-> crate::ImageResult<()> where I: GenericImageView, I::Pixel: 'static,\nContainer: std::ops::DerefMut<Target = [<I::Pixel as Pixel>::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Flip an image horizontally and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Flip an image horizontally and put the result into the destination [`ImageBuffer`].","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/affine.rs","byte_start":52087,"byte_end":52174,"line_start":143,"line_end":143,"column_start":1,"column_end":88}}]},{"kind":"Function","id":{"krate":0,"index":229},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/affine.rs","byte_start":52961,"byte_end":52977,"line_start":169,"line_end":169,"column_start":8,"column_end":24},"name":"flip_vertical_in","qualname":"::imageops::affine::flip_vertical_in","value":"pub fn flip_vertical_in<I,\n                        Container>(&I, &mut ImageBuffer<I::Pixel, Container>)\n-> crate::ImageResult<()> where I: GenericImageView, I::Pixel: 'static,\nContainer: std::ops::DerefMut<Target = [<I::Pixel as Pixel>::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Flip an image vertically and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Flip an image vertically and put the result into the destination [`ImageBuffer`].","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/affine.rs","byte_start":52868,"byte_end":52953,"line_start":168,"line_end":168,"column_start":1,"column_end":86}}]},{"kind":"Function","id":{"krate":0,"index":232},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/affine.rs","byte_start":53704,"byte_end":53722,"line_start":194,"line_end":194,"column_start":8,"column_end":26},"name":"rotate180_in_place","qualname":"::imageops::affine::rotate180_in_place","value":"pub fn rotate180_in_place<I: GenericImage>(&mut I)","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 180 degrees clockwise in place.\n","sig":null,"attributes":[{"value":"/ Rotate an image 180 degrees clockwise in place.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/affine.rs","byte_start":53645,"byte_end":53696,"line_start":193,"line_end":193,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":234},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/affine.rs","byte_start":54502,"byte_end":54526,"line_start":225,"line_end":225,"column_start":8,"column_end":32},"name":"flip_horizontal_in_place","qualname":"::imageops::affine::flip_horizontal_in_place","value":"pub fn flip_horizontal_in_place<I: GenericImage>(&mut I)","parent":null,"children":[],"decl_id":null,"docs":" Flip an image horizontally in place.\n","sig":null,"attributes":[{"value":"/ Flip an image horizontally in place.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/affine.rs","byte_start":54454,"byte_end":54494,"line_start":224,"line_end":224,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":236},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/affine.rs","byte_start":54932,"byte_end":54954,"line_start":240,"line_end":240,"column_start":8,"column_end":30},"name":"flip_vertical_in_place","qualname":"::imageops::affine::flip_vertical_in_place","value":"pub fn flip_vertical_in_place<I: GenericImage>(&mut I)","parent":null,"children":[],"decl_id":null,"docs":" Flip an image vertically in place.\n","sig":null,"attributes":[{"value":"/ Flip an image vertically in place.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/affine.rs","byte_start":54886,"byte_end":54924,"line_start":239,"line_end":239,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":238},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"colorops","qualname":"::imageops::colorops","value":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":4135},{"krate":0,"index":245},{"krate":0,"index":4137},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":257},{"krate":0,"index":259},{"krate":0,"index":261},{"krate":0,"index":266},{"krate":0,"index":272},{"krate":0,"index":277},{"krate":0,"index":2600},{"krate":0,"index":2603},{"krate":0,"index":2602},{"krate":0,"index":283},{"krate":0,"index":289},{"krate":0,"index":296},{"krate":0,"index":303},{"krate":0,"index":307},{"krate":0,"index":312}],"decl_id":null,"docs":" Functions for altering and converting the color of pixelbufs\n","sig":null,"attributes":[{"value":"/ Functions for altering and converting the color of pixelbufs","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":59907,"byte_end":59971,"line_start":1,"line_end":1,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":257},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":60371,"byte_end":60380,"line_start":17,"line_end":17,"column_start":8,"column_end":17},"name":"grayscale","qualname":"::imageops::colorops::grayscale","value":"pub fn grayscale<I: GenericImageView>(&I)\n-> ImageBuffer<Luma<Subpixel<I>>, Vec<Subpixel<I>>> where\nSubpixel<I>: 'static, <Subpixel<I> as Num>::FromStrRadixErr: 'static","parent":null,"children":[],"decl_id":null,"docs":" Convert the supplied image to grayscale\n","sig":null,"attributes":[{"value":"/ Convert the supplied image to grayscale","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":60320,"byte_end":60363,"line_start":16,"line_end":16,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":259},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":60912,"byte_end":60918,"line_start":37,"line_end":37,"column_start":8,"column_end":14},"name":"invert","qualname":"::imageops::colorops::invert","value":"pub fn invert<I: GenericImage>(&mut I)","parent":null,"children":[],"decl_id":null,"docs":" Invert each pixel within the supplied image.\n This function operates in place.\n","sig":null,"attributes":[{"value":"/ Invert each pixel within the supplied image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":60819,"byte_end":60867,"line_start":35,"line_end":35,"column_start":1,"column_end":49}},{"value":"/ This function operates in place.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":60868,"byte_end":60904,"line_start":36,"line_end":36,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":261},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":61381,"byte_end":61389,"line_start":53,"line_end":53,"column_start":8,"column_end":16},"name":"contrast","qualname":"::imageops::colorops::contrast","value":"pub fn contrast<I, P, S>(&I, f32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImageView<Pixel = P>, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + 'static","parent":null,"children":[],"decl_id":null,"docs":" Adjust the contrast of the supplied image.\n ```contrast``` is the amount to adjust the contrast by.\n Negative values decrease the contrast and positive values increase the contrast.\n","sig":null,"attributes":[{"value":"/ Adjust the contrast of the supplied image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":61182,"byte_end":61228,"line_start":50,"line_end":50,"column_start":1,"column_end":47}},{"value":"/ ```contrast``` is the amount to adjust the contrast by.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":61229,"byte_end":61288,"line_start":51,"line_end":51,"column_start":1,"column_end":60}},{"value":"/ Negative values decrease the contrast and positive values increase the contrast.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":61289,"byte_end":61373,"line_start":52,"line_end":52,"column_start":1,"column_end":85}}]},{"kind":"Function","id":{"krate":0,"index":266},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":62364,"byte_end":62372,"line_start":88,"line_end":88,"column_start":8,"column_end":16},"name":"brighten","qualname":"::imageops::colorops::brighten","value":"pub fn brighten<I, P, S>(&I, i32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImageView<Pixel = P>, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + 'static","parent":null,"children":[],"decl_id":null,"docs":" Brighten the supplied image.\n ```value``` is the amount to brighten each pixel by.\n Negative values decrease the brightness and positive values increase it.\n","sig":null,"attributes":[{"value":"/ Brighten the supplied image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":62190,"byte_end":62222,"line_start":85,"line_end":85,"column_start":1,"column_end":33}},{"value":"/ ```value``` is the amount to brighten each pixel by.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":62223,"byte_end":62279,"line_start":86,"line_end":86,"column_start":1,"column_end":57}},{"value":"/ Negative values decrease the brightness and positive values increase it.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":62280,"byte_end":62356,"line_start":87,"line_end":87,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":272},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":63358,"byte_end":63367,"line_start":123,"line_end":123,"column_start":8,"column_end":17},"name":"huerotate","qualname":"::imageops::colorops::huerotate","value":"pub fn huerotate<I, P, S>(&I, i32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImageView<Pixel = P>, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + 'static","parent":null,"children":[],"decl_id":null,"docs":" Hue rotate the supplied image.\n `value` is the degrees to rotate each pixel by.\n 0 and 360 do nothing, the rest rotates by the given degree value.\n just like the css webkit filter hue-rotate(180)\n","sig":null,"attributes":[{"value":"/ Hue rotate the supplied image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":63142,"byte_end":63176,"line_start":119,"line_end":119,"column_start":1,"column_end":35}},{"value":"/ `value` is the degrees to rotate each pixel by.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":63177,"byte_end":63228,"line_start":120,"line_end":120,"column_start":1,"column_end":52}},{"value":"/ 0 and 360 do nothing, the rest rotates by the given degree value.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":63229,"byte_end":63298,"line_start":121,"line_end":121,"column_start":1,"column_end":70}},{"value":"/ just like the css webkit filter hue-rotate(180)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":63299,"byte_end":63350,"line_start":122,"line_end":122,"column_start":1,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":277},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":65281,"byte_end":65289,"line_start":180,"line_end":180,"column_start":11,"column_end":19},"name":"ColorMap","qualname":"::imageops::colorops::ColorMap","value":"ColorMap","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282}],"decl_id":null,"docs":" A color map\n","sig":null,"attributes":[{"value":"/ A color map","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":65255,"byte_end":65270,"line_start":179,"line_end":179,"column_start":1,"column_end":16}}]},{"kind":"Type","id":{"krate":0,"index":278},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":65353,"byte_end":65358,"line_start":182,"line_end":182,"column_start":10,"column_end":15},"name":"Color","qualname":"::imageops::colorops::ColorMap::Color","value":"type Color;","parent":{"krate":0,"index":277},"children":[],"decl_id":null,"docs":" The color type on which the map operates on\n","sig":null,"attributes":[{"value":"/ The color type on which the map operates on","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":65296,"byte_end":65343,"line_start":181,"line_end":181,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":65451,"byte_end":65459,"line_start":185,"line_end":185,"column_start":8,"column_end":16},"name":"index_of","qualname":"::imageops::colorops::ColorMap::index_of","value":"pub fn index_of(&Self, &Self::Color) -> usize","parent":{"krate":0,"index":277},"children":[],"decl_id":null,"docs":" Returns the index of the closest match of `color`\n in the color map.\n","sig":null,"attributes":[{"value":"/ Returns the index of the closest match of `color`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":65364,"byte_end":65417,"line_start":183,"line_end":183,"column_start":5,"column_end":58}},{"value":"/ in the color map.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":65422,"byte_end":65443,"line_start":184,"line_end":184,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":65667,"byte_end":65673,"line_start":188,"line_end":188,"column_start":8,"column_end":14},"name":"lookup","qualname":"::imageops::colorops::ColorMap::lookup","value":"pub fn lookup(&Self, usize) -> Option<Self::Color>","parent":{"krate":0,"index":277},"children":[],"decl_id":null,"docs":" Looks up color by index in the color map.  If `idx` is out of range for the color map, or\n ColorMap doesn't implement `lookup` `None` is returned.\n","sig":null,"attributes":[{"value":"/ Looks up color by index in the color map.  If `idx` is out of range for the color map, or","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":65502,"byte_end":65595,"line_start":186,"line_end":186,"column_start":5,"column_end":98}},{"value":"/ ColorMap doesn't implement `lookup` `None` is returned.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":65600,"byte_end":65659,"line_start":187,"line_end":187,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":65854,"byte_end":65864,"line_start":193,"line_end":193,"column_start":8,"column_end":18},"name":"has_lookup","qualname":"::imageops::colorops::ColorMap::has_lookup","value":"pub fn has_lookup(&Self) -> bool","parent":{"krate":0,"index":277},"children":[],"decl_id":null,"docs":" Determine if this implementation of ColorMap overrides the default `lookup`.\n","sig":null,"attributes":[{"value":"/ Determine if this implementation of ColorMap overrides the default `lookup`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":65766,"byte_end":65846,"line_start":192,"line_end":192,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":65969,"byte_end":65978,"line_start":197,"line_end":197,"column_start":8,"column_end":17},"name":"map_color","qualname":"::imageops::colorops::ColorMap::map_color","value":"pub fn map_color(&Self, &mut Self::Color)","parent":{"krate":0,"index":277},"children":[],"decl_id":null,"docs":" Maps `color` to the closest color in the color map.\n","sig":null,"attributes":[{"value":"/ Maps `color` to the closest color in the color map.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":65906,"byte_end":65961,"line_start":196,"line_end":196,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":2600},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":67123,"byte_end":67130,"line_start":230,"line_end":230,"column_start":12,"column_end":19},"name":"BiLevel","qualname":"::imageops::colorops::BiLevel","value":"","parent":null,"children":[],"decl_id":null,"docs":" A bi-level color map","sig":null,"attributes":[{"value":"/ A bi-level color map","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":66015,"byte_end":66039,"line_start":200,"line_end":200,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":66040,"byte_end":66043,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":66044,"byte_end":66058,"line_start":202,"line_end":202,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":66059,"byte_end":66066,"line_start":203,"line_end":203,"column_start":1,"column_end":8}},{"value":"/ use image::imageops::colorops::{index_colors, BiLevel, ColorMap};","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":66067,"byte_end":66136,"line_start":204,"line_end":204,"column_start":1,"column_end":70}},{"value":"/ use image::{ImageBuffer, Luma};","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":66137,"byte_end":66172,"line_start":205,"line_end":205,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":66173,"byte_end":66176,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ let (w, h) = (16, 16);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":66177,"byte_end":66203,"line_start":207,"line_end":207,"column_start":1,"column_end":27}},{"value":"/ // Create an image with a smooth horizontal gradient from black (0) to white (255).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":66204,"byte_end":66291,"line_start":208,"line_end":208,"column_start":1,"column_end":88}},{"value":"/ let gray = ImageBuffer::from_fn(w, h, |x, y| -> Luma<u8> { [(255 * x / w) as u8].into() });","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":66292,"byte_end":66387,"line_start":209,"line_end":209,"column_start":1,"column_end":96}},{"value":"/ // Mapping the gray image through the `BiLevel` filter should map gray pixels less than half","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":66388,"byte_end":66484,"line_start":210,"line_end":210,"column_start":1,"column_end":97}},{"value":"/ // intensity (127) to black (0), and anything greater to white (255).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":66485,"byte_end":66558,"line_start":211,"line_end":211,"column_start":1,"column_end":74}},{"value":"/ let cmap = BiLevel;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":66559,"byte_end":66582,"line_start":212,"line_end":212,"column_start":1,"column_end":24}},{"value":"/ let palletized = index_colors(&gray, &cmap);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":66583,"byte_end":66631,"line_start":213,"line_end":213,"column_start":1,"column_end":49}},{"value":"/ let mapped = ImageBuffer::from_fn(w, h, |x, y| {","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":66632,"byte_end":66684,"line_start":214,"line_end":214,"column_start":1,"column_end":53}},{"value":"/     let p = palletized.get_pixel(x, y);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":66685,"byte_end":66728,"line_start":215,"line_end":215,"column_start":1,"column_end":44}},{"value":"/     cmap.lookup(p.0[0] as usize)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":66729,"byte_end":66765,"line_start":216,"line_end":216,"column_start":1,"column_end":37}},{"value":"/         .expect(\"indexed color out-of-range\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":66766,"byte_end":66815,"line_start":217,"line_end":217,"column_start":1,"column_end":50}},{"value":"/ });","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":66816,"byte_end":66823,"line_start":218,"line_end":218,"column_start":1,"column_end":8}},{"value":"/ // Create an black and white image of expected output.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":66824,"byte_end":66882,"line_start":219,"line_end":219,"column_start":1,"column_end":59}},{"value":"/ let bw = ImageBuffer::from_fn(w, h, |x, y| -> Luma<u8> {","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":66883,"byte_end":66943,"line_start":220,"line_end":220,"column_start":1,"column_end":61}},{"value":"/     if x <= (w / 2) {","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":66944,"byte_end":66969,"line_start":221,"line_end":221,"column_start":1,"column_end":26}},{"value":"/         [0].into()","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":66970,"byte_end":66992,"line_start":222,"line_end":222,"column_start":1,"column_end":23}},{"value":"/     } else {","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":66993,"byte_end":67009,"line_start":223,"line_end":223,"column_start":1,"column_end":17}},{"value":"/         [255].into()","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":67010,"byte_end":67034,"line_start":224,"line_end":224,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":67035,"byte_end":67044,"line_start":225,"line_end":225,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":67045,"byte_end":67052,"line_start":226,"line_end":226,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(mapped, bw);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":67053,"byte_end":67080,"line_start":227,"line_end":227,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":67081,"byte_end":67088,"line_start":228,"line_end":228,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":307},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":70103,"byte_end":70109,"line_start":345,"line_end":345,"column_start":8,"column_end":14},"name":"dither","qualname":"::imageops::colorops::dither","value":"pub fn dither<Pix, Map: ?Sized>(&mut ImageBuffer<Pix, Vec<u8>>, &Map) where\nMap: ColorMap<Color = Pix>, Pix: Pixel<Subpixel = u8> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Reduces the colors of the image using the supplied `color_map` while applying\n Floyd-Steinberg dithering to improve the visual conception\n","sig":null,"attributes":[{"value":"/ Reduces the colors of the image using the supplied `color_map` while applying","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":69951,"byte_end":70032,"line_start":343,"line_end":343,"column_start":1,"column_end":82}},{"value":"/ Floyd-Steinberg dithering to improve the visual conception","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":70033,"byte_end":70095,"line_start":344,"line_end":344,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":312},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":71663,"byte_end":71675,"line_start":383,"line_end":383,"column_start":8,"column_end":20},"name":"index_colors","qualname":"::imageops::colorops::index_colors","value":"pub fn index_colors<Pix, Map: ?Sized>(&ImageBuffer<Pix, Vec<u8>>, &Map)\n-> ImageBuffer<Luma<u8>, Vec<u8>> where Map: ColorMap<Color = Pix>,\nPix: Pixel<Subpixel = u8> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Reduces the colors using the supplied `color_map` and returns an image of the indices\n","sig":null,"attributes":[{"value":"/ Reduces the colors using the supplied `color_map` and returns an image of the indices","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":71566,"byte_end":71655,"line_start":382,"line_end":382,"column_start":1,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2606},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":75361,"byte_end":75368,"line_start":84,"line_end":84,"column_start":5,"column_end":12},"name":"Nearest","qualname":"::imageops::sample::FilterType::Nearest","value":"FilterType::Nearest","parent":{"krate":0,"index":2605},"children":[],"decl_id":null,"docs":" Nearest Neighbor\n","sig":null,"attributes":[{"value":"/ Nearest Neighbor","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":75336,"byte_end":75356,"line_start":83,"line_end":83,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2608},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":75397,"byte_end":75405,"line_start":87,"line_end":87,"column_start":5,"column_end":13},"name":"Triangle","qualname":"::imageops::sample::FilterType::Triangle","value":"FilterType::Triangle","parent":{"krate":0,"index":2605},"children":[],"decl_id":null,"docs":" Linear Filter\n","sig":null,"attributes":[{"value":"/ Linear Filter","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":75375,"byte_end":75392,"line_start":86,"line_end":86,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2610},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":75433,"byte_end":75443,"line_start":90,"line_end":90,"column_start":5,"column_end":15},"name":"CatmullRom","qualname":"::imageops::sample::FilterType::CatmullRom","value":"FilterType::CatmullRom","parent":{"krate":0,"index":2605},"children":[],"decl_id":null,"docs":" Cubic Filter\n","sig":null,"attributes":[{"value":"/ Cubic Filter","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":75412,"byte_end":75428,"line_start":89,"line_end":89,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2612},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":75474,"byte_end":75482,"line_start":93,"line_end":93,"column_start":5,"column_end":13},"name":"Gaussian","qualname":"::imageops::sample::FilterType::Gaussian","value":"FilterType::Gaussian","parent":{"krate":0,"index":2605},"children":[],"decl_id":null,"docs":" Gaussian Filter\n","sig":null,"attributes":[{"value":"/ Gaussian Filter","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":75450,"byte_end":75469,"line_start":92,"line_end":92,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2614},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":75519,"byte_end":75527,"line_start":96,"line_end":96,"column_start":5,"column_end":13},"name":"Lanczos3","qualname":"::imageops::sample::FilterType::Lanczos3","value":"FilterType::Lanczos3","parent":{"krate":0,"index":2605},"children":[],"decl_id":null,"docs":" Lanczos with window 3\n","sig":null,"attributes":[{"value":"/ Lanczos with window 3","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":75489,"byte_end":75514,"line_start":95,"line_end":95,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":2605},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":75319,"byte_end":75329,"line_start":82,"line_end":82,"column_start":10,"column_end":20},"name":"FilterType","qualname":"::imageops::sample::FilterType","value":"pub enum FilterType {\n\n    /// Nearest Neighbor\n    Nearest,\n\n    /// Linear Filter\n    Triangle,\n\n    /// Cubic Filter\n    CatmullRom,\n\n    /// Gaussian Filter\n    Gaussian,\n\n    /// Lanczos with window 3\n    Lanczos3,\n}","parent":null,"children":[{"krate":0,"index":2606},{"krate":0,"index":2608},{"krate":0,"index":2610},{"krate":0,"index":2612},{"krate":0,"index":2614}],"decl_id":null,"docs":" Available Sampling Filters.","sig":null,"attributes":[{"value":"/ Available Sampling Filters.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":72877,"byte_end":72908,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":72909,"byte_end":72912,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":72913,"byte_end":72928,"line_start":17,"line_end":17,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":72929,"byte_end":72932,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ To test the different sampling filters on a real example, you can find two","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":72933,"byte_end":73011,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ examples called","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":73012,"byte_end":73031,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ [`scaledown`](https://github.com/image-rs/image/tree/master/examples/scaledown)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":73032,"byte_end":73115,"line_start":21,"line_end":21,"column_start":1,"column_end":84}},{"value":"/ and","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":73116,"byte_end":73123,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ [`scaleup`](https://github.com/image-rs/image/tree/master/examples/scaleup)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":73124,"byte_end":73203,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ in the `examples` directory of the crate source code.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":73204,"byte_end":73261,"line_start":24,"line_end":24,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":73262,"byte_end":73265,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Here is a 3.58 MiB","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":73266,"byte_end":73288,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ [test image](https://github.com/image-rs/image/blob/master/examples/scaledown/test.jpg)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":73289,"byte_end":73380,"line_start":27,"line_end":27,"column_start":1,"column_end":92}},{"value":"/ that has been scaled down to 300x225 px:","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":73381,"byte_end":73425,"line_start":28,"line_end":28,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":73426,"byte_end":73429,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ <!-- NOTE: To test new test images locally, replace the GitHub path with `../../../docs/` -->","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":73430,"byte_end":73527,"line_start":30,"line_end":30,"column_start":1,"column_end":98}},{"value":"/ <div style=\"display: flex; flex-wrap: wrap; align-items: flex-start;\">","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":73528,"byte_end":73602,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":73603,"byte_end":73643,"line_start":32,"line_end":32,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-near.png\" title=\"Nearest\"><br>","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":73644,"byte_end":73782,"line_start":33,"line_end":33,"column_start":1,"column_end":139}},{"value":"/     Nearest Neighbor","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":73783,"byte_end":73807,"line_start":34,"line_end":34,"column_start":1,"column_end":25}},{"value":"/   </div>","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":73808,"byte_end":73820,"line_start":35,"line_end":35,"column_start":1,"column_end":13}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":73821,"byte_end":73861,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-tri.png\" title=\"Triangle\"><br>","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":73862,"byte_end":74000,"line_start":37,"line_end":37,"column_start":1,"column_end":139}},{"value":"/     Linear: Triangle","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":74001,"byte_end":74025,"line_start":38,"line_end":38,"column_start":1,"column_end":25}},{"value":"/   </div>","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":74026,"byte_end":74038,"line_start":39,"line_end":39,"column_start":1,"column_end":13}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":74039,"byte_end":74079,"line_start":40,"line_end":40,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-cmr.png\" title=\"CatmullRom\"><br>","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":74080,"byte_end":74220,"line_start":41,"line_end":41,"column_start":1,"column_end":141}},{"value":"/     Cubic: Catmull-Rom","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":74221,"byte_end":74247,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"/   </div>","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":74248,"byte_end":74260,"line_start":43,"line_end":43,"column_start":1,"column_end":13}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":74261,"byte_end":74301,"line_start":44,"line_end":44,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-gauss.png\" title=\"Gaussian\"><br>","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":74302,"byte_end":74442,"line_start":45,"line_end":45,"column_start":1,"column_end":141}},{"value":"/     Gaussian","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":74443,"byte_end":74459,"line_start":46,"line_end":46,"column_start":1,"column_end":17}},{"value":"/   </div>","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":74460,"byte_end":74472,"line_start":47,"line_end":47,"column_start":1,"column_end":13}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":74473,"byte_end":74513,"line_start":48,"line_end":48,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-lcz2.png\" title=\"Lanczos3\"><br>","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":74514,"byte_end":74653,"line_start":49,"line_end":49,"column_start":1,"column_end":140}},{"value":"/     Lanczos with window 3","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":74654,"byte_end":74683,"line_start":50,"line_end":50,"column_start":1,"column_end":30}},{"value":"/   </div>","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":74684,"byte_end":74696,"line_start":51,"line_end":51,"column_start":1,"column_end":13}},{"value":"/ </div>","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":74697,"byte_end":74707,"line_start":52,"line_end":52,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":74708,"byte_end":74711,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ## Speed","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":74712,"byte_end":74724,"line_start":54,"line_end":54,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":74725,"byte_end":74728,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ Time required to create each of the examples above, tested on an Intel","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":74729,"byte_end":74803,"line_start":56,"line_end":56,"column_start":1,"column_end":75}},{"value":"/ i7-4770 CPU with Rust 1.37 in release mode:","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":74804,"byte_end":74851,"line_start":57,"line_end":57,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":74852,"byte_end":74855,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ <table style=\"width: auto;\">","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":74856,"byte_end":74888,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/   <tr>","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":74889,"byte_end":74899,"line_start":60,"line_end":60,"column_start":1,"column_end":11}},{"value":"/     <th>Nearest</th>","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":74900,"byte_end":74924,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/     <td>31 ms</td>","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":74925,"byte_end":74947,"line_start":62,"line_end":62,"column_start":1,"column_end":23}},{"value":"/   </tr>","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":74948,"byte_end":74959,"line_start":63,"line_end":63,"column_start":1,"column_end":12}},{"value":"/   <tr>","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":74960,"byte_end":74970,"line_start":64,"line_end":64,"column_start":1,"column_end":11}},{"value":"/     <th>Triangle</th>","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":74971,"byte_end":74996,"line_start":65,"line_end":65,"column_start":1,"column_end":26}},{"value":"/     <td>414 ms</td>","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":74997,"byte_end":75020,"line_start":66,"line_end":66,"column_start":1,"column_end":24}},{"value":"/   </tr>","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":75021,"byte_end":75032,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/   <tr>","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":75033,"byte_end":75043,"line_start":68,"line_end":68,"column_start":1,"column_end":11}},{"value":"/     <th>CatmullRom</th>","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":75044,"byte_end":75071,"line_start":69,"line_end":69,"column_start":1,"column_end":28}},{"value":"/     <td>817 ms</td>","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":75072,"byte_end":75095,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/   </tr>","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":75096,"byte_end":75107,"line_start":71,"line_end":71,"column_start":1,"column_end":12}},{"value":"/   <tr>","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":75108,"byte_end":75118,"line_start":72,"line_end":72,"column_start":1,"column_end":11}},{"value":"/     <th>Gaussian</th>","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":75119,"byte_end":75144,"line_start":73,"line_end":73,"column_start":1,"column_end":26}},{"value":"/     <td>1180 ms</td>","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":75145,"byte_end":75169,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/   </tr>","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":75170,"byte_end":75181,"line_start":75,"line_end":75,"column_start":1,"column_end":12}},{"value":"/   <tr>","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":75182,"byte_end":75192,"line_start":76,"line_end":76,"column_start":1,"column_end":11}},{"value":"/     <th>Lanczos3</th>","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":75193,"byte_end":75218,"line_start":77,"line_end":77,"column_start":1,"column_end":26}},{"value":"/     <td>1170 ms</td>","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":75219,"byte_end":75243,"line_start":78,"line_end":78,"column_start":1,"column_end":25}},{"value":"/   </tr>","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":75244,"byte_end":75255,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/ </table>","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":75256,"byte_end":75268,"line_start":80,"line_end":80,"column_start":1,"column_end":13}}]},{"kind":"Function","id":{"krate":0,"index":362},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":84989,"byte_end":84998,"line_start":393,"line_end":393,"column_start":8,"column_end":17},"name":"thumbnail","qualname":"::imageops::sample::thumbnail","value":"pub fn thumbnail<I, P, S>(&I, u32, u32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImageView<Pixel = P>, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + Enlargeable + 'static","parent":null,"children":[],"decl_id":null,"docs":" Resize the supplied image to the specific dimensions.","sig":null,"attributes":[{"value":"/ Resize the supplied image to the specific dimensions.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":84243,"byte_end":84300,"line_start":381,"line_end":381,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":84301,"byte_end":84304,"line_start":382,"line_end":382,"column_start":1,"column_end":4}},{"value":"/ For downscaling, this method uses a fast integer algorithm where each source pixel contributes","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":84305,"byte_end":84403,"line_start":383,"line_end":383,"column_start":1,"column_end":99}},{"value":"/ to exactly one target pixel.  May give aliasing artifacts if new size is close to old size.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":84404,"byte_end":84499,"line_start":384,"line_end":384,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":84500,"byte_end":84503,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ In case the current width is smaller than the new width or similar for the height, another","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":84504,"byte_end":84598,"line_start":386,"line_end":386,"column_start":1,"column_end":95}},{"value":"/ strategy is used instead.  For each pixel in the output, a rectangular region of the input is","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":84599,"byte_end":84696,"line_start":387,"line_end":387,"column_start":1,"column_end":98}},{"value":"/ determined, just as previously.  But when no input pixel is part of this region, the nearest","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":84697,"byte_end":84793,"line_start":388,"line_end":388,"column_start":1,"column_end":97}},{"value":"/ pixels are interpolated instead.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":84794,"byte_end":84830,"line_start":389,"line_end":389,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":84831,"byte_end":84834,"line_start":390,"line_end":390,"column_start":1,"column_end":4}},{"value":"/ For speed reasons, all interpolation is performed linearly over the colour values.  It will not","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":84835,"byte_end":84934,"line_start":391,"line_end":391,"column_start":1,"column_end":100}},{"value":"/ take the pixel colour spaces into account.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":84935,"byte_end":84981,"line_start":392,"line_end":392,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":385},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":92857,"byte_end":92866,"line_start":632,"line_end":632,"column_start":8,"column_end":17},"name":"filter3x3","qualname":"::imageops::sample::filter3x3","value":"pub fn filter3x3<I, P, S>(&I, &[f32]) -> ImageBuffer<P, Vec<S>> where\nI: GenericImageView<Pixel = P>, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + 'static","parent":null,"children":[],"decl_id":null,"docs":" Perform a 3x3 box filter on the supplied image.\n ```kernel``` is an array of the filter weights of length 9.\n","sig":null,"attributes":[{"value":"/ Perform a 3x3 box filter on the supplied image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":92734,"byte_end":92785,"line_start":630,"line_end":630,"column_start":1,"column_end":52}},{"value":"/ ```kernel``` is an array of the filter weights of length 9.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":92786,"byte_end":92849,"line_start":631,"line_end":631,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":390},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":95293,"byte_end":95299,"line_start":712,"line_end":712,"column_start":8,"column_end":14},"name":"resize","qualname":"::imageops::sample::resize","value":"pub fn resize<I: GenericImageView>(&I, u32, u32, FilterType)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static, <I::Pixel as Pixel>::Subpixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Resize the supplied image to the specified dimensions.\n ```nwidth``` and ```nheight``` are the new dimensions.\n ```filter``` is the sampling filter to use.\n","sig":null,"attributes":[{"value":"/ Resize the supplied image to the specified dimensions.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":95120,"byte_end":95178,"line_start":709,"line_end":709,"column_start":1,"column_end":59}},{"value":"/ ```nwidth``` and ```nheight``` are the new dimensions.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":95179,"byte_end":95237,"line_start":710,"line_end":710,"column_start":1,"column_end":59}},{"value":"/ ```filter``` is the sampling filter to use.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":95238,"byte_end":95285,"line_start":711,"line_end":711,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":392},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":96425,"byte_end":96429,"line_start":751,"line_end":751,"column_start":8,"column_end":12},"name":"blur","qualname":"::imageops::sample::blur","value":"pub fn blur<I: GenericImageView>(&I, f32)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Performs a Gaussian blur on the supplied image.\n ```sigma``` is a measure of how much to blur by.\n","sig":null,"attributes":[{"value":"/ Performs a Gaussian blur on the supplied image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":96313,"byte_end":96364,"line_start":749,"line_end":749,"column_start":1,"column_end":52}},{"value":"/ ```sigma``` is a measure of how much to blur by.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":96365,"byte_end":96417,"line_start":750,"line_end":750,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":395},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":97252,"byte_end":97261,"line_start":778,"line_end":778,"column_start":8,"column_end":17},"name":"unsharpen","qualname":"::imageops::sample::unsharpen","value":"pub fn unsharpen<I, P, S>(&I, f32, i32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImageView<Pixel = P>, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + 'static","parent":null,"children":[],"decl_id":null,"docs":" Performs an unsharpen mask on the supplied image.\n ```sigma``` is the amount to blur the image by.\n ```threshold``` is the threshold for the difference between","sig":null,"attributes":[{"value":"/ Performs an unsharpen mask on the supplied image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":96991,"byte_end":97044,"line_start":773,"line_end":773,"column_start":1,"column_end":54}},{"value":"/ ```sigma``` is the amount to blur the image by.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":97045,"byte_end":97096,"line_start":774,"line_end":774,"column_start":1,"column_end":52}},{"value":"/ ```threshold``` is the threshold for the difference between","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":97097,"byte_end":97160,"line_start":775,"line_end":775,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":97161,"byte_end":97164,"line_start":776,"line_end":776,"column_start":1,"column_end":4}},{"value":"/ See <https://en.wikipedia.org/wiki/Unsharp_masking#Digital_unsharp_masking>","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":97165,"byte_end":97244,"line_start":777,"line_end":777,"column_start":1,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":400},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":36908,"byte_end":36912,"line_start":33,"line_end":33,"column_start":8,"column_end":12},"name":"crop","qualname":"::imageops::crop","value":"pub fn crop<I: GenericImageView>(&mut I, u32, u32, u32, u32)\n-> SubImage<&mut I>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable view into an image\n","sig":null,"attributes":[{"value":"/ Return a mutable view into an image","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":36861,"byte_end":36900,"line_start":32,"line_end":32,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":402},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":37206,"byte_end":37214,"line_start":45,"line_end":45,"column_start":8,"column_end":16},"name":"crop_imm","qualname":"::imageops::crop_imm","value":"pub fn crop_imm<I: GenericImageView>(&I, u32, u32, u32, u32) -> SubImage<&I>","parent":null,"children":[],"decl_id":null,"docs":" Return an immutable view into an image\n","sig":null,"attributes":[{"value":"/ Return an immutable view into an image","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":37156,"byte_end":37198,"line_start":44,"line_end":44,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":406},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":39998,"byte_end":40012,"line_start":129,"line_end":129,"column_start":8,"column_end":22},"name":"overlay_bounds","qualname":"::imageops::overlay_bounds","value":"pub fn overlay_bounds((u32, u32), (u32, u32), u32, u32) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Calculate the region that can be copied from top to bottom.","sig":null,"attributes":[{"value":"/ Calculate the region that can be copied from top to bottom.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":37826,"byte_end":37889,"line_start":74,"line_end":74,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":37890,"byte_end":37893,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ Given image size of bottom and top image, and a point at which we want to place the top image","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":37894,"byte_end":37991,"line_start":76,"line_end":76,"column_start":1,"column_end":98}},{"value":"/ onto the bottom image, how large can we be? Have to wary of the following issues:","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":37992,"byte_end":38077,"line_start":77,"line_end":77,"column_start":1,"column_end":86}},{"value":"/ * Top might be larger than bottom","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":38078,"byte_end":38115,"line_start":78,"line_end":78,"column_start":1,"column_end":38}},{"value":"/ * Overflows in the computation","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":38116,"byte_end":38150,"line_start":79,"line_end":79,"column_start":1,"column_end":35}},{"value":"/ * Coordinates could be completely out of bounds","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":38151,"byte_end":38202,"line_start":80,"line_end":80,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":38203,"byte_end":38206,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ The main idea is to make use of inequalities provided by the nature of `saturing_add` and","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":38207,"byte_end":38300,"line_start":82,"line_end":82,"column_start":1,"column_end":94}},{"value":"/ `saturating_sub`. These intrinsically validate that all resulting coordinates will be in bounds","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":38301,"byte_end":38400,"line_start":83,"line_end":83,"column_start":1,"column_end":100}},{"value":"/ for both images.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":38401,"byte_end":38421,"line_start":84,"line_end":84,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":38422,"byte_end":38425,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ We want that all these coordinate accesses are safe:","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":38426,"byte_end":38482,"line_start":86,"line_end":86,"column_start":1,"column_end":57}},{"value":"/ 1. `bottom.get_pixel(x + [0..x_range), y + [0..y_range))`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":38483,"byte_end":38544,"line_start":87,"line_end":87,"column_start":1,"column_end":62}},{"value":"/ 2. `top.get_pixel([0..x_range), [0..y_range))`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":38545,"byte_end":38595,"line_start":88,"line_end":88,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":38596,"byte_end":38599,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ Proof that the function provides the necessary bounds for width. Note that all unaugmented math","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":38600,"byte_end":38699,"line_start":90,"line_end":90,"column_start":1,"column_end":100}},{"value":"/ operations are to be read in standard arithmetic, not integer arithmetic. Since no direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":38700,"byte_end":38793,"line_start":91,"line_end":91,"column_start":1,"column_end":94}},{"value":"/ integer arithmetic occurs in the implementation, this is unambiguous.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":38794,"byte_end":38867,"line_start":92,"line_end":92,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":38868,"byte_end":38871,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":38872,"byte_end":38883,"line_start":94,"line_end":94,"column_start":1,"column_end":12}},{"value":"/ Three short notes/lemmata:","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":38884,"byte_end":38914,"line_start":95,"line_end":95,"column_start":1,"column_end":31}},{"value":"/ - Iff `(a - b) <= 0` then `a.saturating_sub(b) = 0`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":38915,"byte_end":38970,"line_start":96,"line_end":96,"column_start":1,"column_end":56}},{"value":"/ - Iff `(a - b) >= 0` then `a.saturating_sub(b) = a - b`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":38971,"byte_end":39030,"line_start":97,"line_end":97,"column_start":1,"column_end":60}},{"value":"/ - If  `a <= c` then `a.saturating_sub(b) <= c.saturating_sub(b)`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":39031,"byte_end":39099,"line_start":98,"line_end":98,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":39100,"byte_end":39103,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ 1.1 We show that if `bottom_width <= x`, then `x_range = 0` therefore `x + [0..x_range)` is empty.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":39104,"byte_end":39206,"line_start":100,"line_end":100,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":39207,"byte_end":39210,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ x_range","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":39211,"byte_end":39222,"line_start":102,"line_end":102,"column_start":1,"column_end":12}},{"value":"/  = (top_width.saturating_add(x).min(bottom_width)).saturating_sub(x)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":39223,"byte_end":39295,"line_start":103,"line_end":103,"column_start":1,"column_end":73}},{"value":"/ <= bottom_width.saturating_sub(x)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":39296,"byte_end":39333,"line_start":104,"line_end":104,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":39334,"byte_end":39337,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ bottom_width <= x","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":39338,"byte_end":39359,"line_start":106,"line_end":106,"column_start":1,"column_end":22}},{"value":"/ <==> bottom_width - x <= 0","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":39360,"byte_end":39390,"line_start":107,"line_end":107,"column_start":1,"column_end":31}},{"value":"/ <==> bottom_width.saturating_sub(x) = 0","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":39391,"byte_end":39434,"line_start":108,"line_end":108,"column_start":1,"column_end":44}},{"value":"/  ==> x_range <= 0","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":39435,"byte_end":39456,"line_start":109,"line_end":109,"column_start":1,"column_end":22}},{"value":"/  ==> x_range  = 0","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":39457,"byte_end":39478,"line_start":110,"line_end":110,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":39479,"byte_end":39482,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ 1.2 If `x < bottom_width` then `x + x_range < bottom_width`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":39483,"byte_end":39546,"line_start":112,"line_end":112,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":39547,"byte_end":39550,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ x + x_range","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":39551,"byte_end":39566,"line_start":114,"line_end":114,"column_start":1,"column_end":16}},{"value":"/ <= x + bottom_width.saturating_sub(x)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":39567,"byte_end":39608,"line_start":115,"line_end":115,"column_start":1,"column_end":42}},{"value":"/  = x + (bottom_width - x)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":39609,"byte_end":39638,"line_start":116,"line_end":116,"column_start":1,"column_end":30}},{"value":"/  = bottom_width","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":39639,"byte_end":39658,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":39659,"byte_end":39662,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ 2. We show that `x_range <= top_width`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":39663,"byte_end":39705,"line_start":119,"line_end":119,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":39706,"byte_end":39709,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ x_range","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":39710,"byte_end":39721,"line_start":121,"line_end":121,"column_start":1,"column_end":12}},{"value":"/  = (top_width.saturating_add(x).min(bottom_width)).saturating_sub(x)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":39722,"byte_end":39794,"line_start":122,"line_end":122,"column_start":1,"column_end":73}},{"value":"/ <= top_width.saturating_add(x).saturating_sub(x)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":39795,"byte_end":39847,"line_start":123,"line_end":123,"column_start":1,"column_end":53}},{"value":"/ <= (top_wdith + x).saturating_sub(x)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":39848,"byte_end":39888,"line_start":124,"line_end":124,"column_start":1,"column_end":41}},{"value":"/  = top_width (due to `top_width >= 0` and `x >= 0`)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":39889,"byte_end":39944,"line_start":125,"line_end":125,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":39945,"byte_end":39952,"line_start":126,"line_end":126,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":39953,"byte_end":39956,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ Proof is the same for height.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":39957,"byte_end":39990,"line_start":128,"line_end":128,"column_start":1,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":407},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":40526,"byte_end":40533,"line_start":147,"line_end":147,"column_start":8,"column_end":15},"name":"overlay","qualname":"::imageops::overlay","value":"pub fn overlay<I, J>(&mut I, &J, u32, u32) where I: GenericImage,\nJ: GenericImageView<Pixel = I::Pixel>","parent":null,"children":[],"decl_id":null,"docs":" Overlay an image at a given coordinate (x, y)\n","sig":null,"attributes":[{"value":"/ Overlay an image at a given coordinate (x, y)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":40469,"byte_end":40518,"line_start":146,"line_end":146,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":410},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":41552,"byte_end":41556,"line_start":183,"line_end":183,"column_start":8,"column_end":12},"name":"tile","qualname":"::imageops::tile","value":"pub fn tile<I, J>(&mut I, &J) where I: GenericImage, J: GenericImageView<Pixel\n= I::Pixel>","parent":null,"children":[],"decl_id":null,"docs":" Tile an image by repeating it multiple times","sig":null,"attributes":[{"value":"/ Tile an image by repeating it multiple times","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":41192,"byte_end":41240,"line_start":169,"line_end":169,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":41241,"byte_end":41244,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":41245,"byte_end":41259,"line_start":171,"line_end":171,"column_start":1,"column_end":15}},{"value":"/ ```no_run","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":41260,"byte_end":41273,"line_start":172,"line_end":172,"column_start":1,"column_end":14}},{"value":"/ use image::{RgbaImage};","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":41274,"byte_end":41301,"line_start":173,"line_end":173,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":41302,"byte_end":41305,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":41306,"byte_end":41321,"line_start":175,"line_end":175,"column_start":1,"column_end":16}},{"value":"/      let mut img = RgbaImage::new(1920, 1080);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":41322,"byte_end":41372,"line_start":176,"line_end":176,"column_start":1,"column_end":51}},{"value":"/      let tile = image::open(\"tile.png\").unwrap();","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":41373,"byte_end":41426,"line_start":177,"line_end":177,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":41427,"byte_end":41430,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/      image::imageops::tile(&mut img, &tile);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":41431,"byte_end":41479,"line_start":179,"line_end":179,"column_start":1,"column_end":49}},{"value":"/      img.save(\"tiled_wallpaper.png\").unwrap();","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":41480,"byte_end":41530,"line_start":180,"line_end":180,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":41531,"byte_end":41536,"line_start":181,"line_end":181,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":41537,"byte_end":41544,"line_start":182,"line_end":182,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":413},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":42353,"byte_end":42370,"line_start":211,"line_end":211,"column_start":8,"column_end":25},"name":"vertical_gradient","qualname":"::imageops::vertical_gradient","value":"pub fn vertical_gradient<S, P, I>(&mut I, &P, &P) where I: GenericImage<Pixel\n= P>, P: Pixel<Subpixel = S> + 'static, S: Primitive + Lerp + 'static","parent":null,"children":[],"decl_id":null,"docs":" Fill the image with a linear vertical gradient\n \n This function assumes a linear color space.\n \n # Examples\n ```no_run\n use image::{Rgba, RgbaImage, Pixel};\n \n fn main() {\n     let mut img = RgbaImage::new(100, 100);\n     let start = Rgba::from_slice(&[0, 128, 0, 0]);\n     let end = Rgba::from_slice(&[255, 255, 255, 255]);\n \n     image::imageops::vertical_gradient(&mut img, start, end);\n     img.save(\"vertical_gradient.png\").unwrap();\n }\n","sig":null,"attributes":[{"value":"/ Fill the image with a linear vertical gradient","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":41855,"byte_end":41905,"line_start":195,"line_end":195,"column_start":1,"column_end":51}},{"value":"/ ","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":41906,"byte_end":41910,"line_start":196,"line_end":196,"column_start":1,"column_end":5}},{"value":"/ This function assumes a linear color space.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":41911,"byte_end":41958,"line_start":197,"line_end":197,"column_start":1,"column_end":48}},{"value":"/ ","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":41959,"byte_end":41963,"line_start":198,"line_end":198,"column_start":1,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":41964,"byte_end":41978,"line_start":199,"line_end":199,"column_start":1,"column_end":15}},{"value":"/ ```no_run","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":41979,"byte_end":41992,"line_start":200,"line_end":200,"column_start":1,"column_end":14}},{"value":"/ use image::{Rgba, RgbaImage, Pixel};","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":41993,"byte_end":42033,"line_start":201,"line_end":201,"column_start":1,"column_end":41}},{"value":"/ ","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":42034,"byte_end":42038,"line_start":202,"line_end":202,"column_start":1,"column_end":5}},{"value":"/ fn main() {","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":42039,"byte_end":42054,"line_start":203,"line_end":203,"column_start":1,"column_end":16}},{"value":"/     let mut img = RgbaImage::new(100, 100);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":42055,"byte_end":42102,"line_start":204,"line_end":204,"column_start":1,"column_end":48}},{"value":"/     let start = Rgba::from_slice(&[0, 128, 0, 0]);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":42103,"byte_end":42157,"line_start":205,"line_end":205,"column_start":1,"column_end":55}},{"value":"/     let end = Rgba::from_slice(&[255, 255, 255, 255]);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":42158,"byte_end":42216,"line_start":206,"line_end":206,"column_start":1,"column_end":59}},{"value":"/ ","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":42217,"byte_end":42221,"line_start":207,"line_end":207,"column_start":1,"column_end":5}},{"value":"/     image::imageops::vertical_gradient(&mut img, start, end);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":42222,"byte_end":42287,"line_start":208,"line_end":208,"column_start":1,"column_end":66}},{"value":"/     img.save(\"vertical_gradient.png\").unwrap();","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":42288,"byte_end":42339,"line_start":209,"line_end":209,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":42340,"byte_end":42345,"line_start":210,"line_end":210,"column_start":1,"column_end":6}}]},{"kind":"Function","id":{"krate":0,"index":418},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":43400,"byte_end":43419,"line_start":246,"line_end":246,"column_start":8,"column_end":27},"name":"horizontal_gradient","qualname":"::imageops::horizontal_gradient","value":"pub fn horizontal_gradient<S, P, I>(&mut I, &P, &P) where\nI: GenericImage<Pixel = P>, P: Pixel<Subpixel = S> + 'static, S: Primitive +\nLerp + 'static","parent":null,"children":[],"decl_id":null,"docs":" Fill the image with a linear horizontal gradient\n \n This function assumes a linear color space.","sig":null,"attributes":[{"value":"/ Fill the image with a linear horizontal gradient","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":42897,"byte_end":42949,"line_start":230,"line_end":230,"column_start":1,"column_end":53}},{"value":"/ ","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":42950,"byte_end":42954,"line_start":231,"line_end":231,"column_start":1,"column_end":5}},{"value":"/ This function assumes a linear color space.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":42955,"byte_end":43002,"line_start":232,"line_end":232,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":43003,"byte_end":43006,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":43007,"byte_end":43021,"line_start":234,"line_end":234,"column_start":1,"column_end":15}},{"value":"/ ```no_run","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":43022,"byte_end":43035,"line_start":235,"line_end":235,"column_start":1,"column_end":14}},{"value":"/ use image::{Rgba, RgbaImage, Pixel};","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":43036,"byte_end":43076,"line_start":236,"line_end":236,"column_start":1,"column_end":41}},{"value":"/ ","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":43077,"byte_end":43081,"line_start":237,"line_end":237,"column_start":1,"column_end":5}},{"value":"/ fn main() {","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":43082,"byte_end":43097,"line_start":238,"line_end":238,"column_start":1,"column_end":16}},{"value":"/     let mut img = RgbaImage::new(100, 100);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":43098,"byte_end":43145,"line_start":239,"line_end":239,"column_start":1,"column_end":48}},{"value":"/     let start = Rgba::from_slice(&[0, 128, 0, 0]);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":43146,"byte_end":43200,"line_start":240,"line_end":240,"column_start":1,"column_end":55}},{"value":"/     let end = Rgba::from_slice(&[255, 255, 255, 255]);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":43201,"byte_end":43259,"line_start":241,"line_end":241,"column_start":1,"column_end":59}},{"value":"/ ","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":43260,"byte_end":43264,"line_start":242,"line_end":242,"column_start":1,"column_end":5}},{"value":"/     image::imageops::horizontal_gradient(&mut img, start, end);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":43265,"byte_end":43332,"line_start":243,"line_end":243,"column_start":1,"column_end":68}},{"value":"/     img.save(\"horizontal_gradient.png\").unwrap();","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":43333,"byte_end":43386,"line_start":244,"line_end":244,"column_start":1,"column_end":54}},{"value":"/ }","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":43387,"byte_end":43392,"line_start":245,"line_end":245,"column_start":1,"column_end":6}}]},{"kind":"Function","id":{"krate":0,"index":423},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":44016,"byte_end":44023,"line_start":266,"line_end":266,"column_start":8,"column_end":15},"name":"replace","qualname":"::imageops::replace","value":"pub fn replace<I, J>(&mut I, &J, u32, u32) where I: GenericImage,\nJ: GenericImageView<Pixel = I::Pixel>","parent":null,"children":[],"decl_id":null,"docs":" Replace the contents of an image at a given coordinate (x, y)\n","sig":null,"attributes":[{"value":"/ Replace the contents of an image at a given coordinate (x, y)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":43943,"byte_end":44008,"line_start":265,"line_end":265,"column_start":1,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":426},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/mod.rs","parent":null,"children":[{"krate":0,"index":427},{"krate":0,"index":473},{"krate":0,"index":523}],"decl_id":null,"docs":" Input and output of images.\n","sig":null,"attributes":[{"value":"/ Input and output of images.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/mod.rs","byte_start":100222,"byte_end":100253,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":448},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":102450,"byte_end":102456,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"Reader","qualname":"::io::reader::Reader","value":"Reader {  }","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":451}],"decl_id":null,"docs":" A multi-format image reader.","sig":null,"attributes":[{"value":"/ A multi-format image reader.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":100651,"byte_end":100683,"line_start":12,"line_end":12,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":100684,"byte_end":100687,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Wraps an input reader to facilitate automatic detection of an image's format, appropriate","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":100688,"byte_end":100781,"line_start":14,"line_end":14,"column_start":1,"column_end":94}},{"value":"/ decoding method, and dispatches into the set of supported [`ImageDecoder`] implementations.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":100782,"byte_end":100877,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":100878,"byte_end":100881,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":100882,"byte_end":100894,"line_start":17,"line_end":17,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":100895,"byte_end":100898,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Opening a file, deducing the format based on the file path automatically, and trying to decode","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":100899,"byte_end":100997,"line_start":19,"line_end":19,"column_start":1,"column_end":99}},{"value":"/ the image contained can be performed by constructing the reader and immediately consuming it.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":100998,"byte_end":101095,"line_start":20,"line_end":20,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":101096,"byte_end":101099,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":101100,"byte_end":101113,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # use image::ImageError;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":101114,"byte_end":101142,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/ # use image::io::Reader;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":101143,"byte_end":101171,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), ImageError> {","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":101172,"byte_end":101215,"line_start":25,"line_end":25,"column_start":1,"column_end":44}},{"value":"/ let image = Reader::open(\"path/to/image.png\")?","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":101216,"byte_end":101266,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/     .decode()?;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":101267,"byte_end":101286,"line_start":27,"line_end":27,"column_start":1,"column_end":20}},{"value":"/ # Ok(()) }","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":101287,"byte_end":101301,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":101302,"byte_end":101309,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":101310,"byte_end":101313,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ It is also possible to make a guess based on the content. This is especially handy if the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":101314,"byte_end":101407,"line_start":31,"line_end":31,"column_start":1,"column_end":94}},{"value":"/ source is some blob in memory and you have constructed the reader in another way. Here is an","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":101408,"byte_end":101504,"line_start":32,"line_end":32,"column_start":1,"column_end":97}},{"value":"/ example with a `pnm` black-and-white subformat that encodes its pixel matrix with ascii values.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":101505,"byte_end":101604,"line_start":33,"line_end":33,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":101605,"byte_end":101608,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # use image::ImageError;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":101704,"byte_end":101732,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/ # use image::io::Reader;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":101733,"byte_end":101761,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), ImageError> {","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":101762,"byte_end":101805,"line_start":39,"line_end":39,"column_start":1,"column_end":44}},{"value":"/ use std::io::Cursor;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":101806,"byte_end":101830,"line_start":40,"line_end":40,"column_start":1,"column_end":25}},{"value":"/ use image::ImageFormat;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":101831,"byte_end":101858,"line_start":41,"line_end":41,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":101859,"byte_end":101862,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let raw_data = b\"P1 2 2\\n\\","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":101863,"byte_end":101893,"line_start":43,"line_end":43,"column_start":1,"column_end":31}},{"value":"/     0 1\\n\\","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":101894,"byte_end":101908,"line_start":44,"line_end":44,"column_start":1,"column_end":15}},{"value":"/     1 0\\n\";","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":101909,"byte_end":101924,"line_start":45,"line_end":45,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":101925,"byte_end":101928,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ let mut reader = Reader::new(Cursor::new(raw_data))","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":101929,"byte_end":101984,"line_start":47,"line_end":47,"column_start":1,"column_end":56}},{"value":"/     .with_guessed_format()","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":101985,"byte_end":102015,"line_start":48,"line_end":48,"column_start":1,"column_end":31}},{"value":"/     .expect(\"Cursor io never fails\");","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":102016,"byte_end":102057,"line_start":49,"line_end":49,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(reader.format(), Some(ImageFormat::Pnm));","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":102058,"byte_end":102114,"line_start":50,"line_end":50,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":102115,"byte_end":102118,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ let image = reader.decode()?;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":102119,"byte_end":102152,"line_start":52,"line_end":52,"column_start":1,"column_end":34}},{"value":"/ # Ok(()) }","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":102153,"byte_end":102167,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":102168,"byte_end":102175,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":102176,"byte_end":102179,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ As a final fallback or if only a specific format must be used, the reader always allows manual","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":102180,"byte_end":102278,"line_start":56,"line_end":56,"column_start":1,"column_end":99}},{"value":"/ specification of the supposed image format with [`set_format`].","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":102279,"byte_end":102346,"line_start":57,"line_end":57,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":102347,"byte_end":102350,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ [`set_format`]: #method.set_format","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":102351,"byte_end":102389,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/ [`ImageDecoder`]: ../trait.ImageDecoder.html","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":102390,"byte_end":102438,"line_start":60,"line_end":60,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":102977,"byte_end":102980,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"new","qualname":"<Reader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new image reader without a preset format.","sig":null,"attributes":[{"value":"/ Create a new image reader without a preset format.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":102620,"byte_end":102674,"line_start":69,"line_end":69,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":102679,"byte_end":102682,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ It is possible to guess the format based on the content of the read object with","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":102687,"byte_end":102770,"line_start":71,"line_end":71,"column_start":5,"column_end":88}},{"value":"/ [`with_guessed_format`], or to set the format directly with [`set_format`].","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":102775,"byte_end":102854,"line_start":72,"line_end":72,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":102859,"byte_end":102862,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`with_guessed_format`]: #method.with_guessed_format","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":102867,"byte_end":102923,"line_start":74,"line_end":74,"column_start":5,"column_end":61}},{"value":"/ [`set_format`]: method.set_format","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":102928,"byte_end":102965,"line_start":75,"line_end":75,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":103150,"byte_end":103161,"line_start":84,"line_end":84,"column_start":12,"column_end":23},"name":"with_format","qualname":"<Reader<R>>::with_format","value":"pub fn with_format(R, ImageFormat) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a reader with specified format.\n","sig":null,"attributes":[{"value":"/ Construct a reader with specified format.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":103093,"byte_end":103138,"line_start":83,"line_end":83,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":103355,"byte_end":103361,"line_start":92,"line_end":92,"column_start":12,"column_end":18},"name":"format","qualname":"<Reader<R>>::format","value":"pub fn format(&Self) -> Option<ImageFormat>","parent":null,"children":[],"decl_id":null,"docs":" Get the currently determined format.\n","sig":null,"attributes":[{"value":"/ Get the currently determined format.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":103303,"byte_end":103343,"line_start":91,"line_end":91,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":103496,"byte_end":103506,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"set_format","qualname":"<Reader<R>>::set_format","value":"pub fn set_format(&mut Self, ImageFormat)","parent":null,"children":[],"decl_id":null,"docs":" Supply the format as which to interpret the read image.\n","sig":null,"attributes":[{"value":"/ Supply the format as which to interpret the read image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":103425,"byte_end":103484,"line_start":96,"line_end":96,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":103836,"byte_end":103848,"line_start":105,"line_end":105,"column_start":12,"column_end":24},"name":"clear_format","qualname":"<Reader<R>>::clear_format","value":"pub fn clear_format(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove the current information on the image format.","sig":null,"attributes":[{"value":"/ Remove the current information on the image format.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":103588,"byte_end":103643,"line_start":101,"line_end":101,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":103648,"byte_end":103651,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ Note that many operations require format information to be present and will return e.g. an","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":103656,"byte_end":103750,"line_start":103,"line_end":103,"column_start":5,"column_end":99}},{"value":"/ `ImageError::Unsupported` when the image format has not been set.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":103755,"byte_end":103824,"line_start":104,"line_end":104,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":103935,"byte_end":103945,"line_start":110,"line_end":110,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Reader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwrap the reader.\n","sig":null,"attributes":[{"value":"/ Unwrap the reader.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":103901,"byte_end":103923,"line_start":109,"line_end":109,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":104428,"byte_end":104432,"line_start":124,"line_end":124,"column_start":12,"column_end":16},"name":"open","qualname":"<Reader<BufReader<File>>>::open","value":"pub fn open<P>(P) -> io::Result<Self> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Open a file to read, format will be guessed from path.","sig":null,"attributes":[{"value":"/ Open a file to read, format will be guessed from path.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":104022,"byte_end":104080,"line_start":116,"line_end":116,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":104085,"byte_end":104088,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This will not attempt any io operation on the opened file.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":104093,"byte_end":104155,"line_start":118,"line_end":118,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":104160,"byte_end":104163,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ If you want to inspect the content for a better guess on the format, which does not depend","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":104168,"byte_end":104262,"line_start":120,"line_end":120,"column_start":5,"column_end":99}},{"value":"/ on file extensions, follow this call with a call to [`with_guessed_format`].","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":104267,"byte_end":104347,"line_start":121,"line_end":121,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":104352,"byte_end":104355,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ [`with_guessed_format`]: #method.with_guessed_format","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":104360,"byte_end":104416,"line_start":123,"line_end":123,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":106074,"byte_end":106093,"line_start":166,"line_end":166,"column_start":12,"column_end":31},"name":"with_guessed_format","qualname":"<Reader<R>>::with_guessed_format","value":"pub fn with_guessed_format(Self) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Make a format guess based on the content, replacing it on success.","sig":null,"attributes":[{"value":"/ Make a format guess based on the content, replacing it on success.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":104800,"byte_end":104870,"line_start":138,"line_end":138,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":104875,"byte_end":104878,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok` with the guess if no io error occurs. Additionally, replaces the current","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":104883,"byte_end":104972,"line_start":140,"line_end":140,"column_start":5,"column_end":94}},{"value":"/ format if the guess was successful. If the guess was unable to determine a format then","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":104977,"byte_end":105067,"line_start":141,"line_end":141,"column_start":5,"column_end":95}},{"value":"/ the current format of the reader is unchanged.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":105072,"byte_end":105122,"line_start":142,"line_end":142,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":105127,"byte_end":105130,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the underlying reader fails. The format is unchanged. The error is a","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":105135,"byte_end":105227,"line_start":144,"line_end":144,"column_start":5,"column_end":97}},{"value":"/ `std::io::Error` and not `ImageError` since the only error case is an error when the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":105232,"byte_end":105320,"line_start":145,"line_end":145,"column_start":5,"column_end":93}},{"value":"/ underlying reader seeks.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":105325,"byte_end":105353,"line_start":146,"line_end":146,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":105358,"byte_end":105361,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ When an error occurs, the reader may not have been properly reset and it is potentially","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":105366,"byte_end":105457,"line_start":148,"line_end":148,"column_start":5,"column_end":96}},{"value":"/ hazardous to continue with more io.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":105462,"byte_end":105501,"line_start":149,"line_end":149,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":105506,"byte_end":105509,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ ## Usage","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":105514,"byte_end":105526,"line_start":151,"line_end":151,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":105531,"byte_end":105534,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This supplements the path based type deduction from [`open`](Reader::open) with content based deduction.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":105539,"byte_end":105647,"line_start":153,"line_end":153,"column_start":5,"column_end":113}},{"value":"/ This is more common in Linux and UNIX operating systems and also helpful if the path can","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":105652,"byte_end":105744,"line_start":154,"line_end":154,"column_start":5,"column_end":97}},{"value":"/ not be directly controlled.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":105749,"byte_end":105780,"line_start":155,"line_end":155,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":105785,"byte_end":105788,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":105793,"byte_end":105806,"line_start":157,"line_end":157,"column_start":5,"column_end":18}},{"value":"/ # use image::ImageError;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":105811,"byte_end":105839,"line_start":158,"line_end":158,"column_start":5,"column_end":33}},{"value":"/ # use image::io::Reader;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":105844,"byte_end":105872,"line_start":159,"line_end":159,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), ImageError> {","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":105877,"byte_end":105920,"line_start":160,"line_end":160,"column_start":5,"column_end":48}},{"value":"/ let image = Reader::open(\"image.unknown\")?","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":105925,"byte_end":105971,"line_start":161,"line_end":161,"column_start":5,"column_end":51}},{"value":"/     .with_guessed_format()?","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":105976,"byte_end":106007,"line_start":162,"line_end":162,"column_start":5,"column_end":36}},{"value":"/     .decode()?;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":106012,"byte_end":106031,"line_start":163,"line_end":163,"column_start":5,"column_end":24}},{"value":"/ # Ok(()) }","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":106036,"byte_end":106050,"line_start":164,"line_end":164,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":106055,"byte_end":106062,"line_start":165,"line_end":165,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":107051,"byte_end":107066,"line_start":192,"line_end":192,"column_start":12,"column_end":27},"name":"into_dimensions","qualname":"<Reader<R>>::into_dimensions","value":"pub fn into_dimensions(Self) -> ImageResult<(u32, u32)>","parent":null,"children":[],"decl_id":null,"docs":" Read the image dimensions.","sig":null,"attributes":[{"value":"/ Read the image dimensions.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":106838,"byte_end":106868,"line_start":187,"line_end":187,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":106873,"byte_end":106876,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ Uses the current format to construct the correct reader for the format.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":106881,"byte_end":106956,"line_start":189,"line_end":189,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":106961,"byte_end":106964,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ If no format was determined, returns an `ImageError::Unsupported`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":106969,"byte_end":107039,"line_start":191,"line_end":191,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":107460,"byte_end":107466,"line_start":202,"line_end":202,"column_start":12,"column_end":18},"name":"decode","qualname":"<Reader<R>>::decode","value":"pub fn decode(Self) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Read the image (replaces `load`).","sig":null,"attributes":[{"value":"/ Read the image (replaces `load`).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":107240,"byte_end":107277,"line_start":197,"line_end":197,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":107282,"byte_end":107285,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ Uses the current format to construct the correct reader for the format.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":107290,"byte_end":107365,"line_start":199,"line_end":199,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":107370,"byte_end":107373,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ If no format was determined, returns an `ImageError::Unsupported`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":107378,"byte_end":107448,"line_start":201,"line_end":201,"column_start":5,"column_end":75}}]},{"kind":"Function","id":{"krate":0,"index":505},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/free_functions.rs","byte_start":109675,"byte_end":109679,"line_start":67,"line_end":67,"column_start":8,"column_end":12},"name":"load","qualname":"::io::free_functions::load","value":"pub fn load<R: BufRead + Seek>(R, ImageFormat) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a Reader","sig":null,"attributes":[{"value":"/ Create a new image from a Reader","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/free_functions.rs","byte_start":109462,"byte_end":109498,"line_start":60,"line_end":60,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/free_functions.rs","byte_start":109499,"byte_end":109502,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/free_functions.rs","byte_start":109503,"byte_end":109549,"line_start":62,"line_end":62,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/free_functions.rs","byte_start":109550,"byte_end":109553,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/free_functions.rs","byte_start":109554,"byte_end":109595,"line_start":64,"line_end":64,"column_start":1,"column_end":42}},{"value":"allow(unused_variables)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/free_functions.rs","byte_start":109596,"byte_end":109622,"line_start":65,"line_end":65,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":519},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/free_functions.rs","byte_start":119442,"byte_end":119454,"line_start":285,"line_end":285,"column_start":8,"column_end":20},"name":"guess_format","qualname":"::io::free_functions::guess_format","value":"pub fn guess_format(&[u8]) -> ImageResult<ImageFormat>","parent":null,"children":[],"decl_id":null,"docs":" Guess image format from memory block","sig":null,"attributes":[{"value":"/ Guess image format from memory block","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/free_functions.rs","byte_start":119181,"byte_end":119221,"line_start":280,"line_end":280,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/free_functions.rs","byte_start":119222,"byte_end":119225,"line_start":281,"line_end":281,"column_start":1,"column_end":4}},{"value":"/ Makes an educated guess about the image format based on the Magic Bytes at the beginning.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/free_functions.rs","byte_start":119226,"byte_end":119319,"line_start":282,"line_end":282,"column_start":1,"column_end":94}},{"value":"/ TGA is not supported by this function.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/free_functions.rs","byte_start":119320,"byte_end":119362,"line_start":283,"line_end":283,"column_start":1,"column_end":43}},{"value":"/ This is not to be trusted on the validity of the whole memory block","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/free_functions.rs","byte_start":119363,"byte_end":119434,"line_start":284,"line_end":284,"column_start":1,"column_end":72}}]},{"kind":"Mod","id":{"krate":0,"index":524},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"flat","qualname":"::flat","value":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","parent":null,"children":[{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":4263},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":2624},{"krate":0,"index":2632},{"krate":0,"index":2629},{"krate":0,"index":2635},{"krate":0,"index":2655},{"krate":0,"index":2654},{"krate":0,"index":2652},{"krate":0,"index":2648},{"krate":0,"index":2649},{"krate":0,"index":2645},{"krate":0,"index":2646},{"krate":0,"index":2642},{"krate":0,"index":2657},{"krate":0,"index":2683},{"krate":0,"index":2682},{"krate":0,"index":2680},{"krate":0,"index":2676},{"krate":0,"index":2677},{"krate":0,"index":2673},{"krate":0,"index":2674},{"krate":0,"index":2663},{"krate":0,"index":2661},{"krate":0,"index":551},{"krate":0,"index":574},{"krate":0,"index":578},{"krate":0,"index":620},{"krate":0,"index":2685},{"krate":0,"index":2694},{"krate":0,"index":2690},{"krate":0,"index":2698},{"krate":0,"index":2707},{"krate":0,"index":2703},{"krate":0,"index":2711},{"krate":0,"index":2733},{"krate":0,"index":2732},{"krate":0,"index":2730},{"krate":0,"index":2726},{"krate":0,"index":2727},{"krate":0,"index":2723},{"krate":0,"index":2724},{"krate":0,"index":2720},{"krate":0,"index":2735},{"krate":0,"index":2758},{"krate":0,"index":2757},{"krate":0,"index":2755},{"krate":0,"index":2752},{"krate":0,"index":2753},{"krate":0,"index":2749},{"krate":0,"index":2750},{"krate":0,"index":2746},{"krate":0,"index":625},{"krate":0,"index":638},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":657},{"krate":0,"index":661},{"krate":0,"index":673},{"krate":0,"index":685},{"krate":0,"index":693},{"krate":0,"index":698},{"krate":0,"index":700},{"krate":0,"index":701}],"decl_id":null,"docs":" Image representations for ffi.","sig":null,"attributes":[{"value":"/ Image representations for ffi.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":120230,"byte_end":120264,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":120265,"byte_end":120268,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":120269,"byte_end":120280,"line_start":3,"line_end":3,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":120281,"byte_end":120284,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Imagine you want to offer a very simple ffi interface: The caller provides an image buffer and","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":120285,"byte_end":120383,"line_start":5,"line_end":5,"column_start":1,"column_end":99}},{"value":"/ your program creates a thumbnail from it and dumps that image as `png`. This module is designed","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":120384,"byte_end":120483,"line_start":6,"line_end":6,"column_start":1,"column_end":100}},{"value":"/ to help you transition from raw memory data to Rust representation.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":120484,"byte_end":120555,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":120556,"byte_end":120559,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":120560,"byte_end":120573,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"/ use std::ptr;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":120574,"byte_end":120591,"line_start":10,"line_end":10,"column_start":1,"column_end":18}},{"value":"/ use std::slice;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":120592,"byte_end":120611,"line_start":11,"line_end":11,"column_start":1,"column_end":20}},{"value":"/ use image::Rgb;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":120612,"byte_end":120631,"line_start":12,"line_end":12,"column_start":1,"column_end":20}},{"value":"/ use image::flat::{FlatSamples, SampleLayout};","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":120632,"byte_end":120681,"line_start":13,"line_end":13,"column_start":1,"column_end":50}},{"value":"/ use image::imageops::thumbnail;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":120682,"byte_end":120717,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":120718,"byte_end":120721,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ #[no_mangle]","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":120722,"byte_end":120738,"line_start":16,"line_end":16,"column_start":1,"column_end":17}},{"value":"/ pub extern \"C\" fn store_rgb8_compressed(","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":120739,"byte_end":120783,"line_start":17,"line_end":17,"column_start":1,"column_end":45}},{"value":"/     data: *const u8, len: usize,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":120784,"byte_end":120820,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/     layout: *const SampleLayout","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":120821,"byte_end":120856,"line_start":19,"line_end":19,"column_start":1,"column_end":36}},{"value":"/ )","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":120857,"byte_end":120862,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/     -> bool","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":120863,"byte_end":120878,"line_start":21,"line_end":21,"column_start":1,"column_end":16}},{"value":"/ {","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":120879,"byte_end":120884,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/     let samples = unsafe { slice::from_raw_parts(data, len) };","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":120885,"byte_end":120951,"line_start":23,"line_end":23,"column_start":1,"column_end":67}},{"value":"/     let layout = unsafe { ptr::read(layout) };","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":120952,"byte_end":121002,"line_start":24,"line_end":24,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":121003,"byte_end":121006,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/     let buffer = FlatSamples {","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":121007,"byte_end":121041,"line_start":26,"line_end":26,"column_start":1,"column_end":35}},{"value":"/         samples,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":121042,"byte_end":121062,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/         layout,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":121063,"byte_end":121082,"line_start":28,"line_end":28,"column_start":1,"column_end":20}},{"value":"/         color_hint: None,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":121083,"byte_end":121112,"line_start":29,"line_end":29,"column_start":1,"column_end":30}},{"value":"/     };","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":121113,"byte_end":121123,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":121124,"byte_end":121127,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     let view = match buffer.as_view::<Rgb<u8>>() {","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":121128,"byte_end":121182,"line_start":32,"line_end":32,"column_start":1,"column_end":55}},{"value":"/         Err(_) => return false, // Invalid layout.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":121183,"byte_end":121237,"line_start":33,"line_end":33,"column_start":1,"column_end":55}},{"value":"/         Ok(view) => view,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":121238,"byte_end":121267,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/     };","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":121268,"byte_end":121278,"line_start":35,"line_end":35,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":121279,"byte_end":121282,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     thumbnail(&view, 64, 64)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":121283,"byte_end":121315,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/         .save(\"output.png\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":121316,"byte_end":121347,"line_start":38,"line_end":38,"column_start":1,"column_end":32}},{"value":"/         .map(|_| true)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":121348,"byte_end":121374,"line_start":39,"line_end":39,"column_start":1,"column_end":27}},{"value":"/         .unwrap_or_else(|_| false)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":121375,"byte_end":121413,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/ }","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":121414,"byte_end":121419,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":121420,"byte_end":121427,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":121428,"byte_end":121431,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":2624},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":123422,"byte_end":123433,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"FlatSamples","qualname":"::flat::FlatSamples","value":"FlatSamples { samples, layout, color_hint }","parent":null,"children":[{"krate":0,"index":2626},{"krate":0,"index":2627},{"krate":0,"index":2628}],"decl_id":null,"docs":" A flat buffer over a (multi channel) image.","sig":null,"attributes":[{"value":"/ A flat buffer over a (multi channel) image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":121839,"byte_end":121886,"line_start":56,"line_end":56,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":121887,"byte_end":121890,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ In contrast to `ImageBuffer`, this representation of a sample collection is much more lenient","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":121891,"byte_end":121988,"line_start":58,"line_end":58,"column_start":1,"column_end":98}},{"value":"/ in the layout thereof. It also allows grouping by color planes instead of by pixel as long as","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":121989,"byte_end":122086,"line_start":59,"line_end":59,"column_start":1,"column_end":98}},{"value":"/ the strides of each extent are constant. This struct itself has no invariants on the strides","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":122087,"byte_end":122183,"line_start":60,"line_end":60,"column_start":1,"column_end":97}},{"value":"/ but not every possible configuration can be interpreted as a [`GenericImageView`] or","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":122184,"byte_end":122272,"line_start":61,"line_end":61,"column_start":1,"column_end":89}},{"value":"/ [`GenericImage`]. The methods [`as_view`] and [`as_view_mut`] construct the actual implementors","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":122273,"byte_end":122372,"line_start":62,"line_end":62,"column_start":1,"column_end":100}},{"value":"/ of these traits and perform necessary checks. To manually perform this and other layout checks","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":122373,"byte_end":122471,"line_start":63,"line_end":63,"column_start":1,"column_end":99}},{"value":"/ use [`is_normal`] or [`has_aliased_samples`].","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":122472,"byte_end":122521,"line_start":64,"line_end":64,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":122522,"byte_end":122525,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Instances can be constructed not only by hand. The buffer instances returned by library","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":122526,"byte_end":122617,"line_start":66,"line_end":66,"column_start":1,"column_end":92}},{"value":"/ functions such as [`ImageBuffer::as_flat_samples`] guarantee that the conversion to a generic","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":122618,"byte_end":122715,"line_start":67,"line_end":67,"column_start":1,"column_end":98}},{"value":"/ image or generic view succeeds. A very different constructor is [`with_monocolor`]. It uses a","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":122716,"byte_end":122813,"line_start":68,"line_end":68,"column_start":1,"column_end":98}},{"value":"/ single pixel as the backing storage for an arbitrarily sized read-only raster by mapping each","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":122814,"byte_end":122911,"line_start":69,"line_end":69,"column_start":1,"column_end":98}},{"value":"/ pixel to the same samples by setting some strides to `0`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":122912,"byte_end":122973,"line_start":70,"line_end":70,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":122974,"byte_end":122977,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ [`GenericImage`]: ../trait.GenericImage.html","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":122978,"byte_end":123026,"line_start":72,"line_end":72,"column_start":1,"column_end":49}},{"value":"/ [`GenericImageView`]: ../trait.GenericImageView.html","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":123027,"byte_end":123083,"line_start":73,"line_end":73,"column_start":1,"column_end":57}},{"value":"/ [`ImageBuffer::as_flat_samples`]: ../struct.ImageBuffer.html#method.as_flat_samples","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":123084,"byte_end":123171,"line_start":74,"line_end":74,"column_start":1,"column_end":88}},{"value":"/ [`is_normal`]: #method.is_normal","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":123172,"byte_end":123208,"line_start":75,"line_end":75,"column_start":1,"column_end":37}},{"value":"/ [`has_aliased_samples`]: #method.has_aliased_samples","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":123209,"byte_end":123265,"line_start":76,"line_end":76,"column_start":1,"column_end":57}},{"value":"/ [`as_view`]: #method.as_view","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":123266,"byte_end":123298,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"/ [`as_view_mut`]: #method.as_view_mut","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":123299,"byte_end":123339,"line_start":78,"line_end":78,"column_start":1,"column_end":41}},{"value":"/ [`with_monocolor`]: #method.with_monocolor","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":123340,"byte_end":123386,"line_start":79,"line_end":79,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":2626},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":123511,"byte_end":123518,"line_start":83,"line_end":83,"column_start":9,"column_end":16},"name":"samples","qualname":"::flat::FlatSamples::samples","value":"Buffer","parent":{"krate":0,"index":2624},"children":[],"decl_id":null,"docs":" Underlying linear container holding sample values.\n","sig":null,"attributes":[{"value":"/ Underlying linear container holding sample values.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":123448,"byte_end":123502,"line_start":82,"line_end":82,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":2627},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":123602,"byte_end":123608,"line_start":86,"line_end":86,"column_start":9,"column_end":15},"name":"layout","qualname":"::flat::FlatSamples::layout","value":"flat::SampleLayout","parent":{"krate":0,"index":2624},"children":[],"decl_id":null,"docs":" A `repr(C)` description of the layout of buffer samples.\n","sig":null,"attributes":[{"value":"/ A `repr(C)` description of the layout of buffer samples.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":123533,"byte_end":123593,"line_start":85,"line_end":85,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":2628},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":124063,"byte_end":124073,"line_start":94,"line_end":94,"column_start":9,"column_end":19},"name":"color_hint","qualname":"::flat::FlatSamples::color_hint","value":"std::option::Option<color::ColorType>","parent":{"krate":0,"index":2624},"children":[],"decl_id":null,"docs":" Supplementary color information.","sig":null,"attributes":[{"value":"/ Supplementary color information.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":123629,"byte_end":123665,"line_start":88,"line_end":88,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":123670,"byte_end":123673,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ You may keep this as `None` in most cases. This is NOT checked in `View` or other","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":123678,"byte_end":123763,"line_start":90,"line_end":90,"column_start":5,"column_end":90}},{"value":"/ converters. It is intended mainly as a way for types that convert to this buffer type to","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":123768,"byte_end":123860,"line_start":91,"line_end":91,"column_start":5,"column_end":97}},{"value":"/ attach their otherwise static color information. A dynamic image representation could","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":123865,"byte_end":123954,"line_start":92,"line_end":92,"column_start":5,"column_end":94}},{"value":"/ however use this to resolve representational ambiguities such as the order of RGB channels.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":123959,"byte_end":124054,"line_start":93,"line_end":93,"column_start":5,"column_end":100}}]},{"kind":"Struct","id":{"krate":0,"index":2635},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":124223,"byte_end":124235,"line_start":100,"line_end":100,"column_start":12,"column_end":24},"name":"SampleLayout","qualname":"::flat::SampleLayout","value":"SampleLayout { channels, channel_stride, width, width_stride, height, height_stride }","parent":null,"children":[{"krate":0,"index":2636},{"krate":0,"index":2637},{"krate":0,"index":2638},{"krate":0,"index":2639},{"krate":0,"index":2640},{"krate":0,"index":2641}],"decl_id":null,"docs":" A ffi compatible description of a sample buffer.\n","sig":null,"attributes":[{"value":"/ A ffi compatible description of a sample buffer.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":124097,"byte_end":124149,"line_start":97,"line_end":97,"column_start":1,"column_end":53}},{"value":"repr(C)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":124150,"byte_end":124160,"line_start":98,"line_end":98,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2636},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":124319,"byte_end":124327,"line_start":102,"line_end":102,"column_start":9,"column_end":17},"name":"channels","qualname":"::flat::SampleLayout::channels","value":"u8","parent":{"krate":0,"index":2635},"children":[],"decl_id":null,"docs":" The number of channels in the color representation of the image.\n","sig":null,"attributes":[{"value":"/ The number of channels in the color representation of the image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":124242,"byte_end":124310,"line_start":101,"line_end":101,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":2637},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":124413,"byte_end":124427,"line_start":105,"line_end":105,"column_start":9,"column_end":23},"name":"channel_stride","qualname":"::flat::SampleLayout::channel_stride","value":"usize","parent":{"krate":0,"index":2635},"children":[],"decl_id":null,"docs":" Add this to an index to get to the sample in the next channel.\n","sig":null,"attributes":[{"value":"/ Add this to an index to get to the sample in the next channel.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":124338,"byte_end":124404,"line_start":104,"line_end":104,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":2638},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":124489,"byte_end":124494,"line_start":108,"line_end":108,"column_start":9,"column_end":14},"name":"width","qualname":"::flat::SampleLayout::width","value":"u32","parent":{"krate":0,"index":2635},"children":[],"decl_id":null,"docs":" The width of the represented image.\n","sig":null,"attributes":[{"value":"/ The width of the represented image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":124441,"byte_end":124480,"line_start":107,"line_end":107,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2639},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":124581,"byte_end":124593,"line_start":111,"line_end":111,"column_start":9,"column_end":21},"name":"width_stride","qualname":"::flat::SampleLayout::width_stride","value":"usize","parent":{"krate":0,"index":2635},"children":[],"decl_id":null,"docs":" Add this to an index to get to the next sample in x-direction.\n","sig":null,"attributes":[{"value":"/ Add this to an index to get to the next sample in x-direction.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":124506,"byte_end":124572,"line_start":110,"line_end":110,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":2640},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":124656,"byte_end":124662,"line_start":114,"line_end":114,"column_start":9,"column_end":15},"name":"height","qualname":"::flat::SampleLayout::height","value":"u32","parent":{"krate":0,"index":2635},"children":[],"decl_id":null,"docs":" The height of the represented image.\n","sig":null,"attributes":[{"value":"/ The height of the represented image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":124607,"byte_end":124647,"line_start":113,"line_end":113,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":2641},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":124749,"byte_end":124762,"line_start":117,"line_end":117,"column_start":9,"column_end":22},"name":"height_stride","qualname":"::flat::SampleLayout::height_stride","value":"usize","parent":{"krate":0,"index":2635},"children":[],"decl_id":null,"docs":" Add this to an index to get to the next sample in y-direction.\n","sig":null,"attributes":[{"value":"/ Add this to an index to get to the next sample in y-direction.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":124674,"byte_end":124740,"line_start":116,"line_end":116,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":125737,"byte_end":125753,"line_start":141,"line_end":141,"column_start":12,"column_end":28},"name":"row_major_packed","qualname":"<SampleLayout>::row_major_packed","value":"pub fn row_major_packed(u8, u32, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Describe a row-major image packed in all directions.","sig":null,"attributes":[{"value":"/ Describe a row-major image packed in all directions.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":124943,"byte_end":124999,"line_start":125,"line_end":125,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":125004,"byte_end":125007,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ The resulting will surely be `NormalForm::RowMajorPacked`. It can therefore be converted to","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":125012,"byte_end":125107,"line_start":127,"line_end":127,"column_start":5,"column_end":100}},{"value":"/ safely to an `ImageBuffer` with a large enough underlying buffer.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":125112,"byte_end":125181,"line_start":128,"line_end":128,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":125186,"byte_end":125189,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":125194,"byte_end":125201,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ # use image::flat::{NormalForm, SampleLayout};","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":125206,"byte_end":125256,"line_start":131,"line_end":131,"column_start":5,"column_end":55}},{"value":"/ let layout = SampleLayout::row_major_packed(3, 640, 480);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":125261,"byte_end":125322,"line_start":132,"line_end":132,"column_start":5,"column_end":66}},{"value":"/ assert!(layout.is_normal(NormalForm::RowMajorPacked));","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":125327,"byte_end":125385,"line_start":133,"line_end":133,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":125390,"byte_end":125397,"line_start":134,"line_end":134,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":125402,"byte_end":125405,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":125410,"byte_end":125422,"line_start":136,"line_end":136,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":125427,"byte_end":125430,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ On platforms where `usize` has the same size as `u32` this panics when the resulting stride","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":125435,"byte_end":125530,"line_start":138,"line_end":138,"column_start":5,"column_end":100}},{"value":"/ in the `height` direction would be larger than `usize::max_value()`. On other platforms","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":125535,"byte_end":125626,"line_start":139,"line_end":139,"column_start":5,"column_end":96}},{"value":"/ where it can surely accomodate `u8::max_value() * u32::max_value(), this can never happen.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":125631,"byte_end":125725,"line_start":140,"line_end":140,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":127004,"byte_end":127023,"line_start":170,"line_end":170,"column_start":12,"column_end":31},"name":"column_major_packed","qualname":"<SampleLayout>::column_major_packed","value":"pub fn column_major_packed(u8, u32, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Describe a column-major image packed in all directions.","sig":null,"attributes":[{"value":"/ Describe a column-major image packed in all directions.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":126191,"byte_end":126250,"line_start":154,"line_end":154,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":126255,"byte_end":126258,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ The resulting will surely be `NormalForm::ColumnMajorPacked`. This is not particularly","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":126263,"byte_end":126353,"line_start":156,"line_end":156,"column_start":5,"column_end":95}},{"value":"/ useful for conversion but can be used to describe such a buffer without pitfalls.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":126358,"byte_end":126443,"line_start":157,"line_end":157,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":126448,"byte_end":126451,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":126456,"byte_end":126463,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ # use image::flat::{NormalForm, SampleLayout};","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":126468,"byte_end":126518,"line_start":160,"line_end":160,"column_start":5,"column_end":55}},{"value":"/ let layout = SampleLayout::column_major_packed(3, 640, 480);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":126523,"byte_end":126587,"line_start":161,"line_end":161,"column_start":5,"column_end":69}},{"value":"/ assert!(layout.is_normal(NormalForm::ColumnMajorPacked));","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":126592,"byte_end":126653,"line_start":162,"line_end":162,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":126658,"byte_end":126665,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":126670,"byte_end":126673,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":126678,"byte_end":126690,"line_start":165,"line_end":165,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":126695,"byte_end":126698,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ On platforms where `usize` has the same size as `u32` this panics when the resulting stride","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":126703,"byte_end":126798,"line_start":167,"line_end":167,"column_start":5,"column_end":100}},{"value":"/ in the `width` direction would be larger than `usize::max_value()`. On other platforms","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":126803,"byte_end":126893,"line_start":168,"line_end":168,"column_start":5,"column_end":95}},{"value":"/ where it can surely accomodate `u8::max_value() * u32::max_value(), this can never happen.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":126898,"byte_end":126992,"line_start":169,"line_end":169,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":127639,"byte_end":127650,"line_start":187,"line_end":187,"column_start":12,"column_end":23},"name":"strides_cwh","qualname":"<SampleLayout>::strides_cwh","value":"pub fn strides_cwh(&Self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the strides for indexing matrix-like `[(c, w, h)]`.","sig":null,"attributes":[{"value":"/ Get the strides for indexing matrix-like `[(c, w, h)]`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":127464,"byte_end":127523,"line_start":183,"line_end":183,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":127528,"byte_end":127531,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ For a row-major layout with grouped samples, this tuple is strictly","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":127536,"byte_end":127607,"line_start":185,"line_end":185,"column_start":5,"column_end":76}},{"value":"/ increasing.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":127612,"byte_end":127627,"line_start":186,"line_end":186,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":127967,"byte_end":127974,"line_start":195,"line_end":195,"column_start":12,"column_end":19},"name":"extents","qualname":"<SampleLayout>::extents","value":"pub fn extents(&Self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the dimensions `(channels, width, height)`.","sig":null,"attributes":[{"value":"/ Get the dimensions `(channels, width, height)`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":127765,"byte_end":127816,"line_start":191,"line_end":191,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":127821,"byte_end":127824,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ The interface is optimized for use with `strides_cwh` instead. The channel extent will be","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":127829,"byte_end":127922,"line_start":193,"line_end":193,"column_start":5,"column_end":98}},{"value":"/ before width and height.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":127927,"byte_end":127955,"line_start":194,"line_end":194,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":128348,"byte_end":128354,"line_start":203,"line_end":203,"column_start":12,"column_end":18},"name":"bounds","qualname":"<SampleLayout>::bounds","value":"pub fn bounds(&Self) -> (u8, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Tuple of bounds in the order of coordinate inputs.","sig":null,"attributes":[{"value":"/ Tuple of bounds in the order of coordinate inputs.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":128096,"byte_end":128150,"line_start":199,"line_end":199,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":128155,"byte_end":128158,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ This function should be used whenever working with image coordinates opposed to buffer","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":128163,"byte_end":128253,"line_start":201,"line_end":201,"column_start":5,"column_end":95}},{"value":"/ coordinates. The only difference compared to `extents` is the output type.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":128258,"byte_end":128336,"line_start":202,"line_end":202,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":130507,"byte_end":130517,"line_start":258,"line_end":258,"column_start":12,"column_end":22},"name":"min_length","qualname":"<SampleLayout>::min_length","value":"pub fn min_length(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[{"value":"/ Get the minimum length of a buffer such that all in-bounds samples have valid indices.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":128442,"byte_end":128532,"line_start":207,"line_end":207,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":128537,"byte_end":128540,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ This method will allow zero strides, allowing compact representations of monochrome images.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":128545,"byte_end":128640,"line_start":209,"line_end":209,"column_start":5,"column_end":100}},{"value":"/ To check that no aliasing occurs, try `check_alias_invariants`. For compact images (no","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":128645,"byte_end":128735,"line_start":210,"line_end":210,"column_start":5,"column_end":95}},{"value":"/ aliasing and no unindexed samples) this is `width*height*channels`. But for both of the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":128740,"byte_end":128831,"line_start":211,"line_end":211,"column_start":5,"column_end":96}},{"value":"/ other cases, the reasoning is slightly more involved.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":128836,"byte_end":128893,"line_start":212,"line_end":212,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":128898,"byte_end":128901,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Explanation","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":128906,"byte_end":128923,"line_start":214,"line_end":214,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":128928,"byte_end":128931,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ Note that there is a difference between `min_length` and the index of the sample","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":128936,"byte_end":129020,"line_start":216,"line_end":216,"column_start":5,"column_end":89}},{"value":"/ 'one-past-the-end`. This is due to strides that may be larger than the dimension below.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":129025,"byte_end":129116,"line_start":217,"line_end":217,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":129121,"byte_end":129124,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ ## Example with holes","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":129129,"byte_end":129154,"line_start":219,"line_end":219,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":129159,"byte_end":129162,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ Let's look at an example of a grayscale image with","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":129167,"byte_end":129221,"line_start":221,"line_end":221,"column_start":5,"column_end":59}},{"value":"/ * `width_stride = 1`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":129226,"byte_end":129250,"line_start":222,"line_end":222,"column_start":5,"column_end":29}},{"value":"/ * `width = 2`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":129255,"byte_end":129272,"line_start":223,"line_end":223,"column_start":5,"column_end":22}},{"value":"/ * `height_stride = 3`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":129277,"byte_end":129302,"line_start":224,"line_end":224,"column_start":5,"column_end":30}},{"value":"/ * `height = 2`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":129307,"byte_end":129325,"line_start":225,"line_end":225,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":129330,"byte_end":129333,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":129338,"byte_end":129349,"line_start":227,"line_end":227,"column_start":5,"column_end":16}},{"value":"/ | x x   | x x m | $","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":129354,"byte_end":129377,"line_start":228,"line_end":228,"column_start":5,"column_end":28}},{"value":"/  min_length m ^","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":129382,"byte_end":129401,"line_start":229,"line_end":229,"column_start":5,"column_end":24}},{"value":"/                   ^ one-past-the-end $","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":129406,"byte_end":129448,"line_start":230,"line_end":230,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":129453,"byte_end":129460,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":129465,"byte_end":129468,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ The difference is also extreme for empty images with large strides. The one-past-the-end","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":129473,"byte_end":129565,"line_start":233,"line_end":233,"column_start":5,"column_end":97}},{"value":"/ sample index is still as large as the largest of these strides while `min_length = 0`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":129570,"byte_end":129660,"line_start":234,"line_end":234,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":129665,"byte_end":129668,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ ## Example with aliasing","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":129673,"byte_end":129701,"line_start":236,"line_end":236,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":129706,"byte_end":129709,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ The concept gets even more important when you allow samples to alias each other. Here we","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":129714,"byte_end":129806,"line_start":238,"line_end":238,"column_start":5,"column_end":97}},{"value":"/ have the buffer of a small grayscale image where this is the case, this time we will first","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":129811,"byte_end":129905,"line_start":239,"line_end":239,"column_start":5,"column_end":99}},{"value":"/ show the buffer and then the individual rows below.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":129910,"byte_end":129965,"line_start":240,"line_end":240,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":129970,"byte_end":129973,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ * `width_stride = 1`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":129978,"byte_end":130002,"line_start":242,"line_end":242,"column_start":5,"column_end":29}},{"value":"/ * `width = 3`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":130007,"byte_end":130024,"line_start":243,"line_end":243,"column_start":5,"column_end":22}},{"value":"/ * `height_stride = 2`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":130029,"byte_end":130054,"line_start":244,"line_end":244,"column_start":5,"column_end":30}},{"value":"/ * `height = 2`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":130059,"byte_end":130077,"line_start":245,"line_end":245,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":130082,"byte_end":130085,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":130090,"byte_end":130101,"line_start":247,"line_end":247,"column_start":5,"column_end":16}},{"value":"/  1 2 3 4 5 m","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":130106,"byte_end":130122,"line_start":248,"line_end":248,"column_start":5,"column_end":21}},{"value":"/ |1 2 3| row one","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":130127,"byte_end":130146,"line_start":249,"line_end":249,"column_start":5,"column_end":24}},{"value":"/     |3 4 5| row two","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":130151,"byte_end":130174,"line_start":250,"line_end":250,"column_start":5,"column_end":28}},{"value":"/            ^ m min_length","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":130179,"byte_end":130208,"line_start":251,"line_end":251,"column_start":5,"column_end":34}},{"value":"/          ^ ??? one-past-the-end","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":130213,"byte_end":130248,"line_start":252,"line_end":252,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":130253,"byte_end":130260,"line_start":253,"line_end":253,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":130265,"byte_end":130268,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ This time 'one-past-the-end' is not even simply the largest stride times the extent of its","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":130273,"byte_end":130367,"line_start":255,"line_end":255,"column_start":5,"column_end":99}},{"value":"/ dimension. That still points inside the image because `height*height_stride = 4` but also","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":130372,"byte_end":130465,"line_start":256,"line_end":256,"column_start":5,"column_end":98}},{"value":"/ `index_of(1, 2) = 4`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":130470,"byte_end":130495,"line_start":257,"line_end":257,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":130849,"byte_end":130853,"line_start":268,"line_end":268,"column_start":12,"column_end":16},"name":"fits","qualname":"<SampleLayout>::fits","value":"pub fn fits(&Self, usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer of length `len` is large enough.\n","sig":null,"attributes":[{"value":"/ Check if a buffer of length `len` is large enough.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":130783,"byte_end":130837,"line_start":267,"line_end":267,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":131963,"byte_end":131982,"line_start":293,"line_end":293,"column_start":12,"column_end":31},"name":"has_aliased_samples","qualname":"<SampleLayout>::has_aliased_samples","value":"pub fn has_aliased_samples(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If there are any samples aliasing each other.","sig":null,"attributes":[{"value":"/ If there are any samples aliasing each other.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":131613,"byte_end":131662,"line_start":288,"line_end":288,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":131667,"byte_end":131670,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ If this is not the case, it would always be safe to allow mutable access to two different","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":131675,"byte_end":131768,"line_start":290,"line_end":290,"column_start":5,"column_end":98}},{"value":"/ samples at the same time. Otherwise, this operation would need additional checks. When one","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":131773,"byte_end":131867,"line_start":291,"line_end":291,"column_start":5,"column_end":99}},{"value":"/ dimension overflows `usize` with its stride we also consider this aliasing.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":131872,"byte_end":131951,"line_start":292,"line_end":292,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":133227,"byte_end":133236,"line_start":323,"line_end":323,"column_start":12,"column_end":21},"name":"is_normal","qualname":"<SampleLayout>::is_normal","value":"pub fn is_normal(&Self, NormalForm) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer fulfills the requirements of a normal form.","sig":null,"attributes":[{"value":"/ Check if a buffer fulfills the requirements of a normal form.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":132717,"byte_end":132782,"line_start":316,"line_end":316,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":132787,"byte_end":132790,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ Certain conversions have preconditions on the structure of the sample buffer that are not","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":132795,"byte_end":132888,"line_start":318,"line_end":318,"column_start":5,"column_end":98}},{"value":"/ captured (by design) by the type system. These are then checked before the conversion. Such","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":132893,"byte_end":132988,"line_start":319,"line_end":319,"column_start":5,"column_end":100}},{"value":"/ checks can all be done in constant time and will not inspect the buffer content. You can","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":132993,"byte_end":133085,"line_start":320,"line_end":320,"column_start":5,"column_end":97}},{"value":"/ perform these checks yourself when the conversion is not required at this moment but maybe","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":133090,"byte_end":133184,"line_start":321,"line_end":321,"column_start":5,"column_end":99}},{"value":"/ still performed later.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":133189,"byte_end":133215,"line_start":322,"line_end":322,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":134934,"byte_end":134943,"line_start":378,"line_end":378,"column_start":12,"column_end":21},"name":"in_bounds","qualname":"<SampleLayout>::in_bounds","value":"pub fn in_bounds(&Self, u8, u32, u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check that the pixel and the channel index are in bounds.","sig":null,"attributes":[{"value":"/ Check that the pixel and the channel index are in bounds.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":134592,"byte_end":134653,"line_start":373,"line_end":373,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":134658,"byte_end":134661,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ An in-bound coordinate does not yet guarantee that the corresponding calculation of a","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":134666,"byte_end":134755,"line_start":375,"line_end":375,"column_start":5,"column_end":94}},{"value":"/ buffer index does not overflow. However, if such a buffer large enough to hold all samples","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":134760,"byte_end":134854,"line_start":376,"line_end":376,"column_start":5,"column_end":99}},{"value":"/ actually exists in memory, this porperty of course follows.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":134859,"byte_end":134922,"line_start":377,"line_end":377,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":135217,"byte_end":135222,"line_start":385,"line_end":385,"column_start":12,"column_end":17},"name":"index","qualname":"<SampleLayout>::index","value":"pub fn index(&Self, u8, u32, u32) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Resolve the index of a particular sample.","sig":null,"attributes":[{"value":"/ Resolve the index of a particular sample.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":135070,"byte_end":135115,"line_start":382,"line_end":382,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":135120,"byte_end":135123,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ `None` if the index is outside the bounds or does not fit into a `usize`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":135128,"byte_end":135205,"line_start":384,"line_end":384,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":135816,"byte_end":135837,"line_start":398,"line_end":398,"column_start":12,"column_end":33},"name":"index_ignoring_bounds","qualname":"<SampleLayout>::index_ignoring_bounds","value":"pub fn index_ignoring_bounds(&Self, usize, usize, usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the theoretical position of sample (channel, x, y).","sig":null,"attributes":[{"value":"/ Get the theoretical position of sample (channel, x, y).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":135445,"byte_end":135504,"line_start":393,"line_end":393,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":135509,"byte_end":135512,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ The 'check' is for overflow during index calculation, not that it is contained in the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":135517,"byte_end":135606,"line_start":395,"line_end":395,"column_start":5,"column_end":94}},{"value":"/ image. Two samples may return the same index, even when one of them is out of bounds. This","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":135611,"byte_end":135705,"line_start":396,"line_end":396,"column_start":5,"column_end":99}},{"value":"/ happens when all strides are `0`, i.e. the image is an arbitrarily large monochrome image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":135710,"byte_end":135804,"line_start":397,"line_end":397,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":136768,"byte_end":136783,"line_start":419,"line_end":419,"column_start":12,"column_end":27},"name":"in_bounds_index","qualname":"<SampleLayout>::in_bounds_index","value":"pub fn in_bounds_index(&Self, u8, u32, u32) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get an index provided it is inbouds.","sig":null,"attributes":[{"value":"/ Get an index provided it is inbouds.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":136467,"byte_end":136507,"line_start":414,"line_end":414,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":136512,"byte_end":136515,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ Assumes that the image is backed by some sufficiently large buffer. Then computation can","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":136520,"byte_end":136612,"line_start":416,"line_end":416,"column_start":5,"column_end":97}},{"value":"/ not overflow as we could represent the maximum coordinate. Since overflow is defined either","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":136617,"byte_end":136712,"line_start":417,"line_end":417,"column_start":5,"column_end":100}},{"value":"/ way, this method can not be unsafe.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":136717,"byte_end":136756,"line_start":418,"line_end":418,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":137311,"byte_end":137320,"line_start":430,"line_end":430,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<SampleLayout>::shrink_to","value":"pub fn shrink_to(&mut Self, u8, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the image to the minimum of current and given extents.","sig":null,"attributes":[{"value":"/ Shrink the image to the minimum of current and given extents.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":136986,"byte_end":137051,"line_start":425,"line_end":425,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":137056,"byte_end":137059,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ This does not modify the strides, so that the resulting sample buffer may have holes","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":137064,"byte_end":137152,"line_start":427,"line_end":427,"column_start":5,"column_end":93}},{"value":"/ created by the shrinking operation. Shrinking could also lead to an non-aliasing image when","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":137157,"byte_end":137252,"line_start":428,"line_end":428,"column_start":5,"column_end":100}},{"value":"/ samples had aliased each other before.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":137257,"byte_end":137299,"line_start":429,"line_end":429,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":137993,"byte_end":138004,"line_start":457,"line_end":457,"column_start":12,"column_end":23},"name":"strides_cwh","qualname":"<FlatSamples<Buffer>>::strides_cwh","value":"pub fn strides_cwh(&Self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the strides for indexing matrix-like `[(c, w, h)]`.","sig":null,"attributes":[{"value":"/ Get the strides for indexing matrix-like `[(c, w, h)]`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":137818,"byte_end":137877,"line_start":453,"line_end":453,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":137882,"byte_end":137885,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ For a row-major layout with grouped samples, this tuple is strictly","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":137890,"byte_end":137961,"line_start":455,"line_end":455,"column_start":5,"column_end":76}},{"value":"/ increasing.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":137966,"byte_end":137981,"line_start":456,"line_end":456,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":138286,"byte_end":138293,"line_start":465,"line_end":465,"column_start":12,"column_end":19},"name":"extents","qualname":"<FlatSamples<Buffer>>::extents","value":"pub fn extents(&Self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the dimensions `(channels, width, height)`.","sig":null,"attributes":[{"value":"/ Get the dimensions `(channels, width, height)`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":138084,"byte_end":138135,"line_start":461,"line_end":461,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":138140,"byte_end":138143,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ The interface is optimized for use with `strides_cwh` instead. The channel extent will be","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":138148,"byte_end":138241,"line_start":463,"line_end":463,"column_start":5,"column_end":98}},{"value":"/ before width and height.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":138246,"byte_end":138274,"line_start":464,"line_end":464,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":138621,"byte_end":138627,"line_start":473,"line_end":473,"column_start":12,"column_end":18},"name":"bounds","qualname":"<FlatSamples<Buffer>>::bounds","value":"pub fn bounds(&Self) -> (u8, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Tuple of bounds in the order of coordinate inputs.","sig":null,"attributes":[{"value":"/ Tuple of bounds in the order of coordinate inputs.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":138369,"byte_end":138423,"line_start":469,"line_end":469,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":138428,"byte_end":138431,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ This function should be used whenever working with image coordinates opposed to buffer","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":138436,"byte_end":138526,"line_start":471,"line_end":471,"column_start":5,"column_end":95}},{"value":"/ coordinates. The only difference compared to `extents` is the output type.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":138531,"byte_end":138609,"line_start":472,"line_end":472,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":138741,"byte_end":138747,"line_start":478,"line_end":478,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<FlatSamples<Buffer>>::as_ref","value":"pub fn as_ref<T>(&Self) -> FlatSamples<&[T]> where Buffer: AsRef<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference based version.\n","sig":null,"attributes":[{"value":"/ Get a reference based version.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":138695,"byte_end":138729,"line_start":477,"line_end":477,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":139021,"byte_end":139027,"line_start":487,"line_end":487,"column_start":12,"column_end":18},"name":"as_mut","qualname":"<FlatSamples<Buffer>>::as_mut","value":"pub fn as_mut<T>(&mut Self) -> FlatSamples<&mut [T]> where Buffer: AsMut<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference based version.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference based version.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":138967,"byte_end":139009,"line_start":486,"line_end":486,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":139306,"byte_end":139312,"line_start":496,"line_end":496,"column_start":12,"column_end":18},"name":"to_vec","qualname":"<FlatSamples<Buffer>>::to_vec","value":"pub fn to_vec<T>(&Self) -> FlatSamples<Vec<T>> where T: Clone,\nBuffer: AsRef<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Copy the data into an owned vector.\n","sig":null,"attributes":[{"value":"/ Copy the data into an owned vector.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":139255,"byte_end":139294,"line_start":495,"line_end":495,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":140585,"byte_end":140595,"line_start":527,"line_end":527,"column_start":12,"column_end":22},"name":"get_sample","qualname":"<FlatSamples<Buffer>>::get_sample","value":"pub fn get_sample<T>(&Self, u8, u32, u32) -> Option<&T> where\nBuffer: AsRef<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a single sample.","sig":null,"attributes":[{"value":"/ Get a reference to a single sample.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":139565,"byte_end":139604,"line_start":506,"line_end":506,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":139609,"byte_end":139612,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ This more restrictive than the method based on `std::ops::Index` but guarantees to properly","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":139617,"byte_end":139712,"line_start":508,"line_end":508,"column_start":5,"column_end":100}},{"value":"/ check all bounds and not panic as long as `Buffer::as_ref` does not do so.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":139717,"byte_end":139795,"line_start":509,"line_end":509,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":139800,"byte_end":139803,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":139808,"byte_end":139815,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ # use image::{RgbImage};","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":139820,"byte_end":139848,"line_start":512,"line_end":512,"column_start":5,"column_end":33}},{"value":"/ let flat = RgbImage::new(480, 640).into_flat_samples();","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":139853,"byte_end":139912,"line_start":513,"line_end":513,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":139917,"byte_end":139920,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ // Get the blue channel at (10, 10).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":139925,"byte_end":139965,"line_start":515,"line_end":515,"column_start":5,"column_end":45}},{"value":"/ assert!(flat.get_sample(1, 10, 10).is_some());","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":139970,"byte_end":140020,"line_start":516,"line_end":516,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":140025,"byte_end":140028,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ // There is no alpha channel.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":140033,"byte_end":140066,"line_start":518,"line_end":518,"column_start":5,"column_end":38}},{"value":"/ assert!(flat.get_sample(3, 10, 10).is_none());","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":140071,"byte_end":140121,"line_start":519,"line_end":519,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":140126,"byte_end":140133,"line_start":520,"line_end":520,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":140138,"byte_end":140141,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ For cases where a special buffer does not provide `AsRef<[T]>`, consider encapsulating","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":140146,"byte_end":140236,"line_start":522,"line_end":522,"column_start":5,"column_end":95}},{"value":"/ bounds checks with `min_length` in a type similar to `View`. Then you may use","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":140241,"byte_end":140322,"line_start":523,"line_end":523,"column_start":5,"column_end":86}},{"value":"/ `in_bounds_index` as a small speedup over the index calculation of this method which relies","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":140327,"byte_end":140422,"line_start":524,"line_end":524,"column_start":5,"column_end":100}},{"value":"/ on `index_ignoring_bounds` since it can not have a-priori knowledge that the sample","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":140427,"byte_end":140514,"line_start":525,"line_end":525,"column_start":5,"column_end":92}},{"value":"/ coordinate is in fact backed by any memory buffer.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":140519,"byte_end":140573,"line_start":526,"line_end":526,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":142192,"byte_end":142206,"line_start":560,"line_end":560,"column_start":12,"column_end":26},"name":"get_mut_sample","qualname":"<FlatSamples<Buffer>>::get_mut_sample","value":"pub fn get_mut_sample<T>(&mut Self, u8, u32, u32) -> Option<&mut T> where\nBuffer: AsMut<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a single sample.","sig":null,"attributes":[{"value":"/ Get a mutable reference to a single sample.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":140782,"byte_end":140829,"line_start":534,"line_end":534,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":140834,"byte_end":140837,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ This more restrictive than the method based on `std::ops::IndexMut` but guarantees to","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":140842,"byte_end":140931,"line_start":536,"line_end":536,"column_start":5,"column_end":94}},{"value":"/ properly check all bounds and not panic as long as `Buffer::as_ref` does not do so.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":140936,"byte_end":141023,"line_start":537,"line_end":537,"column_start":5,"column_end":92}},{"value":"/ Contrary to conversion to `ViewMut`, this does not require that samples are packed since it","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":141028,"byte_end":141123,"line_start":538,"line_end":538,"column_start":5,"column_end":100}},{"value":"/ does not need to convert samples to a color representation.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":141128,"byte_end":141191,"line_start":539,"line_end":539,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":141196,"byte_end":141199,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ **WARNING**: Note that of course samples may alias, so that the mutable reference returned","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":141204,"byte_end":141298,"line_start":541,"line_end":541,"column_start":5,"column_end":99}},{"value":"/ here can in fact modify more than the coordinate in the argument.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":141303,"byte_end":141372,"line_start":542,"line_end":542,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":141377,"byte_end":141380,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":141385,"byte_end":141392,"line_start":544,"line_end":544,"column_start":5,"column_end":12}},{"value":"/ # use image::{RgbImage};","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":141397,"byte_end":141425,"line_start":545,"line_end":545,"column_start":5,"column_end":33}},{"value":"/ let mut flat = RgbImage::new(480, 640).into_flat_samples();","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":141430,"byte_end":141493,"line_start":546,"line_end":546,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":141498,"byte_end":141501,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ // Assign some new color to the blue channel at (10, 10).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":141506,"byte_end":141567,"line_start":548,"line_end":548,"column_start":5,"column_end":66}},{"value":"/ *flat.get_mut_sample(1, 10, 10).unwrap() = 255;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":141572,"byte_end":141623,"line_start":549,"line_end":549,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":141628,"byte_end":141631,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ // There is no alpha channel.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":141636,"byte_end":141669,"line_start":551,"line_end":551,"column_start":5,"column_end":38}},{"value":"/ assert!(flat.get_mut_sample(3, 10, 10).is_none());","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":141674,"byte_end":141728,"line_start":552,"line_end":552,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":141733,"byte_end":141740,"line_start":553,"line_end":553,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":141745,"byte_end":141748,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ For cases where a special buffer does not provide `AsRef<[T]>`, consider encapsulating","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":141753,"byte_end":141843,"line_start":555,"line_end":555,"column_start":5,"column_end":95}},{"value":"/ bounds checks with `min_length` in a type similar to `View`. Then you may use","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":141848,"byte_end":141929,"line_start":556,"line_end":556,"column_start":5,"column_end":86}},{"value":"/ `in_bounds_index` as a small speedup over the index calculation of this method which relies","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":141934,"byte_end":142029,"line_start":557,"line_end":557,"column_start":5,"column_end":100}},{"value":"/ on `index_ignoring_bounds` since it can not have a-priori knowledge that the sample","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":142034,"byte_end":142121,"line_start":558,"line_end":558,"column_start":5,"column_end":92}},{"value":"/ coordinate is in fact backed by any memory buffer.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":142126,"byte_end":142180,"line_start":559,"line_end":559,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":142870,"byte_end":142877,"line_start":575,"line_end":575,"column_start":12,"column_end":19},"name":"as_view","qualname":"<FlatSamples<Buffer>>::as_view","value":"pub fn as_view<P>(&Self) -> Result<View<&[P::Subpixel], P>, Error> where\nP: Pixel, Buffer: AsRef<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" View this buffer as an image over some type of pixel.","sig":null,"attributes":[{"value":"/ View this buffer as an image over some type of pixel.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":142458,"byte_end":142515,"line_start":569,"line_end":569,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":142520,"byte_end":142523,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ This first ensures that all in-bounds coordinates refer to valid indices in the sample","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":142528,"byte_end":142618,"line_start":571,"line_end":571,"column_start":5,"column_end":95}},{"value":"/ buffer. It also checks that the specified pixel format expects the same number of channels","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":142623,"byte_end":142717,"line_start":572,"line_end":572,"column_start":5,"column_end":99}},{"value":"/ that are present in this buffer. Neither are larger nor a smaller number will be accepted.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":142722,"byte_end":142816,"line_start":573,"line_end":573,"column_start":5,"column_end":99}},{"value":"/ There is no automatic conversion.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":142821,"byte_end":142858,"line_start":574,"line_end":574,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":144454,"byte_end":144478,"line_start":612,"line_end":612,"column_start":12,"column_end":36},"name":"as_view_with_mut_samples","qualname":"<FlatSamples<Buffer>>::as_view_with_mut_samples","value":"pub fn as_view_with_mut_samples<P>(&mut Self)\n-> Result<View<&mut [P::Subpixel], P>, Error> where P: Pixel,\nBuffer: AsMut<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" View this buffer but keep mutability at a sample level.","sig":null,"attributes":[{"value":"/ View this buffer but keep mutability at a sample level.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":143489,"byte_end":143548,"line_start":597,"line_end":597,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":143553,"byte_end":143556,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ This is similar to `as_view` but subtly different from `as_view_mut`. The resulting type","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":143561,"byte_end":143653,"line_start":599,"line_end":599,"column_start":5,"column_end":97}},{"value":"/ can be used as a `GenericImage` with the same prior invariants needed as for `as_view`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":143658,"byte_end":143749,"line_start":600,"line_end":600,"column_start":5,"column_end":96}},{"value":"/ It can not be used as a mutable `GenericImage` but does not need channels to be packed in","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":143754,"byte_end":143847,"line_start":601,"line_end":601,"column_start":5,"column_end":98}},{"value":"/ their pixel representation.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":143852,"byte_end":143883,"line_start":602,"line_end":602,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":143888,"byte_end":143891,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ This first ensures that all in-bounds coordinates refer to valid indices in the sample","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":143896,"byte_end":143986,"line_start":604,"line_end":604,"column_start":5,"column_end":95}},{"value":"/ buffer. It also checks that the specified pixel format expects the same number of channels","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":143991,"byte_end":144085,"line_start":605,"line_end":605,"column_start":5,"column_end":99}},{"value":"/ that are present in this buffer. Neither are larger nor a smaller number will be accepted.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":144090,"byte_end":144184,"line_start":606,"line_end":606,"column_start":5,"column_end":99}},{"value":"/ There is no automatic conversion.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":144189,"byte_end":144226,"line_start":607,"line_end":607,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":144231,"byte_end":144234,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ **WARNING**: Note that of course samples may alias, so that the mutable reference returned","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":144239,"byte_end":144333,"line_start":609,"line_end":609,"column_start":5,"column_end":99}},{"value":"/ for one sample can in fact modify other samples as well. Sometimes exactly this is","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":144338,"byte_end":144424,"line_start":610,"line_end":610,"column_start":5,"column_end":91}},{"value":"/ intended.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":144429,"byte_end":144442,"line_start":611,"line_end":611,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":145841,"byte_end":145852,"line_start":645,"line_end":645,"column_start":12,"column_end":23},"name":"as_view_mut","qualname":"<FlatSamples<Buffer>>::as_view_mut","value":"pub fn as_view_mut<P>(&mut Self)\n-> Result<ViewMut<&mut [P::Subpixel], P>, Error> where P: Pixel,\nBuffer: AsMut<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Interpret this buffer as a mutable image.","sig":null,"attributes":[{"value":"/ Interpret this buffer as a mutable image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":145098,"byte_end":145143,"line_start":634,"line_end":634,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":145148,"byte_end":145151,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ To succeed, the pixels in this buffer may not alias each other and the samples of each","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":145156,"byte_end":145246,"line_start":636,"line_end":636,"column_start":5,"column_end":95}},{"value":"/ pixel must be packed (i.e. `channel_stride` is `1`). The number of channels must be","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":145251,"byte_end":145338,"line_start":637,"line_end":637,"column_start":5,"column_end":92}},{"value":"/ consistent with the channel count expected by the pixel format.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":145343,"byte_end":145410,"line_start":638,"line_end":638,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":145415,"byte_end":145418,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ This is similar to an `ImageBuffer` except it is a temporary view that is not normalized as","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":145423,"byte_end":145518,"line_start":640,"line_end":640,"column_start":5,"column_end":100}},{"value":"/ strongly. To get an owning version, consider copying the data into an `ImageBuffer`. This","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":145523,"byte_end":145616,"line_start":641,"line_end":641,"column_start":5,"column_end":98}},{"value":"/ provides many more operations, is possibly faster (if not you may want to open an issue) is","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":145621,"byte_end":145716,"line_start":642,"line_end":642,"column_start":5,"column_end":100}},{"value":"/ generally polished. You can also try to convert this buffer inline, see","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":145721,"byte_end":145796,"line_start":643,"line_end":643,"column_start":5,"column_end":80}},{"value":"/ `ImageBuffer::from_raw`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":145801,"byte_end":145829,"line_start":644,"line_end":644,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":146849,"byte_end":146857,"line_start":675,"line_end":675,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<FlatSamples<Buffer>>::as_slice","value":"pub fn as_slice<T>(&Self) -> &[T] where Buffer: AsRef<[T]>","parent":null,"children":[],"decl_id":null,"docs":" View the samples as a slice.","sig":null,"attributes":[{"value":"/ View the samples as a slice.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":146625,"byte_end":146657,"line_start":671,"line_end":671,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":146662,"byte_end":146665,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ The slice is not limited to the region of the image and not all sample indices are valid","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":146670,"byte_end":146762,"line_start":673,"line_end":673,"column_start":5,"column_end":97}},{"value":"/ indices into this buffer. See `image_mut_slice` as an alternative.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":146767,"byte_end":146837,"line_start":674,"line_end":674,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":147168,"byte_end":147180,"line_start":683,"line_end":683,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<FlatSamples<Buffer>>::as_mut_slice","value":"pub fn as_mut_slice<T>(&mut Self) -> &mut [T] where Buffer: AsMut<[T]>","parent":null,"children":[],"decl_id":null,"docs":" View the samples as a slice.","sig":null,"attributes":[{"value":"/ View the samples as a slice.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":146944,"byte_end":146976,"line_start":679,"line_end":679,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":146981,"byte_end":146984,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ The slice is not limited to the region of the image and not all sample indices are valid","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":146989,"byte_end":147081,"line_start":681,"line_end":681,"column_start":5,"column_end":97}},{"value":"/ indices into this buffer. See `image_mut_slice` as an alternative.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":147086,"byte_end":147156,"line_start":682,"line_end":682,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":147611,"byte_end":147622,"line_start":692,"line_end":692,"column_start":12,"column_end":23},"name":"image_slice","qualname":"<FlatSamples<Buffer>>::image_slice","value":"pub fn image_slice<T>(&Self) -> Option<&[T]> where Buffer: AsRef<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Return the portion of the buffer that holds sample values.","sig":null,"attributes":[{"value":"/ Return the portion of the buffer that holds sample values.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":147275,"byte_end":147337,"line_start":687,"line_end":687,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":147342,"byte_end":147345,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ This may fail when the coordinates in this image are either out-of-bounds of the underlying","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":147350,"byte_end":147445,"line_start":689,"line_end":689,"column_start":5,"column_end":100}},{"value":"/ buffer or can not be represented. Note that the slice may have holes that do not correspond","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":147450,"byte_end":147545,"line_start":690,"line_end":690,"column_start":5,"column_end":100}},{"value":"/ to any sample in the image represented by it.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":147550,"byte_end":147599,"line_start":691,"line_end":691,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":148039,"byte_end":148054,"line_start":707,"line_end":707,"column_start":12,"column_end":27},"name":"image_mut_slice","qualname":"<FlatSamples<Buffer>>::image_mut_slice","value":"pub fn image_mut_slice<T>(&mut Self) -> Option<&mut [T]> where\nBuffer: AsMut<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Mutable portion of the buffer that holds sample values.\n","sig":null,"attributes":[{"value":"/ Mutable portion of the buffer that holds sample values.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":147968,"byte_end":148027,"line_start":706,"line_end":706,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":148708,"byte_end":148723,"line_start":726,"line_end":726,"column_start":12,"column_end":27},"name":"try_into_buffer","qualname":"<FlatSamples<Buffer>>::try_into_buffer","value":"pub fn try_into_buffer<P>(Self)\n-> Result<ImageBuffer<P, Buffer>, (Error, Self)> where P: Pixel + 'static,\nP::Subpixel: 'static, Buffer: Deref<Target = [P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Move the data into an image buffer.","sig":null,"attributes":[{"value":"/ Move the data into an image buffer.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":148412,"byte_end":148451,"line_start":721,"line_end":721,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":148456,"byte_end":148459,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ This does **not** convert the sample layout. The buffer needs to be in packed row-major form","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":148464,"byte_end":148560,"line_start":723,"line_end":723,"column_start":5,"column_end":101}},{"value":"/ before calling this function. In case of an error, returns the buffer again so that it does","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":148565,"byte_end":148660,"line_start":724,"line_end":724,"column_start":5,"column_end":100}},{"value":"/ not release any allocation.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":148665,"byte_end":148696,"line_start":725,"line_end":725,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":151559,"byte_end":151569,"line_start":800,"line_end":800,"column_start":12,"column_end":22},"name":"min_length","qualname":"<FlatSamples<Buffer>>::min_length","value":"pub fn min_length(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[{"value":"/ Get the minimum length of a buffer such that all in-bounds samples have valid indices.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":149494,"byte_end":149584,"line_start":749,"line_end":749,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":149589,"byte_end":149592,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This method will allow zero strides, allowing compact representations of monochrome images.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":149597,"byte_end":149692,"line_start":751,"line_end":751,"column_start":5,"column_end":100}},{"value":"/ To check that no aliasing occurs, try `check_alias_invariants`. For compact images (no","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":149697,"byte_end":149787,"line_start":752,"line_end":752,"column_start":5,"column_end":95}},{"value":"/ aliasing and no unindexed samples) this is `width*height*channels`. But for both of the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":149792,"byte_end":149883,"line_start":753,"line_end":753,"column_start":5,"column_end":96}},{"value":"/ other cases, the reasoning is slightly more involved.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":149888,"byte_end":149945,"line_start":754,"line_end":754,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":149950,"byte_end":149953,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ # Explanation","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":149958,"byte_end":149975,"line_start":756,"line_end":756,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":149980,"byte_end":149983,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ Note that there is a difference between `min_length` and the index of the sample","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":149988,"byte_end":150072,"line_start":758,"line_end":758,"column_start":5,"column_end":89}},{"value":"/ 'one-past-the-end`. This is due to strides that may be larger than the dimension below.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":150077,"byte_end":150168,"line_start":759,"line_end":759,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":150173,"byte_end":150176,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ ## Example with holes","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":150181,"byte_end":150206,"line_start":761,"line_end":761,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":150211,"byte_end":150214,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ Let's look at an example of a grayscale image with","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":150219,"byte_end":150273,"line_start":763,"line_end":763,"column_start":5,"column_end":59}},{"value":"/ * `width_stride = 1`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":150278,"byte_end":150302,"line_start":764,"line_end":764,"column_start":5,"column_end":29}},{"value":"/ * `width = 2`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":150307,"byte_end":150324,"line_start":765,"line_end":765,"column_start":5,"column_end":22}},{"value":"/ * `height_stride = 3`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":150329,"byte_end":150354,"line_start":766,"line_end":766,"column_start":5,"column_end":30}},{"value":"/ * `height = 2`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":150359,"byte_end":150377,"line_start":767,"line_end":767,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":150382,"byte_end":150385,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":150390,"byte_end":150401,"line_start":769,"line_end":769,"column_start":5,"column_end":16}},{"value":"/ | x x   | x x m | $","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":150406,"byte_end":150429,"line_start":770,"line_end":770,"column_start":5,"column_end":28}},{"value":"/  min_length m ^","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":150434,"byte_end":150453,"line_start":771,"line_end":771,"column_start":5,"column_end":24}},{"value":"/                   ^ one-past-the-end $","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":150458,"byte_end":150500,"line_start":772,"line_end":772,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":150505,"byte_end":150512,"line_start":773,"line_end":773,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":150517,"byte_end":150520,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ The difference is also extreme for empty images with large strides. The one-past-the-end","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":150525,"byte_end":150617,"line_start":775,"line_end":775,"column_start":5,"column_end":97}},{"value":"/ sample index is still as large as the largest of these strides while `min_length = 0`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":150622,"byte_end":150712,"line_start":776,"line_end":776,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":150717,"byte_end":150720,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ ## Example with aliasing","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":150725,"byte_end":150753,"line_start":778,"line_end":778,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":150758,"byte_end":150761,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ The concept gets even more important when you allow samples to alias each other. Here we","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":150766,"byte_end":150858,"line_start":780,"line_end":780,"column_start":5,"column_end":97}},{"value":"/ have the buffer of a small grayscale image where this is the case, this time we will first","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":150863,"byte_end":150957,"line_start":781,"line_end":781,"column_start":5,"column_end":99}},{"value":"/ show the buffer and then the individual rows below.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":150962,"byte_end":151017,"line_start":782,"line_end":782,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":151022,"byte_end":151025,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ * `width_stride = 1`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":151030,"byte_end":151054,"line_start":784,"line_end":784,"column_start":5,"column_end":29}},{"value":"/ * `width = 3`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":151059,"byte_end":151076,"line_start":785,"line_end":785,"column_start":5,"column_end":22}},{"value":"/ * `height_stride = 2`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":151081,"byte_end":151106,"line_start":786,"line_end":786,"column_start":5,"column_end":30}},{"value":"/ * `height = 2`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":151111,"byte_end":151129,"line_start":787,"line_end":787,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":151134,"byte_end":151137,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":151142,"byte_end":151153,"line_start":789,"line_end":789,"column_start":5,"column_end":16}},{"value":"/  1 2 3 4 5 m","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":151158,"byte_end":151174,"line_start":790,"line_end":790,"column_start":5,"column_end":21}},{"value":"/ |1 2 3| row one","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":151179,"byte_end":151198,"line_start":791,"line_end":791,"column_start":5,"column_end":24}},{"value":"/     |3 4 5| row two","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":151203,"byte_end":151226,"line_start":792,"line_end":792,"column_start":5,"column_end":28}},{"value":"/            ^ m min_length","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":151231,"byte_end":151260,"line_start":793,"line_end":793,"column_start":5,"column_end":34}},{"value":"/          ^ ??? one-past-the-end","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":151265,"byte_end":151300,"line_start":794,"line_end":794,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":151305,"byte_end":151312,"line_start":795,"line_end":795,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":151317,"byte_end":151320,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ This time 'one-past-the-end' is not even simply the largest stride times the extent of its","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":151325,"byte_end":151419,"line_start":797,"line_end":797,"column_start":5,"column_end":99}},{"value":"/ dimension. That still points inside the image because `height*height_stride = 4` but also","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":151424,"byte_end":151517,"line_start":798,"line_end":798,"column_start":5,"column_end":98}},{"value":"/ `index_of(1, 2) = 4`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":151522,"byte_end":151547,"line_start":799,"line_end":799,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":151706,"byte_end":151710,"line_start":805,"line_end":805,"column_start":12,"column_end":16},"name":"fits","qualname":"<FlatSamples<Buffer>>::fits","value":"pub fn fits(&Self, usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer of length `len` is large enough.\n","sig":null,"attributes":[{"value":"/ Check if a buffer of length `len` is large enough.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":151640,"byte_end":151694,"line_start":804,"line_end":804,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":152131,"byte_end":152150,"line_start":814,"line_end":814,"column_start":12,"column_end":31},"name":"has_aliased_samples","qualname":"<FlatSamples<Buffer>>::has_aliased_samples","value":"pub fn has_aliased_samples(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If there are any samples aliasing each other.","sig":null,"attributes":[{"value":"/ If there are any samples aliasing each other.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":151781,"byte_end":151830,"line_start":809,"line_end":809,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":151835,"byte_end":151838,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ If this is not the case, it would always be safe to allow mutable access to two different","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":151843,"byte_end":151936,"line_start":811,"line_end":811,"column_start":5,"column_end":98}},{"value":"/ samples at the same time. Otherwise, this operation would need additional checks. When one","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":151941,"byte_end":152035,"line_start":812,"line_end":812,"column_start":5,"column_end":99}},{"value":"/ dimension overflows `usize` with its stride we also consider this aliasing.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":152040,"byte_end":152119,"line_start":813,"line_end":813,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":152731,"byte_end":152740,"line_start":825,"line_end":825,"column_start":12,"column_end":21},"name":"is_normal","qualname":"<FlatSamples<Buffer>>::is_normal","value":"pub fn is_normal(&Self, NormalForm) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer fulfills the requirements of a normal form.","sig":null,"attributes":[{"value":"/ Check if a buffer fulfills the requirements of a normal form.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":152221,"byte_end":152286,"line_start":818,"line_end":818,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":152291,"byte_end":152294,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ Certain conversions have preconditions on the structure of the sample buffer that are not","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":152299,"byte_end":152392,"line_start":820,"line_end":820,"column_start":5,"column_end":98}},{"value":"/ captured (by design) by the type system. These are then checked before the conversion. Such","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":152397,"byte_end":152492,"line_start":821,"line_end":821,"column_start":5,"column_end":100}},{"value":"/ checks can all be done in constant time and will not inspect the buffer content. You can","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":152497,"byte_end":152589,"line_start":822,"line_end":822,"column_start":5,"column_end":97}},{"value":"/ perform these checks yourself when the conversion is not required at this moment but maybe","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":152594,"byte_end":152688,"line_start":823,"line_end":823,"column_start":5,"column_end":99}},{"value":"/ still performed later.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":152693,"byte_end":152719,"line_start":824,"line_end":824,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":153165,"byte_end":153174,"line_start":834,"line_end":834,"column_start":12,"column_end":21},"name":"in_bounds","qualname":"<FlatSamples<Buffer>>::in_bounds","value":"pub fn in_bounds(&Self, u8, u32, u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check that the pixel and the channel index are in bounds.","sig":null,"attributes":[{"value":"/ Check that the pixel and the channel index are in bounds.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":152823,"byte_end":152884,"line_start":829,"line_end":829,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":152889,"byte_end":152892,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ An in-bound coordinate does not yet guarantee that the corresponding calculation of a","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":152897,"byte_end":152986,"line_start":831,"line_end":831,"column_start":5,"column_end":94}},{"value":"/ buffer index does not overflow. However, if such a buffer large enough to hold all samples","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":152991,"byte_end":153085,"line_start":832,"line_end":832,"column_start":5,"column_end":99}},{"value":"/ actually exists in memory, this porperty of course follows.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":153090,"byte_end":153153,"line_start":833,"line_end":833,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":153424,"byte_end":153429,"line_start":841,"line_end":841,"column_start":12,"column_end":17},"name":"index","qualname":"<FlatSamples<Buffer>>::index","value":"pub fn index(&Self, u8, u32, u32) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Resolve the index of a particular sample.","sig":null,"attributes":[{"value":"/ Resolve the index of a particular sample.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":153277,"byte_end":153322,"line_start":838,"line_end":838,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":153327,"byte_end":153330,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ `None` if the index is outside the bounds or does not fit into a `usize`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":153335,"byte_end":153412,"line_start":840,"line_end":840,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":153908,"byte_end":153929,"line_start":850,"line_end":850,"column_start":12,"column_end":33},"name":"index_ignoring_bounds","qualname":"<FlatSamples<Buffer>>::index_ignoring_bounds","value":"pub fn index_ignoring_bounds(&Self, usize, usize, usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the theoretical position of sample (x, y, channel).","sig":null,"attributes":[{"value":"/ Get the theoretical position of sample (x, y, channel).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":153537,"byte_end":153596,"line_start":845,"line_end":845,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":153601,"byte_end":153604,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ The 'check' is for overflow during index calculation, not that it is contained in the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":153609,"byte_end":153698,"line_start":847,"line_end":847,"column_start":5,"column_end":94}},{"value":"/ image. Two samples may return the same index, even when one of them is out of bounds. This","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":153703,"byte_end":153797,"line_start":848,"line_end":848,"column_start":5,"column_end":99}},{"value":"/ happens when all strides are `0`, i.e. the image is an arbitrarily large monochrome image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":153802,"byte_end":153896,"line_start":849,"line_end":849,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":154361,"byte_end":154376,"line_start":859,"line_end":859,"column_start":12,"column_end":27},"name":"in_bounds_index","qualname":"<FlatSamples<Buffer>>::in_bounds_index","value":"pub fn in_bounds_index(&Self, u8, u32, u32) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get an index provided it is inbouds.","sig":null,"attributes":[{"value":"/ Get an index provided it is inbouds.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":154060,"byte_end":154100,"line_start":854,"line_end":854,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":154105,"byte_end":154108,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ Assumes that the image is backed by some sufficiently large buffer. Then computation can","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":154113,"byte_end":154205,"line_start":856,"line_end":856,"column_start":5,"column_end":97}},{"value":"/ not overflow as we could represent the maximum coordinate. Since overflow is defined either","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":154210,"byte_end":154305,"line_start":857,"line_end":857,"column_start":5,"column_end":100}},{"value":"/ way, this method can not be unsafe.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":154310,"byte_end":154349,"line_start":858,"line_end":858,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":154811,"byte_end":154820,"line_start":868,"line_end":868,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<FlatSamples<Buffer>>::shrink_to","value":"pub fn shrink_to(&mut Self, u8, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the image to the minimum of current and given extents.","sig":null,"attributes":[{"value":"/ Shrink the image to the minimum of current and given extents.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":154486,"byte_end":154551,"line_start":863,"line_end":863,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":154556,"byte_end":154559,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ This does not modify the strides, so that the resulting sample buffer may have holes","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":154564,"byte_end":154652,"line_start":865,"line_end":865,"column_start":5,"column_end":93}},{"value":"/ created by the shrinking operation. Shrinking could also lead to an non-aliasing image when","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":154657,"byte_end":154752,"line_start":866,"line_end":866,"column_start":5,"column_end":100}},{"value":"/ samples had aliased each other before.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":154757,"byte_end":154799,"line_start":867,"line_end":867,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":155706,"byte_end":155720,"line_start":894,"line_end":894,"column_start":12,"column_end":26},"name":"with_monocolor","qualname":"<FlatSamples<&'buf [Subpixel]>>::with_monocolor","value":"pub fn with_monocolor<P>(&'buf P, u32, u32) -> Self where P: Pixel<Subpixel =\nSubpixel>, Subpixel: Primitive","parent":null,"children":[],"decl_id":null,"docs":" Create a monocolor image from a single pixel.","sig":null,"attributes":[{"value":"/ Create a monocolor image from a single pixel.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":154994,"byte_end":155043,"line_start":874,"line_end":874,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":155048,"byte_end":155051,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ This can be used as a very cheap source of a `GenericImageView` with an arbitrary number of","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":155056,"byte_end":155151,"line_start":876,"line_end":876,"column_start":5,"column_end":100}},{"value":"/ pixels of a single color, without any dynamic allocation.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":155156,"byte_end":155217,"line_start":877,"line_end":877,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":155222,"byte_end":155225,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":155230,"byte_end":155245,"line_start":879,"line_end":879,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":155250,"byte_end":155253,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":155258,"byte_end":155265,"line_start":881,"line_end":881,"column_start":5,"column_end":12}},{"value":"/ # fn paint_something<T>(_: T) {}","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":155270,"byte_end":155306,"line_start":882,"line_end":882,"column_start":5,"column_end":41}},{"value":"/ use image::{flat::FlatSamples, GenericImage, RgbImage, Rgb};","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":155311,"byte_end":155375,"line_start":883,"line_end":883,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":155380,"byte_end":155383,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ let background = Rgb([20, 20, 20]);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":155388,"byte_end":155427,"line_start":885,"line_end":885,"column_start":5,"column_end":44}},{"value":"/ let bg = FlatSamples::with_monocolor(&background, 200, 200);;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":155432,"byte_end":155497,"line_start":886,"line_end":886,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":155502,"byte_end":155505,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ let mut image = RgbImage::new(200, 200);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":155510,"byte_end":155554,"line_start":888,"line_end":888,"column_start":5,"column_end":49}},{"value":"/ paint_something(&mut image);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":155559,"byte_end":155591,"line_start":889,"line_end":889,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":155596,"byte_end":155599,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ // Reset the canvas","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":155604,"byte_end":155627,"line_start":891,"line_end":891,"column_start":5,"column_end":28}},{"value":"/ image.copy_from(&bg.as_view().unwrap(), 0, 0);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":155632,"byte_end":155682,"line_start":892,"line_end":892,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":155687,"byte_end":155694,"line_start":893,"line_end":893,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2685},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":156925,"byte_end":156929,"line_start":929,"line_end":929,"column_start":12,"column_end":16},"name":"View","qualname":"::flat::View","value":"View {  }","parent":null,"children":[{"krate":0,"index":2688},{"krate":0,"index":2689}],"decl_id":null,"docs":" A flat buffer that can be used as an image view.","sig":null,"attributes":[{"value":"/ A flat buffer that can be used as an image view.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":156223,"byte_end":156275,"line_start":914,"line_end":914,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":156276,"byte_end":156279,"line_start":915,"line_end":915,"column_start":1,"column_end":4}},{"value":"/ This is a nearly trivial wrapper around a buffer but at least sanitizes by checking the buffer","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":156280,"byte_end":156378,"line_start":916,"line_end":916,"column_start":1,"column_end":99}},{"value":"/ length first and constraining the pixel type.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":156379,"byte_end":156428,"line_start":917,"line_end":917,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":156429,"byte_end":156432,"line_start":918,"line_end":918,"column_start":1,"column_end":4}},{"value":"/ Note that this does not eliminate panics as the `AsRef<[T]>` implementation of `Buffer` may be","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":156433,"byte_end":156531,"line_start":919,"line_end":919,"column_start":1,"column_end":99}},{"value":"/ unreliable, i.e. return different buffers at different times. This of course is a non-issue for","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":156532,"byte_end":156631,"line_start":920,"line_end":920,"column_start":1,"column_end":100}},{"value":"/ all common collections where the bounds check once must be enough.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":156632,"byte_end":156702,"line_start":921,"line_end":921,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":156703,"byte_end":156706,"line_start":922,"line_end":922,"column_start":1,"column_end":4}},{"value":"/ # Inner invariants","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":156707,"byte_end":156729,"line_start":923,"line_end":923,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":156730,"byte_end":156733,"line_start":924,"line_end":924,"column_start":1,"column_end":4}},{"value":"/ * For all indices inside bounds, the corresponding index is valid in the buffer","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":156734,"byte_end":156817,"line_start":925,"line_end":925,"column_start":1,"column_end":84}},{"value":"/ * `P::channel_count()` agrees with `self.inner.layout.channels`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":156818,"byte_end":156885,"line_start":926,"line_end":926,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":156886,"byte_end":156889,"line_start":927,"line_end":927,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":2698},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":157775,"byte_end":157782,"line_start":952,"line_end":952,"column_start":12,"column_end":19},"name":"ViewMut","qualname":"::flat::ViewMut","value":"ViewMut {  }","parent":null,"children":[{"krate":0,"index":2701},{"krate":0,"index":2702}],"decl_id":null,"docs":" A mutable owning version of a flat buffer.","sig":null,"attributes":[{"value":"/ A mutable owning version of a flat buffer.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":157053,"byte_end":157099,"line_start":937,"line_end":937,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":157100,"byte_end":157103,"line_start":938,"line_end":938,"column_start":1,"column_end":4}},{"value":"/ While this wraps a buffer similar to `ImageBuffer`, this is mostly intended as a utility. The","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":157104,"byte_end":157201,"line_start":939,"line_end":939,"column_start":1,"column_end":98}},{"value":"/ library endorsed normalized representation is still `ImageBuffer`. Also, the implementation of","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":157202,"byte_end":157300,"line_start":940,"line_end":940,"column_start":1,"column_end":99}},{"value":"/ `AsMut<[P::Subpixel]>` must always yield the same buffer. Therefore there is no public way to","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":157301,"byte_end":157398,"line_start":941,"line_end":941,"column_start":1,"column_end":98}},{"value":"/ construct this with an owning buffer.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":157399,"byte_end":157440,"line_start":942,"line_end":942,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":157441,"byte_end":157444,"line_start":943,"line_end":943,"column_start":1,"column_end":4}},{"value":"/ # Inner invariants","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":157445,"byte_end":157467,"line_start":944,"line_end":944,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":157468,"byte_end":157471,"line_start":945,"line_end":945,"column_start":1,"column_end":4}},{"value":"/ * For all indices inside bounds, the corresponding index is valid in the buffer","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":157472,"byte_end":157555,"line_start":946,"line_end":946,"column_start":1,"column_end":84}},{"value":"/ * There is no aliasing of samples","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":157556,"byte_end":157593,"line_start":947,"line_end":947,"column_start":1,"column_end":38}},{"value":"/ * The samples are packed, i.e. `self.inner.layout.sample_stride == 1`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":157594,"byte_end":157667,"line_start":948,"line_end":948,"column_start":1,"column_end":74}},{"value":"/ * `P::channel_count()` agrees with `self.inner.layout.channels`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":157668,"byte_end":157735,"line_start":949,"line_end":949,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":157736,"byte_end":157739,"line_start":950,"line_end":950,"column_start":1,"column_end":4}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2712},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":158490,"byte_end":158498,"line_start":971,"line_end":971,"column_start":5,"column_end":13},"name":"TooLarge","qualname":"::flat::Error::TooLarge","value":"Error::TooLarge","parent":{"krate":0,"index":2711},"children":[],"decl_id":null,"docs":" The represented image was too large.","sig":null,"attributes":[{"value":"/ The represented image was too large.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":158367,"byte_end":158407,"line_start":968,"line_end":968,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":158412,"byte_end":158415,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ The optional value denotes a possibly accepted maximal bound.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":158420,"byte_end":158485,"line_start":970,"line_end":970,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2714},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":158655,"byte_end":158673,"line_start":976,"line_end":976,"column_start":5,"column_end":23},"name":"NormalFormRequired","qualname":"::flat::Error::NormalFormRequired","value":"Error::NormalFormRequired(NormalForm)","parent":{"krate":0,"index":2711},"children":[],"decl_id":null,"docs":" The represented image can not use this representation.","sig":null,"attributes":[{"value":"/ The represented image can not use this representation.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":158505,"byte_end":158563,"line_start":973,"line_end":973,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":158568,"byte_end":158571,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ Has an additional value of the normalized form that would be accepted.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":158576,"byte_end":158650,"line_start":975,"line_end":975,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2717},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":159282,"byte_end":159292,"line_start":987,"line_end":987,"column_start":5,"column_end":15},"name":"WrongColor","qualname":"::flat::Error::WrongColor","value":"Error::WrongColor(ColorType)","parent":{"krate":0,"index":2711},"children":[],"decl_id":null,"docs":" The color format did not match the channel count.","sig":null,"attributes":[{"value":"/ The color format did not match the channel count.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":158692,"byte_end":158745,"line_start":978,"line_end":978,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":158750,"byte_end":158753,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ In some cases you might be able to fix this by lowering the reported pixel count of the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":158758,"byte_end":158849,"line_start":980,"line_end":980,"column_start":5,"column_end":96}},{"value":"/ buffer without touching the strides.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":158854,"byte_end":158894,"line_start":981,"line_end":981,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":158899,"byte_end":158902,"line_start":982,"line_end":982,"column_start":5,"column_end":8}},{"value":"/ In very special circumstances you *may* do the opposite. This is **VERY** dangerous but not","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":158907,"byte_end":159002,"line_start":983,"line_end":983,"column_start":5,"column_end":100}},{"value":"/ directly memory unsafe although that will likely alias pixels. One scenario is when you","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":159007,"byte_end":159098,"line_start":984,"line_end":984,"column_start":5,"column_end":96}},{"value":"/ want to construct an `Rgba` image but have only 3 bytes per pixel and for some reason don't","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":159103,"byte_end":159198,"line_start":985,"line_end":985,"column_start":5,"column_end":100}},{"value":"/ care about the value of the alpha channel even though you need `Rgba`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":159203,"byte_end":159277,"line_start":986,"line_end":986,"column_start":5,"column_end":79}}]},{"kind":"Enum","id":{"krate":0,"index":2711},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":158355,"byte_end":158360,"line_start":967,"line_end":967,"column_start":10,"column_end":15},"name":"Error","qualname":"::flat::Error","value":"pub enum Error {\n\n    /// The represented image was too large.\n    ///\n    /// The optional value denotes a possibly accepted maximal bound.\n    TooLarge,\n\n    /// The represented image can not use this representation.\n    ///\n    /// Has an additional value of the normalized form that would be accepted.\n    NormalFormRequired(NormalForm),\n\n    /// The color format did not match the channel count.\n    ///\n    /// In some cases you might be able to fix this by lowering the reported pixel count of the\n    /// buffer without touching the strides.\n    ///\n    /// In very special circumstances you *may* do the opposite. This is **VERY** dangerous but not\n    /// directly memory unsafe although that will likely alias pixels. One scenario is when you\n    /// want to construct an `Rgba` image but have only 3 bytes per pixel and for some reason don't\n    /// care about the value of the alpha channel even though you need `Rgba`.\n    WrongColor(ColorType),\n}","parent":null,"children":[{"krate":0,"index":2712},{"krate":0,"index":2714},{"krate":0,"index":2717}],"decl_id":null,"docs":" Denotes invalid flat sample buffers when trying to convert to stricter types.","sig":null,"attributes":[{"value":"/ Denotes invalid flat sample buffers when trying to convert to stricter types.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":157906,"byte_end":157987,"line_start":960,"line_end":960,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":157988,"byte_end":157991,"line_start":961,"line_end":961,"column_start":1,"column_end":4}},{"value":"/ The biggest use case being `ImageBuffer` which expects closely packed","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":157992,"byte_end":158065,"line_start":962,"line_end":962,"column_start":1,"column_end":74}},{"value":"/ samples in a row major matrix representation. But this error type may be","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":158066,"byte_end":158142,"line_start":963,"line_end":963,"column_start":1,"column_end":77}},{"value":"/ resused for other import functions. A more versatile user may also try to","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":158143,"byte_end":158220,"line_start":964,"line_end":964,"column_start":1,"column_end":78}},{"value":"/ correct the underlying representation depending on the error variant.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":158221,"byte_end":158294,"line_start":965,"line_end":965,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2736},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":159791,"byte_end":159800,"line_start":1000,"line_end":1000,"column_start":5,"column_end":14},"name":"Unaliased","qualname":"::flat::NormalForm::Unaliased","value":"NormalForm::Unaliased","parent":{"krate":0,"index":2735},"children":[],"decl_id":null,"docs":" No pixel aliases another.","sig":null,"attributes":[{"value":"/ No pixel aliases another.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":159568,"byte_end":159597,"line_start":996,"line_end":996,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":159602,"byte_end":159605,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ Unaliased also guarantees that all index calculations in the image bounds using","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":159610,"byte_end":159693,"line_start":998,"line_end":998,"column_start":5,"column_end":88}},{"value":"/ `dim_index*dim_stride` (such as `x*width_stride + y*height_stride`) do not overflow.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":159698,"byte_end":159786,"line_start":999,"line_end":999,"column_start":5,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2738},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":160030,"byte_end":160041,"line_start":1006,"line_end":1006,"column_start":5,"column_end":16},"name":"PixelPacked","qualname":"::flat::NormalForm::PixelPacked","value":"NormalForm::PixelPacked","parent":{"krate":0,"index":2735},"children":[],"decl_id":null,"docs":" At least pixels are packed.","sig":null,"attributes":[{"value":"/ At least pixels are packed.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":159807,"byte_end":159838,"line_start":1002,"line_end":1002,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":159843,"byte_end":159846,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ Images of these types can wrap `[T]`-slices into the standard color types. This is a","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":159851,"byte_end":159939,"line_start":1004,"line_end":1004,"column_start":5,"column_end":93}},{"value":"/ precondition for `GenericImage` which requires by-reference access to pixels.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":159944,"byte_end":160025,"line_start":1005,"line_end":1005,"column_start":5,"column_end":86}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2740},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":160325,"byte_end":160336,"line_start":1013,"line_end":1013,"column_start":5,"column_end":16},"name":"ImagePacked","qualname":"::flat::NormalForm::ImagePacked","value":"NormalForm::ImagePacked","parent":{"krate":0,"index":2735},"children":[],"decl_id":null,"docs":" All samples are packed.","sig":null,"attributes":[{"value":"/ All samples are packed.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":160048,"byte_end":160075,"line_start":1008,"line_end":1008,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":160080,"byte_end":160083,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ This is orthogonal to `PixelPacked`. It requires that there are no holes in the image but","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":160088,"byte_end":160181,"line_start":1010,"line_end":1010,"column_start":5,"column_end":98}},{"value":"/ it is not necessary that the pixel samples themselves are adjacent. An example of this","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":160186,"byte_end":160276,"line_start":1011,"line_end":1011,"column_start":5,"column_end":95}},{"value":"/ behaviour is a planar image layout.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":160281,"byte_end":160320,"line_start":1012,"line_end":1012,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2742},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":160546,"byte_end":160560,"line_start":1019,"line_end":1019,"column_start":5,"column_end":19},"name":"RowMajorPacked","qualname":"::flat::NormalForm::RowMajorPacked","value":"NormalForm::RowMajorPacked","parent":{"krate":0,"index":2735},"children":[],"decl_id":null,"docs":" The samples are in row-major form and all samples are packed.","sig":null,"attributes":[{"value":"/ The samples are in row-major form and all samples are packed.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":160343,"byte_end":160408,"line_start":1015,"line_end":1015,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":160413,"byte_end":160416,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/ In addition to `PixelPacked` and `ImagePacked` this also asserts that the pixel matrix is","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":160421,"byte_end":160514,"line_start":1017,"line_end":1017,"column_start":5,"column_end":98}},{"value":"/ in row-major form.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":160519,"byte_end":160541,"line_start":1018,"line_end":1018,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2744},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":160776,"byte_end":160793,"line_start":1025,"line_end":1025,"column_start":5,"column_end":22},"name":"ColumnMajorPacked","qualname":"::flat::NormalForm::ColumnMajorPacked","value":"NormalForm::ColumnMajorPacked","parent":{"krate":0,"index":2735},"children":[],"decl_id":null,"docs":" The samples are in column-major form and all samples are packed.","sig":null,"attributes":[{"value":"/ The samples are in column-major form and all samples are packed.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":160567,"byte_end":160635,"line_start":1021,"line_end":1021,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":160640,"byte_end":160643,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/ In addition to `PixelPacked` and `ImagePacked` this also asserts that the pixel matrix is","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":160648,"byte_end":160741,"line_start":1023,"line_end":1023,"column_start":5,"column_end":98}},{"value":"/ in column-major form.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":160746,"byte_end":160771,"line_start":1024,"line_end":1024,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":2735},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":159551,"byte_end":159561,"line_start":995,"line_end":995,"column_start":10,"column_end":20},"name":"NormalForm","qualname":"::flat::NormalForm","value":"pub enum NormalForm {\n\n    /// No pixel aliases another.\n    ///\n    /// Unaliased also guarantees that all index calculations in the image bounds using\n    /// `dim_index*dim_stride` (such as `x*width_stride + y*height_stride`) do not overflow.\n    Unaliased,\n\n    /// At least pixels are packed.\n    ///\n    /// Images of these types can wrap `[T]`-slices into the standard color types. This is a\n    /// precondition for `GenericImage` which requires by-reference access to pixels.\n    PixelPacked,\n\n    /// All samples are packed.\n    ///\n    /// This is orthogonal to `PixelPacked`. It requires that there are no holes in the image but\n    /// it is not necessary that the pixel samples themselves are adjacent. An example of this\n    /// behaviour is a planar image layout.\n    ImagePacked,\n\n    /// The samples are in row-major form and all samples are packed.\n    ///\n    /// In addition to `PixelPacked` and `ImagePacked` this also asserts that the pixel matrix is\n    /// in row-major form.\n    RowMajorPacked,\n\n    /// The samples are in column-major form and all samples are packed.\n    ///\n    /// In addition to `PixelPacked` and `ImagePacked` this also asserts that the pixel matrix is\n    /// in column-major form.\n    ColumnMajorPacked,\n}","parent":null,"children":[{"krate":0,"index":2736},{"krate":0,"index":2738},{"krate":0,"index":2740},{"krate":0,"index":2742},{"krate":0,"index":2744}],"decl_id":null,"docs":" Different normal forms of buffers.","sig":null,"attributes":[{"value":"/ Different normal forms of buffers.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":159308,"byte_end":159346,"line_start":990,"line_end":990,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":159347,"byte_end":159350,"line_start":991,"line_end":991,"column_start":1,"column_end":4}},{"value":"/ A normal form is an unaliased buffer with some additional constraints.  The `ÌmageBuffer` uses","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":159351,"byte_end":159450,"line_start":992,"line_end":992,"column_start":1,"column_end":99}},{"value":"/ row major form with packed samples.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":159451,"byte_end":159490,"line_start":993,"line_end":993,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":161001,"byte_end":161011,"line_start":1035,"line_end":1035,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<View<Buffer, P>>::into_inner","value":"pub fn into_inner(Self) -> FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Take out the sample buffer.","sig":null,"attributes":[{"value":"/ Take out the sample buffer.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":160882,"byte_end":160913,"line_start":1032,"line_end":1032,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":160918,"byte_end":160921,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ Gives up the normalization invariants on the buffer format.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":160926,"byte_end":160989,"line_start":1034,"line_end":1034,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":161494,"byte_end":161498,"line_start":1045,"line_end":1045,"column_start":12,"column_end":16},"name":"flat","qualname":"<View<Buffer, P>>::flat","value":"pub fn flat(&Self) -> &FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the inner sample descriptor.","sig":null,"attributes":[{"value":"/ Get a reference on the inner sample descriptor.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":161073,"byte_end":161124,"line_start":1039,"line_end":1039,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":161129,"byte_end":161132,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ There is no mutable counterpart as modifying the buffer format, including strides and","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":161137,"byte_end":161226,"line_start":1041,"line_end":1041,"column_start":5,"column_end":94}},{"value":"/ lengths, could invalidate the accessibility invariants of the `View`. It is not specified","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":161231,"byte_end":161324,"line_start":1042,"line_end":1042,"column_start":5,"column_end":98}},{"value":"/ if the inner buffer is the same as the buffer of the image from which this view was","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":161329,"byte_end":161416,"line_start":1043,"line_end":1043,"column_start":5,"column_end":92}},{"value":"/ created. It might have been truncated as an optimization.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":161421,"byte_end":161482,"line_start":1044,"line_end":1044,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":161777,"byte_end":161784,"line_start":1053,"line_end":1053,"column_start":12,"column_end":19},"name":"samples","qualname":"<View<Buffer, P>>::samples","value":"pub fn samples(&Self) -> &Buffer","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the inner buffer.","sig":null,"attributes":[{"value":"/ Get a reference on the inner buffer.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":161563,"byte_end":161603,"line_start":1049,"line_end":1049,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":161608,"byte_end":161611,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ There is no mutable counter part since it is not intended to allow you to reassign the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":161616,"byte_end":161706,"line_start":1051,"line_end":1051,"column_start":5,"column_end":95}},{"value":"/ buffer or otherwise change its size or properties.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":161711,"byte_end":161765,"line_start":1052,"line_end":1052,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":162103,"byte_end":162113,"line_start":1061,"line_end":1061,"column_start":12,"column_end":22},"name":"get_sample","qualname":"<View<Buffer, P>>::get_sample","value":"pub fn get_sample(&Self, u8, u32, u32) -> Option<&P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a selected subpixel if it is in-bounds.","sig":null,"attributes":[{"value":"/ Get a reference to a selected subpixel if it is in-bounds.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":161844,"byte_end":161906,"line_start":1057,"line_end":1057,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":161911,"byte_end":161914,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` when the sample is out-of-bounds. All errors that could","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":161919,"byte_end":162009,"line_start":1059,"line_end":1059,"column_start":5,"column_end":95}},{"value":"/ occur due to overflow have been eliminated while construction the `View`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":162014,"byte_end":162091,"line_start":1060,"line_end":1060,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":162987,"byte_end":163001,"line_start":1079,"line_end":1079,"column_start":12,"column_end":26},"name":"get_mut_sample","qualname":"<View<Buffer, P>>::get_mut_sample","value":"pub fn get_mut_sample(&mut Self, u8, u32, u32) -> Option<&mut P::Subpixel>\nwhere Buffer: AsMut<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a selected subpixel if it is in-bounds.","sig":null,"attributes":[{"value":"/ Get a mutable reference to a selected subpixel if it is in-bounds.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":162445,"byte_end":162515,"line_start":1071,"line_end":1071,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":162520,"byte_end":162523,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/ This is relevant only when constructed with `FlatSamples::as_view_with_mut_samples`.  This","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":162528,"byte_end":162622,"line_start":1073,"line_end":1073,"column_start":5,"column_end":99}},{"value":"/ method will return `None` when the sample is out-of-bounds. All errors that could occur due","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":162627,"byte_end":162722,"line_start":1074,"line_end":1074,"column_start":5,"column_end":100}},{"value":"/ to overflow have been eliminated while construction the `View`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":162727,"byte_end":162794,"line_start":1075,"line_end":1075,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":162799,"byte_end":162802,"line_start":1076,"line_end":1076,"column_start":5,"column_end":8}},{"value":"/ **WARNING**: Note that of course samples may alias, so that the mutable reference returned","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":162807,"byte_end":162901,"line_start":1077,"line_end":1077,"column_start":5,"column_end":99}},{"value":"/ here can in fact modify more than the coordinate in the argument.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":162906,"byte_end":162975,"line_start":1078,"line_end":1078,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":163578,"byte_end":163588,"line_start":1094,"line_end":1094,"column_start":12,"column_end":22},"name":"min_length","qualname":"<View<Buffer, P>>::min_length","value":"pub fn min_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[{"value":"/ Get the minimum length of a buffer such that all in-bounds samples have valid indices.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":163396,"byte_end":163486,"line_start":1091,"line_end":1091,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":163491,"byte_end":163494,"line_start":1092,"line_end":1092,"column_start":5,"column_end":8}},{"value":"/ See `FlatSamples::min_length`. This method will always succeed.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":163499,"byte_end":163566,"line_start":1093,"line_end":1093,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":163922,"byte_end":163933,"line_start":1102,"line_end":1102,"column_start":12,"column_end":23},"name":"image_slice","qualname":"<View<Buffer, P>>::image_slice","value":"pub fn image_slice(&Self) -> &[P::Subpixel]","parent":null,"children":[],"decl_id":null,"docs":" Return the portion of the buffer that holds sample values.","sig":null,"attributes":[{"value":"/ Return the portion of the buffer that holds sample values.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":163659,"byte_end":163721,"line_start":1098,"line_end":1098,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":163726,"byte_end":163729,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}},{"value":"/ While this can not fail–the validity of all coordinates has been validated during the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":163734,"byte_end":163825,"line_start":1100,"line_end":1100,"column_start":5,"column_end":94}},{"value":"/ conversion from `FlatSamples`–the resulting slice may still contain holes.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":163830,"byte_end":163910,"line_start":1101,"line_end":1101,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":164390,"byte_end":164405,"line_start":1111,"line_end":1111,"column_start":12,"column_end":27},"name":"image_mut_slice","qualname":"<View<Buffer, P>>::image_mut_slice","value":"pub fn image_mut_slice(&mut Self) -> &mut [P::Subpixel] where\nBuffer: AsMut<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Return the mutable portion of the buffer that holds sample values.","sig":null,"attributes":[{"value":"/ Return the mutable portion of the buffer that holds sample values.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":164026,"byte_end":164096,"line_start":1106,"line_end":1106,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":164101,"byte_end":164104,"line_start":1107,"line_end":1107,"column_start":5,"column_end":8}},{"value":"/ This is relevant only when constructed with `FlatSamples::as_view_with_mut_samples`. While","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":164109,"byte_end":164203,"line_start":1108,"line_end":1108,"column_start":5,"column_end":99}},{"value":"/ this can not fail–the validity of all coordinates has been validated during the conversion","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":164208,"byte_end":164304,"line_start":1109,"line_end":1109,"column_start":5,"column_end":99}},{"value":"/ from `FlatSamples`–the resulting slice may still contain holes.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":164309,"byte_end":164378,"line_start":1110,"line_end":1110,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":164928,"byte_end":164937,"line_start":1123,"line_end":1123,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<View<Buffer, P>>::shrink_to","value":"pub fn shrink_to(&mut Self, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the inner image.","sig":null,"attributes":[{"value":"/ Shrink the inner image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":164598,"byte_end":164625,"line_start":1118,"line_end":1118,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":164630,"byte_end":164633,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ The new dimensions will be the minimum of the previous dimensions. Since the set of","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":164638,"byte_end":164725,"line_start":1120,"line_end":1120,"column_start":5,"column_end":92}},{"value":"/ in-bounds pixels afterwards is a subset of the current ones, this is allowed on a `View`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":164730,"byte_end":164823,"line_start":1121,"line_end":1121,"column_start":5,"column_end":98}},{"value":"/ Note that you can not change the number of channels as an intrinsic property of `P`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":164828,"byte_end":164916,"line_start":1122,"line_end":1122,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":637},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":165941,"byte_end":165952,"line_start":1146,"line_end":1146,"column_start":12,"column_end":23},"name":"try_upgrade","qualname":"<View<Buffer, P>>::try_upgrade","value":"pub fn try_upgrade(Self) -> Result<ViewMut<Buffer, P>, (Error, Self)> where\nBuffer: AsMut<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this into an image with mutable pixels.","sig":null,"attributes":[{"value":"/ Try to convert this into an image with mutable pixels.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":165092,"byte_end":165150,"line_start":1128,"line_end":1128,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":165155,"byte_end":165158,"line_start":1129,"line_end":1129,"column_start":5,"column_end":8}},{"value":"/ The resulting image implements `GenericImage` in addition to `GenericImageView`. While this","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":165163,"byte_end":165258,"line_start":1130,"line_end":1130,"column_start":5,"column_end":100}},{"value":"/ has mutable samples, it does not enforce that pixel can not alias and that samples are","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":165263,"byte_end":165353,"line_start":1131,"line_end":1131,"column_start":5,"column_end":95}},{"value":"/ packed enough for a mutable pixel reference. This is slightly cheaper than the chain","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":165358,"byte_end":165446,"line_start":1132,"line_end":1132,"column_start":5,"column_end":93}},{"value":"/ `self.into_inner().as_view_mut()` and keeps the `View` alive on failure.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":165451,"byte_end":165527,"line_start":1133,"line_end":1133,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":165532,"byte_end":165535,"line_start":1134,"line_end":1134,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":165540,"byte_end":165547,"line_start":1135,"line_end":1135,"column_start":5,"column_end":12}},{"value":"/ # use image::RgbImage;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":165552,"byte_end":165578,"line_start":1136,"line_end":1136,"column_start":5,"column_end":31}},{"value":"/ # use image::Rgb;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":165583,"byte_end":165604,"line_start":1137,"line_end":1137,"column_start":5,"column_end":26}},{"value":"/ let mut buffer = RgbImage::new(480, 640).into_flat_samples();","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":165609,"byte_end":165674,"line_start":1138,"line_end":1138,"column_start":5,"column_end":70}},{"value":"/ let view = buffer.as_view_with_mut_samples::<Rgb<u8>>().unwrap();","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":165679,"byte_end":165748,"line_start":1139,"line_end":1139,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":165753,"byte_end":165756,"line_start":1140,"line_end":1140,"column_start":5,"column_end":8}},{"value":"/ // Inspect some pixels, …","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":165761,"byte_end":165792,"line_start":1141,"line_end":1141,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":165797,"byte_end":165800,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ // Doesn't fail because it was originally an `RgbImage`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":165805,"byte_end":165865,"line_start":1143,"line_end":1143,"column_start":5,"column_end":65}},{"value":"/ let view_mut = view.try_upgrade().unwrap();","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":165870,"byte_end":165917,"line_start":1144,"line_end":1144,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":165922,"byte_end":165929,"line_start":1145,"line_end":1145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":166593,"byte_end":166603,"line_start":1168,"line_end":1168,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ViewMut<Buffer, P>>::into_inner","value":"pub fn into_inner(Self) -> FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Take out the sample buffer.","sig":null,"attributes":[{"value":"/ Take out the sample buffer.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":166474,"byte_end":166505,"line_start":1165,"line_end":1165,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":166510,"byte_end":166513,"line_start":1166,"line_end":1166,"column_start":5,"column_end":8}},{"value":"/ Gives up the normalization invariants on the buffer format.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":166518,"byte_end":166581,"line_start":1167,"line_end":1167,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":167087,"byte_end":167091,"line_start":1178,"line_end":1178,"column_start":12,"column_end":16},"name":"flat","qualname":"<ViewMut<Buffer, P>>::flat","value":"pub fn flat(&Self) -> &FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the sample buffer descriptor.","sig":null,"attributes":[{"value":"/ Get a reference on the sample buffer descriptor.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":166665,"byte_end":166717,"line_start":1172,"line_end":1172,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":166722,"byte_end":166725,"line_start":1173,"line_end":1173,"column_start":5,"column_end":8}},{"value":"/ There is no mutable counterpart as modifying the buffer format, including strides and","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":166730,"byte_end":166819,"line_start":1174,"line_end":1174,"column_start":5,"column_end":94}},{"value":"/ lengths, could invalidate the accessibility invariants of the `View`. It is not specified","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":166824,"byte_end":166917,"line_start":1175,"line_end":1175,"column_start":5,"column_end":98}},{"value":"/ if the inner buffer is the same as the buffer of the image from which this view was","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":166922,"byte_end":167009,"line_start":1176,"line_end":1176,"column_start":5,"column_end":92}},{"value":"/ created. It might have been truncated as an optimization.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":167014,"byte_end":167075,"line_start":1177,"line_end":1177,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":167464,"byte_end":167471,"line_start":1187,"line_end":1187,"column_start":12,"column_end":19},"name":"samples","qualname":"<ViewMut<Buffer, P>>::samples","value":"pub fn samples(&Self) -> &Buffer","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the inner buffer.","sig":null,"attributes":[{"value":"/ Get a reference on the inner buffer.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":167156,"byte_end":167196,"line_start":1182,"line_end":1182,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":167201,"byte_end":167204,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ There is no mutable counter part since it is not intended to allow you to reassign the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":167209,"byte_end":167299,"line_start":1184,"line_end":1184,"column_start":5,"column_end":95}},{"value":"/ buffer or otherwise change its size or properties. However, its contents can be accessed","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":167304,"byte_end":167396,"line_start":1185,"line_end":1185,"column_start":5,"column_end":97}},{"value":"/ mutable through a slice with `image_mut_slice`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":167401,"byte_end":167452,"line_start":1186,"line_end":1186,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":167713,"byte_end":167723,"line_start":1194,"line_end":1194,"column_start":12,"column_end":22},"name":"min_length","qualname":"<ViewMut<Buffer, P>>::min_length","value":"pub fn min_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[{"value":"/ Get the minimum length of a buffer such that all in-bounds samples have valid indices.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":167531,"byte_end":167621,"line_start":1191,"line_end":1191,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":167626,"byte_end":167629,"line_start":1192,"line_end":1192,"column_start":5,"column_end":8}},{"value":"/ See `FlatSamples::min_length`. This method will always succeed.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":167634,"byte_end":167701,"line_start":1193,"line_end":1193,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":168034,"byte_end":168044,"line_start":1202,"line_end":1202,"column_start":12,"column_end":22},"name":"get_sample","qualname":"<ViewMut<Buffer, P>>::get_sample","value":"pub fn get_sample(&Self, u8, u32, u32) -> Option<&P::Subpixel> where\nBuffer: AsRef<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a selected subpixel.","sig":null,"attributes":[{"value":"/ Get a reference to a selected subpixel.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":167794,"byte_end":167837,"line_start":1198,"line_end":1198,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":167842,"byte_end":167845,"line_start":1199,"line_end":1199,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` when the sample is out-of-bounds. All errors that could","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":167850,"byte_end":167940,"line_start":1200,"line_end":1200,"column_start":5,"column_end":95}},{"value":"/ occur due to overflow have been eliminated while construction the `View`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":167945,"byte_end":168022,"line_start":1201,"line_end":1201,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":168669,"byte_end":168683,"line_start":1218,"line_end":1218,"column_start":12,"column_end":26},"name":"get_mut_sample","qualname":"<ViewMut<Buffer, P>>::get_mut_sample","value":"pub fn get_mut_sample(&mut Self, u8, u32, u32) -> Option<&mut P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a selected sample.","sig":null,"attributes":[{"value":"/ Get a mutable reference to a selected sample.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":168423,"byte_end":168472,"line_start":1214,"line_end":1214,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":168477,"byte_end":168480,"line_start":1215,"line_end":1215,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` when the sample is out-of-bounds. All errors that could","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":168485,"byte_end":168575,"line_start":1216,"line_end":1216,"column_start":5,"column_end":95}},{"value":"/ occur due to overflow have been eliminated while construction the `View`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":168580,"byte_end":168657,"line_start":1217,"line_end":1217,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":169294,"byte_end":169305,"line_start":1232,"line_end":1232,"column_start":12,"column_end":23},"name":"image_slice","qualname":"<ViewMut<Buffer, P>>::image_slice","value":"pub fn image_slice(&Self) -> &[P::Subpixel] where Buffer: AsRef<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Return the portion of the buffer that holds sample values.","sig":null,"attributes":[{"value":"/ Return the portion of the buffer that holds sample values.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":169031,"byte_end":169093,"line_start":1228,"line_end":1228,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":169098,"byte_end":169101,"line_start":1229,"line_end":1229,"column_start":5,"column_end":8}},{"value":"/ While this can not fail–the validity of all coordinates has been validated during the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":169106,"byte_end":169197,"line_start":1230,"line_end":1230,"column_start":5,"column_end":94}},{"value":"/ conversion from `FlatSamples`–the resulting slice may still contain holes.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":169202,"byte_end":169282,"line_start":1231,"line_end":1231,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":169504,"byte_end":169519,"line_start":1237,"line_end":1237,"column_start":12,"column_end":27},"name":"image_mut_slice","qualname":"<ViewMut<Buffer, P>>::image_mut_slice","value":"pub fn image_mut_slice(&mut Self) -> &mut [P::Subpixel]","parent":null,"children":[],"decl_id":null,"docs":" Return the mutable buffer that holds sample values.\n","sig":null,"attributes":[{"value":"/ Return the mutable buffer that holds sample values.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":169437,"byte_end":169492,"line_start":1236,"line_end":1236,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":169987,"byte_end":169996,"line_start":1247,"line_end":1247,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<ViewMut<Buffer, P>>::shrink_to","value":"pub fn shrink_to(&mut Self, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the inner image.","sig":null,"attributes":[{"value":"/ Shrink the inner image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":169657,"byte_end":169684,"line_start":1242,"line_end":1242,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":169689,"byte_end":169692,"line_start":1243,"line_end":1243,"column_start":5,"column_end":8}},{"value":"/ The new dimensions will be the minimum of the previous dimensions. Since the set of","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":169697,"byte_end":169784,"line_start":1244,"line_end":1244,"column_start":5,"column_end":92}},{"value":"/ in-bounds pixels afterwards is a subset of the current ones, this is allowed on a `View`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":169789,"byte_end":169882,"line_start":1245,"line_end":1245,"column_start":5,"column_end":98}},{"value":"/ Note that you can not change the number of channels as an intrinsic property of `P`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":169887,"byte_end":169975,"line_start":1246,"line_end":1246,"column_start":5,"column_end":93}}]},{"kind":"Mod","id":{"krate":0,"index":703},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":7611,"byte_end":7617,"line_start":215,"line_end":215,"column_start":9,"column_end":15},"name":"codecs","qualname":"::codecs","value":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","parent":null,"children":[{"krate":0,"index":704},{"krate":0,"index":956},{"krate":0,"index":1060},{"krate":0,"index":1288}],"decl_id":null,"docs":" Encoding and decoding for various image file formats.","sig":null,"attributes":[{"value":"/ Encoding and decoding for various image file formats.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":5569,"byte_end":5626,"line_start":176,"line_end":176,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":5627,"byte_end":5630,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ # Supported formats","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":5631,"byte_end":5654,"line_start":178,"line_end":178,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":5655,"byte_end":5658,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ | Format | Decoding | Encoding |","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":5659,"byte_end":5695,"line_start":180,"line_end":180,"column_start":1,"column_end":37}},{"value":"/ | ------ | -------- | -------- |","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":5696,"byte_end":5732,"line_start":181,"line_end":181,"column_start":1,"column_end":37}},{"value":"/ | PNG    | All supported color types | Same as decoding |","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":5733,"byte_end":5794,"line_start":182,"line_end":182,"column_start":1,"column_end":62}},{"value":"/ | JPEG   | Baseline and progressive | Baseline JPEG |","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":5795,"byte_end":5852,"line_start":183,"line_end":183,"column_start":1,"column_end":58}},{"value":"/ | GIF    | Yes | Yes |","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":5853,"byte_end":5879,"line_start":184,"line_end":184,"column_start":1,"column_end":27}},{"value":"/ | BMP    | Yes | RGB8, RGBA8, Gray8, GrayA8 |","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":5880,"byte_end":5929,"line_start":185,"line_end":185,"column_start":1,"column_end":50}},{"value":"/ | ICO    | Yes | Yes |","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":5930,"byte_end":5956,"line_start":186,"line_end":186,"column_start":1,"column_end":27}},{"value":"/ | TIFF   | Baseline(no fax support) + LZW + PackBits | RGB8, RGBA8, Gray8 |","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":5957,"byte_end":6036,"line_start":187,"line_end":187,"column_start":1,"column_end":80}},{"value":"/ | WebP   | Lossy(Luma channel only) | No |","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":6037,"byte_end":6083,"line_start":188,"line_end":188,"column_start":1,"column_end":47}},{"value":"/ | PNM    | PBM, PGM, PPM, standard PAM | Yes |","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":6084,"byte_end":6134,"line_start":189,"line_end":189,"column_start":1,"column_end":51}},{"value":"/ | DDS    | DXT1, DXT3, DXT5 | No |","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":6135,"byte_end":6173,"line_start":190,"line_end":190,"column_start":1,"column_end":39}},{"value":"/ | TGA    | Yes | RGB8, RGBA8, BGR8, BGRA8, Gray8, GrayA8 |","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":6174,"byte_end":6236,"line_start":191,"line_end":191,"column_start":1,"column_end":63}},{"value":"/ | farbfeld | Yes | Yes |","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":6237,"byte_end":6265,"line_start":192,"line_end":192,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":6266,"byte_end":6269,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ ## A note on format specific features","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":6270,"byte_end":6311,"line_start":194,"line_end":194,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":6312,"byte_end":6315,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ One of the main goals of `image` is stability, in runtime but also for programmers. This","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":6316,"byte_end":6408,"line_start":196,"line_end":196,"column_start":1,"column_end":93}},{"value":"/ ensures that performance as well as safety fixes reach a majority of its user base with little","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":6409,"byte_end":6507,"line_start":197,"line_end":197,"column_start":1,"column_end":99}},{"value":"/ effort. Re-exporting all details of its dependencies would run counter to this goal as it","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":6508,"byte_end":6601,"line_start":198,"line_end":198,"column_start":1,"column_end":94}},{"value":"/ linked _all_ major version bumps between them and `image`. As such, we are wary of exposing too","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":6602,"byte_end":6701,"line_start":199,"line_end":199,"column_start":1,"column_end":100}},{"value":"/ many details, or configuration options, that are not shared between different image formats.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":6702,"byte_end":6798,"line_start":200,"line_end":200,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":6799,"byte_end":6802,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ Nevertheless, the advantage of precise control is hard to ignore. We will thus consider","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":6803,"byte_end":6894,"line_start":202,"line_end":202,"column_start":1,"column_end":92}},{"value":"/ _wrappers_, not direct re-exports, in either of the following cases:","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":6895,"byte_end":6967,"line_start":203,"line_end":203,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":6968,"byte_end":6971,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ 1. A standard specifies that configuration _x_ is required for decoders/encoders and there","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":6972,"byte_end":7066,"line_start":205,"line_end":205,"column_start":1,"column_end":95}},{"value":"/    exists an essentially canonical way to control it.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":7067,"byte_end":7124,"line_start":206,"line_end":206,"column_start":1,"column_end":58}},{"value":"/ 2. At least two different implementations agree on some (sub-)set of features in practice.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":7125,"byte_end":7219,"line_start":207,"line_end":207,"column_start":1,"column_end":95}},{"value":"/ 3. A technical argument including measurements of the performance, space benefits, or otherwise","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":7220,"byte_end":7319,"line_start":208,"line_end":208,"column_start":1,"column_end":100}},{"value":"/    objectively quantified benefits can be made, and the added interface is unlikely to require","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":7320,"byte_end":7418,"line_start":209,"line_end":209,"column_start":1,"column_end":99}},{"value":"/    breaking changes.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":7419,"byte_end":7443,"line_start":210,"line_end":210,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":7444,"byte_end":7447,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ Features that fulfill two or more criteria are preferred.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":7448,"byte_end":7509,"line_start":212,"line_end":212,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":7510,"byte_end":7513,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ Re-exports of dependencies that reach version `1` will be discussed when it happens.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":7514,"byte_end":7602,"line_start":214,"line_end":214,"column_start":1,"column_end":89}}]},{"kind":"Mod","id":{"krate":0,"index":704},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bmp","qualname":"::codecs::bmp","value":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/mod.rs","parent":null,"children":[{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":914}],"decl_id":null,"docs":"  Decoding and Encoding of BMP Images","sig":null,"attributes":[{"value":"cfg(feature = \"bmp\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":7671,"byte_end":7694,"line_start":218,"line_end":218,"column_start":5,"column_end":28}},{"value":"/  Decoding and Encoding of BMP Images","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/mod.rs","byte_start":183172,"byte_end":183212,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/mod.rs","byte_start":183213,"byte_end":183216,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/  A decoder and encoder for BMP (Windows Bitmap) images","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/mod.rs","byte_start":183217,"byte_end":183275,"line_start":3,"line_end":3,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/mod.rs","byte_start":183276,"byte_end":183279,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/  # Related Links","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/mod.rs","byte_start":183280,"byte_end":183300,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/  * <https://msdn.microsoft.com/en-us/library/windows/desktop/dd183375%28v=vs.85%29.aspx>","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/mod.rs","byte_start":183301,"byte_end":183393,"line_start":6,"line_end":6,"column_start":1,"column_end":93}},{"value":"/  * <https://en.wikipedia.org/wiki/BMP_file_format>","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/mod.rs","byte_start":183394,"byte_end":183448,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/mod.rs","byte_start":183449,"byte_end":183452,"line_start":8,"line_end":8,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":815},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/decoder.rs","byte_start":201589,"byte_end":201599,"line_start":545,"line_end":545,"column_start":12,"column_end":22},"name":"BmpDecoder","qualname":"::codecs::bmp::decoder::BmpDecoder","value":"BmpDecoder {  }","parent":null,"children":[{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830}],"decl_id":null,"docs":" A bmp decoder\n","sig":null,"attributes":[{"value":"/ A bmp decoder","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/decoder.rs","byte_start":201560,"byte_end":201577,"line_start":544,"line_end":544,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/decoder.rs","byte_start":204167,"byte_end":204170,"line_start":632,"line_end":632,"column_start":12,"column_end":15},"name":"new","qualname":"<BmpDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<BmpDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream ```r```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/decoder.rs","byte_start":204094,"byte_end":204155,"line_start":631,"line_end":631,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":890},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/decoder.rs","byte_start":235924,"byte_end":235933,"line_start":1419,"line_end":1419,"column_start":12,"column_end":21},"name":"BmpReader","qualname":"::codecs::bmp::decoder::BmpReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/decoder.rs","byte_start":235867,"byte_end":235912,"line_start":1418,"line_end":1418,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":931},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/encoder.rs","byte_start":238559,"byte_end":238569,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"BmpEncoder","qualname":"::codecs::bmp::encoder::BmpEncoder","value":"BmpEncoder {  }","parent":null,"children":[{"krate":0,"index":934}],"decl_id":null,"docs":" The representation of a BMP encoder.\n","sig":null,"attributes":[{"value":"/ The representation of a BMP encoder.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/encoder.rs","byte_start":238507,"byte_end":238547,"line_start":12,"line_end":12,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":935},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/encoder.rs","byte_start":238807,"byte_end":238817,"line_start":26,"line_end":26,"column_start":10,"column_end":20},"name":"BMPEncoder","qualname":"::codecs::bmp::encoder::BMPEncoder","value":"BmpEncoder","parent":null,"children":[],"decl_id":null,"docs":" BMP Encoder","sig":null,"attributes":[{"value":"/ BMP Encoder","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/encoder.rs","byte_start":238609,"byte_end":238624,"line_start":17,"line_end":17,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/encoder.rs","byte_start":238625,"byte_end":238628,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ An alias of [`BmpEncoder`].","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/encoder.rs","byte_start":238629,"byte_end":238660,"line_start":19,"line_end":19,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/encoder.rs","byte_start":238661,"byte_end":238664,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ TODO: remove","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/encoder.rs","byte_start":238665,"byte_end":238681,"line_start":21,"line_end":21,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/encoder.rs","byte_start":238682,"byte_end":238685,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [`BmpEncoder`]: struct.BmpEncoder.html","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/encoder.rs","byte_start":238686,"byte_end":238728,"line_start":23,"line_end":23,"column_start":1,"column_end":43}},{"value":"allow(dead_code)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/encoder.rs","byte_start":238729,"byte_end":238748,"line_start":24,"line_end":24,"column_start":1,"column_end":20}},{"value":"deprecated(note = \"Use `BmpEncoder` instead\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/encoder.rs","byte_start":238749,"byte_end":238797,"line_start":25,"line_end":25,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/encoder.rs","byte_start":238966,"byte_end":238969,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<BmpEncoder>::new","value":"pub fn new(&'a mut W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```.\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/encoder.rs","byte_start":238895,"byte_end":238954,"line_start":29,"line_end":29,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/encoder.rs","byte_start":239177,"byte_end":239183,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"encode","qualname":"<BmpEncoder>::encode","value":"pub fn encode(&mut Self, &[u8], u32, u32, color::ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```image```\n that has dimensions ```width``` and ```height```\n and ```ColorType``` ```c```.\n","sig":null,"attributes":[{"value":"/ Encodes the image ```image```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/encoder.rs","byte_start":239038,"byte_end":239071,"line_start":34,"line_end":34,"column_start":5,"column_end":38}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/encoder.rs","byte_start":239076,"byte_end":239128,"line_start":35,"line_end":35,"column_start":5,"column_end":57}},{"value":"/ and ```ColorType``` ```c```.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/encoder.rs","byte_start":239133,"byte_end":239165,"line_start":36,"line_end":36,"column_start":5,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":956},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gif","qualname":"::codecs::gif","value":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","parent":null,"children":[{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":4389},{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":4407},{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":994},{"krate":0,"index":997},{"krate":0,"index":1002},{"krate":0,"index":1006},{"krate":0,"index":1016},{"krate":0,"index":1022},{"krate":0,"index":1025},{"krate":0,"index":1031},{"krate":0,"index":1035},{"krate":0,"index":1039},{"krate":0,"index":1041},{"krate":0,"index":1055}],"decl_id":null,"docs":"  Decoding of GIF Images","sig":null,"attributes":[{"value":"cfg(feature = \"gif\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":7861,"byte_end":7884,"line_start":226,"line_end":226,"column_start":5,"column_end":28}},{"value":"/  Decoding of GIF Images","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":250135,"byte_end":250162,"line_start":1,"line_end":1,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":250163,"byte_end":250166,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/  GIF (Graphics Interchange Format) is an image format that supports lossless compression.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":250167,"byte_end":250260,"line_start":3,"line_end":3,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":250261,"byte_end":250264,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/  # Related Links","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":250265,"byte_end":250285,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/  * <http://www.w3.org/Graphics/GIF/spec-gif89a.txt> - The GIF Specification","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":250286,"byte_end":250365,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":250366,"byte_end":250369,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":250370,"byte_end":250384,"line_start":8,"line_end":8,"column_start":1,"column_end":15}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":250385,"byte_end":250403,"line_start":9,"line_end":9,"column_start":1,"column_end":19}},{"value":"/ use image::gif::{GifDecoder, GifEncoder};","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":250404,"byte_end":250449,"line_start":10,"line_end":10,"column_start":1,"column_end":46}},{"value":"/ use image::{ImageDecoder, AnimationDecoder};","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":250450,"byte_end":250498,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"/ use std::fs::File;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":250499,"byte_end":250521,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":250522,"byte_end":250562,"line_start":13,"line_end":13,"column_start":1,"column_end":41}},{"value":"/ // Decode a gif into frames","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":250563,"byte_end":250594,"line_start":14,"line_end":14,"column_start":1,"column_end":32}},{"value":"/ let file_in = File::open(\"foo.gif\")?;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":250595,"byte_end":250636,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/ let mut decoder = GifDecoder::new(file_in).unwrap();","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":250637,"byte_end":250693,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/ let frames = decoder.into_frames();","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":250694,"byte_end":250733,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"/ let frames = frames.collect_frames().expect(\"error decoding gif\");","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":250734,"byte_end":250804,"line_start":18,"line_end":18,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":250805,"byte_end":250808,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ // Encode frames into a gif and save to a file","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":250809,"byte_end":250859,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"/ let mut file_out = File::open(\"out.gif\")?;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":250860,"byte_end":250906,"line_start":21,"line_end":21,"column_start":1,"column_end":47}},{"value":"/ let mut encoder = GifEncoder::new(file_out);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":250907,"byte_end":250955,"line_start":22,"line_end":22,"column_start":1,"column_end":49}},{"value":"/ encoder.encode_frames(frames.into_iter());","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":250956,"byte_end":251002,"line_start":23,"line_end":23,"column_start":1,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":251003,"byte_end":251015,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":251016,"byte_end":251023,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":251024,"byte_end":251031,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"allow(clippy :: while_let_loop)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":251032,"byte_end":251065,"line_start":27,"line_end":27,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":991},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":251649,"byte_end":251659,"line_start":47,"line_end":47,"column_start":12,"column_end":22},"name":"GifDecoder","qualname":"::codecs::gif::GifDecoder","value":"GifDecoder {  }","parent":null,"children":[{"krate":0,"index":993}],"decl_id":null,"docs":" GIF decoder\n","sig":null,"attributes":[{"value":"/ GIF decoder","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":251622,"byte_end":251637,"line_start":46,"line_end":46,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":996},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":251811,"byte_end":251814,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<GifDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<GifDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder that decodes the input steam ```r```\n","sig":null,"attributes":[{"value":"/ Creates a new decoder that decodes the input steam ```r```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":251737,"byte_end":251799,"line_start":52,"line_end":52,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":997},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":252139,"byte_end":252148,"line_start":64,"line_end":64,"column_start":12,"column_end":21},"name":"GifReader","qualname":"::codecs::gif::GifReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":252082,"byte_end":252127,"line_start":63,"line_end":63,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1035},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":261124,"byte_end":261134,"line_start":293,"line_end":293,"column_start":12,"column_end":22},"name":"GifEncoder","qualname":"::codecs::gif::GifEncoder","value":"GifEncoder {  }","parent":null,"children":[{"krate":0,"index":1037},{"krate":0,"index":1038}],"decl_id":null,"docs":" GIF encoder.\n","sig":null,"attributes":[{"value":"/ GIF encoder.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":261096,"byte_end":261112,"line_start":292,"line_end":292,"column_start":1,"column_end":17}}]},{"kind":"Type","id":{"krate":0,"index":1039},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":261408,"byte_end":261415,"line_start":307,"line_end":307,"column_start":10,"column_end":17},"name":"Encoder","qualname":"::codecs::gif::Encoder","value":"GifEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" GIF encoder","sig":null,"attributes":[{"value":"/ GIF encoder","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":261210,"byte_end":261225,"line_start":298,"line_end":298,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":261226,"byte_end":261229,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ An alias of [`GifEncoder`].","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":261230,"byte_end":261261,"line_start":300,"line_end":300,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":261262,"byte_end":261265,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ TODO: remove","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":261266,"byte_end":261282,"line_start":302,"line_end":302,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":261283,"byte_end":261286,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/ [`GifEncoder`]: struct.GifEncoder.html","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":261287,"byte_end":261329,"line_start":304,"line_end":304,"column_start":1,"column_end":43}},{"value":"allow(dead_code)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":261330,"byte_end":261349,"line_start":305,"line_end":305,"column_start":1,"column_end":20}},{"value":"deprecated(note = \"Use `GifEncoder` instead\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":261350,"byte_end":261398,"line_start":306,"line_end":306,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":261514,"byte_end":261517,"line_start":311,"line_end":311,"column_start":12,"column_end":15},"name":"new","qualname":"<GifEncoder<W>>::new","value":"pub fn new(W) -> GifEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new GIF encoder.\n","sig":null,"attributes":[{"value":"/ Creates a new GIF encoder.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":261472,"byte_end":261502,"line_start":310,"line_end":310,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1044},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":261678,"byte_end":261684,"line_start":319,"line_end":319,"column_start":12,"column_end":18},"name":"encode","qualname":"<GifEncoder<W>>::encode","value":"pub fn encode(&mut Self, &[u8], u32, u32, ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode a single image.\n","sig":null,"attributes":[{"value":"/ Encode a single image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":261640,"byte_end":261666,"line_start":318,"line_end":318,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1045},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":262399,"byte_end":262411,"line_start":340,"line_end":340,"column_start":12,"column_end":24},"name":"encode_frame","qualname":"<GifEncoder<W>>::encode_frame","value":"pub fn encode_frame(&mut Self, animation::Frame) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode one frame of animation.\n","sig":null,"attributes":[{"value":"/ Encode one frame of animation.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":262353,"byte_end":262387,"line_start":339,"line_end":339,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1046},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":262697,"byte_end":262710,"line_start":347,"line_end":347,"column_start":12,"column_end":25},"name":"encode_frames","qualname":"<GifEncoder<W>>::encode_frames","value":"pub fn encode_frames<F>(&mut Self, F) -> ImageResult<()> where\nF: IntoIterator<Item = animation::Frame>","parent":null,"children":[],"decl_id":null,"docs":" Encodes Frames.\n Consider using `try_encode_frames` instead to encode an `animation::Frames` like iterator.\n","sig":null,"attributes":[{"value":"/ Encodes Frames.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":262567,"byte_end":262586,"line_start":345,"line_end":345,"column_start":5,"column_end":24}},{"value":"/ Consider using `try_encode_frames` instead to encode an `animation::Frames` like iterator.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":262591,"byte_end":262685,"line_start":346,"line_end":346,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":1048},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":263188,"byte_end":263205,"line_start":360,"line_end":360,"column_start":12,"column_end":29},"name":"try_encode_frames","qualname":"<GifEncoder<W>>::try_encode_frames","value":"pub fn try_encode_frames<F>(&mut Self, F) -> ImageResult<()> where\nF: IntoIterator<Item = ImageResult<animation::Frame>>","parent":null,"children":[],"decl_id":null,"docs":" Try to encode a collection of `ImageResult<animation::Frame>` objects.\n Use this function to encode an `animation::Frames` like iterator.\n Whenever an `Err` item is encountered, that value is returned without further actions.\n","sig":null,"attributes":[{"value":"/ Try to encode a collection of `ImageResult<animation::Frame>` objects.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":262933,"byte_end":263007,"line_start":357,"line_end":357,"column_start":5,"column_end":79}},{"value":"/ Use this function to encode an `animation::Frames` like iterator.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":263012,"byte_end":263081,"line_start":358,"line_end":358,"column_start":5,"column_end":74}},{"value":"/ Whenever an `Err` item is encountered, that value is returned without further actions.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":263086,"byte_end":263176,"line_start":359,"line_end":359,"column_start":5,"column_end":95}}]},{"kind":"Mod","id":{"krate":0,"index":1060},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"jpeg","qualname":"::codecs::jpeg","value":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/mod.rs","parent":null,"children":[{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":1064},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1117},{"krate":0,"index":1267},{"krate":0,"index":1270}],"decl_id":null,"docs":" Decoding and Encoding of JPEG Images","sig":null,"attributes":[{"value":"cfg(feature = \"jpeg\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":7996,"byte_end":8020,"line_start":232,"line_end":232,"column_start":5,"column_end":29}},{"value":"/ Decoding and Encoding of JPEG Images","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/mod.rs","byte_start":266215,"byte_end":266255,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/mod.rs","byte_start":266256,"byte_end":266259,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ JPEG (Joint Photographic Experts Group) is an image format that supports lossy compression.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/mod.rs","byte_start":266260,"byte_end":266355,"line_start":3,"line_end":3,"column_start":1,"column_end":96}},{"value":"/ This module implements the Baseline JPEG standard.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/mod.rs","byte_start":266356,"byte_end":266410,"line_start":4,"line_end":4,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/mod.rs","byte_start":266411,"byte_end":266414,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Related Links","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/mod.rs","byte_start":266415,"byte_end":266434,"line_start":6,"line_end":6,"column_start":1,"column_end":20}},{"value":"/ * <http://www.w3.org/Graphics/JPEG/itu-t81.pdf> - The JPEG specification","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/mod.rs","byte_start":266435,"byte_end":266511,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/mod.rs","byte_start":266512,"byte_end":266515,"line_start":8,"line_end":8,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":1085},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","byte_start":267088,"byte_end":267099,"line_start":13,"line_end":13,"column_start":12,"column_end":23},"name":"JpegDecoder","qualname":"::codecs::jpeg::decoder::JpegDecoder","value":"JpegDecoder {  }","parent":null,"children":[{"krate":0,"index":1087},{"krate":0,"index":1088}],"decl_id":null,"docs":" JPEG decoder\n","sig":null,"attributes":[{"value":"/ JPEG decoder","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","byte_start":267060,"byte_end":267076,"line_start":12,"line_end":12,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1091},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","byte_start":267278,"byte_end":267281,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<JpegDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<JpegDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream ```r```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","byte_start":267205,"byte_end":267266,"line_start":19,"line_end":19,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1092},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","byte_start":268398,"byte_end":268403,"line_start":50,"line_end":50,"column_start":12,"column_end":17},"name":"scale","qualname":"<JpegDecoder<R>>::scale","value":"pub fn scale(&mut Self, u16, u16) -> ImageResult<(u16, u16)>","parent":null,"children":[],"decl_id":null,"docs":" Configure the decoder to scale the image during decoding.","sig":null,"attributes":[{"value":"/ Configure the decoder to scale the image during decoding.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","byte_start":267784,"byte_end":267845,"line_start":37,"line_end":37,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","byte_start":267850,"byte_end":267853,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ This efficiently scales the image by the smallest supported","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","byte_start":267858,"byte_end":267921,"line_start":39,"line_end":39,"column_start":5,"column_end":68}},{"value":"/ scale factor that produces an image larger than or equal to","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","byte_start":267926,"byte_end":267989,"line_start":40,"line_end":40,"column_start":5,"column_end":68}},{"value":"/ the requested size in at least one axis. The currently","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","byte_start":267994,"byte_end":268052,"line_start":41,"line_end":41,"column_start":5,"column_end":63}},{"value":"/ implemented scale factors are 1/8, 1/4, 1/2 and 1.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","byte_start":268057,"byte_end":268111,"line_start":42,"line_end":42,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","byte_start":268116,"byte_end":268119,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ To generate a thumbnail of an exact size, pass the desired","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","byte_start":268124,"byte_end":268186,"line_start":44,"line_end":44,"column_start":5,"column_end":67}},{"value":"/ size and then scale to the final size using a traditional","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","byte_start":268191,"byte_end":268252,"line_start":45,"line_end":45,"column_start":5,"column_end":66}},{"value":"/ resampling algorithm.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","byte_start":268257,"byte_end":268282,"line_start":46,"line_end":46,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","byte_start":268287,"byte_end":268290,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ The size of the image to be loaded, with the scale factor","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","byte_start":268295,"byte_end":268356,"line_start":48,"line_end":48,"column_start":5,"column_end":66}},{"value":"/ applied, is returned.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","byte_start":268361,"byte_end":268386,"line_start":49,"line_end":49,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":1093},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","byte_start":268808,"byte_end":268818,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"JpegReader","qualname":"::codecs::jpeg::decoder::JpegReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","byte_start":268751,"byte_end":268796,"line_start":65,"line_end":65,"column_start":1,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2966},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":300392,"byte_end":300408,"line_start":275,"line_end":275,"column_start":5,"column_end":21},"name":"PixelAspectRatio","qualname":"::codecs::jpeg::encoder::PixelDensityUnit::PixelAspectRatio","value":"PixelDensityUnit::PixelAspectRatio","parent":{"krate":0,"index":2965},"children":[],"decl_id":null,"docs":" Represents the absence of a unit, the values indicate only a\n [pixel aspect ratio](https://en.wikipedia.org/wiki/Pixel_aspect_ratio)\n","sig":null,"attributes":[{"value":"/ Represents the absence of a unit, the values indicate only a","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":300244,"byte_end":300308,"line_start":273,"line_end":273,"column_start":5,"column_end":69}},{"value":"/ [pixel aspect ratio](https://en.wikipedia.org/wiki/Pixel_aspect_ratio)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":300313,"byte_end":300387,"line_start":274,"line_end":274,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2968},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":300449,"byte_end":300455,"line_start":278,"line_end":278,"column_start":5,"column_end":11},"name":"Inches","qualname":"::codecs::jpeg::encoder::PixelDensityUnit::Inches","value":"PixelDensityUnit::Inches","parent":{"krate":0,"index":2965},"children":[],"decl_id":null,"docs":" Pixels per inch (2.54 cm)\n","sig":null,"attributes":[{"value":"/ Pixels per inch (2.54 cm)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":300415,"byte_end":300444,"line_start":277,"line_end":277,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2970},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":300492,"byte_end":300503,"line_start":281,"line_end":281,"column_start":5,"column_end":16},"name":"Centimeters","qualname":"::codecs::jpeg::encoder::PixelDensityUnit::Centimeters","value":"PixelDensityUnit::Centimeters","parent":{"krate":0,"index":2965},"children":[],"decl_id":null,"docs":" Pixels per centimeter\n","sig":null,"attributes":[{"value":"/ Pixels per centimeter","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":300462,"byte_end":300487,"line_start":280,"line_end":280,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":2965},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":300221,"byte_end":300237,"line_start":272,"line_end":272,"column_start":10,"column_end":26},"name":"PixelDensityUnit","qualname":"::codecs::jpeg::encoder::PixelDensityUnit","value":"pub enum PixelDensityUnit {\n\n    /// Represents the absence of a unit, the values indicate only a\n    /// [pixel aspect ratio](https://en.wikipedia.org/wiki/Pixel_aspect_ratio)\n    PixelAspectRatio,\n\n    /// Pixels per inch (2.54 cm)\n    Inches,\n\n    /// Pixels per centimeter\n    Centimeters,\n}","parent":null,"children":[{"krate":0,"index":2966},{"krate":0,"index":2968},{"krate":0,"index":2970}],"decl_id":null,"docs":" Represents a unit in which the density of an image is measured\n","sig":null,"attributes":[{"value":"/ Represents a unit in which the density of an image is measured","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":300100,"byte_end":300166,"line_start":270,"line_end":270,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":2983},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":300840,"byte_end":300852,"line_start":294,"line_end":294,"column_start":12,"column_end":24},"name":"PixelDensity","qualname":"::codecs::jpeg::encoder::PixelDensity","value":"PixelDensity { density, unit }","parent":null,"children":[{"krate":0,"index":2984},{"krate":0,"index":2985}],"decl_id":null,"docs":" Represents the pixel density of an image","sig":null,"attributes":[{"value":"/ Represents the pixel density of an image","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":300508,"byte_end":300552,"line_start":284,"line_end":284,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":300553,"byte_end":300556,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ For example, a 300 DPI image is represented by:","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":300557,"byte_end":300608,"line_start":286,"line_end":286,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":300609,"byte_end":300612,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":300613,"byte_end":300624,"line_start":288,"line_end":288,"column_start":1,"column_end":12}},{"value":"/ use image::jpeg::*;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":300625,"byte_end":300648,"line_start":289,"line_end":289,"column_start":1,"column_end":24}},{"value":"/ let hdpi = PixelDensity::dpi(300);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":300649,"byte_end":300687,"line_start":290,"line_end":290,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(hdpi, PixelDensity {density: (300,300), unit: PixelDensityUnit::Inches})","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":300688,"byte_end":300775,"line_start":291,"line_end":291,"column_start":1,"column_end":88}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":300776,"byte_end":300783,"line_start":292,"line_end":292,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":2984},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":300915,"byte_end":300922,"line_start":296,"line_end":296,"column_start":9,"column_end":16},"name":"density","qualname":"::codecs::jpeg::encoder::PixelDensity::density","value":"(u16, u16)","parent":{"krate":0,"index":2983},"children":[],"decl_id":null,"docs":" A couple of values for (Xdensity, Ydensity)\n","sig":null,"attributes":[{"value":"/ A couple of values for (Xdensity, Ydensity)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":300859,"byte_end":300906,"line_start":295,"line_end":295,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2985},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":300994,"byte_end":300998,"line_start":298,"line_end":298,"column_start":9,"column_end":13},"name":"unit","qualname":"::codecs::jpeg::encoder::PixelDensity::unit","value":"codecs::jpeg::encoder::PixelDensityUnit","parent":{"krate":0,"index":2983},"children":[],"decl_id":null,"docs":" The unit in which the density is measured\n","sig":null,"attributes":[{"value":"/ The unit in which the density is measured","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":300940,"byte_end":300985,"line_start":297,"line_end":297,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1195},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":301204,"byte_end":301207,"line_start":305,"line_end":305,"column_start":12,"column_end":15},"name":"dpi","qualname":"<PixelDensity>::dpi","value":"pub fn dpi(u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates the most common pixel density type:\n the horizontal and the vertical density are equal,\n and measured in pixels per inch.\n","sig":null,"attributes":[{"value":"/ Creates the most common pixel density type:","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":301045,"byte_end":301092,"line_start":302,"line_end":302,"column_start":5,"column_end":52}},{"value":"/ the horizontal and the vertical density are equal,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":301097,"byte_end":301151,"line_start":303,"line_end":303,"column_start":5,"column_end":59}},{"value":"/ and measured in pixels per inch.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":301156,"byte_end":301192,"line_start":304,"line_end":304,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1198},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":301658,"byte_end":301669,"line_start":324,"line_end":324,"column_start":12,"column_end":23},"name":"JpegEncoder","qualname":"::codecs::jpeg::encoder::JpegEncoder","value":"JpegEncoder {  }","parent":null,"children":[{"krate":0,"index":1201},{"krate":0,"index":1202},{"krate":0,"index":1203},{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":1208},{"krate":0,"index":1209}],"decl_id":null,"docs":" The representation of a JPEG encoder\n","sig":null,"attributes":[{"value":"/ The representation of a JPEG encoder","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":301606,"byte_end":301646,"line_start":323,"line_end":323,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":1210},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":302154,"byte_end":302165,"line_start":347,"line_end":347,"column_start":10,"column_end":21},"name":"JPEGEncoder","qualname":"::codecs::jpeg::encoder::JPEGEncoder","value":"JpegEncoder","parent":null,"children":[],"decl_id":null,"docs":" JPEG Encoder","sig":null,"attributes":[{"value":"/ JPEG Encoder","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":301951,"byte_end":301967,"line_start":338,"line_end":338,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":301968,"byte_end":301971,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ An alias of [`JpegEncoder`].","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":301972,"byte_end":302004,"line_start":340,"line_end":340,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":302005,"byte_end":302008,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ TODO: remove","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":302009,"byte_end":302025,"line_start":342,"line_end":342,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":302026,"byte_end":302029,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ [`JpegEncoder`]: struct.JpegEncoder.html","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":302030,"byte_end":302074,"line_start":344,"line_end":344,"column_start":1,"column_end":45}},{"value":"allow(dead_code)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":302075,"byte_end":302094,"line_start":345,"line_end":345,"column_start":1,"column_end":20}},{"value":"deprecated(note = \"Use `JpegEncoder` instead\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":302095,"byte_end":302144,"line_start":346,"line_end":346,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1216},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":302310,"byte_end":302313,"line_start":351,"line_end":351,"column_start":12,"column_end":15},"name":"new","qualname":"<JpegEncoder>::new","value":"pub fn new(&mut W) -> JpegEncoder<, W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":302240,"byte_end":302298,"line_start":350,"line_end":350,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1217},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":302606,"byte_end":302622,"line_start":358,"line_end":358,"column_start":12,"column_end":28},"name":"new_with_quality","qualname":"<JpegEncoder>::new_with_quality","value":"pub fn new_with_quality(&mut W, u8) -> JpegEncoder<, W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```, and has\n the quality parameter ```quality``` with a value in the range 1-100\n where 1 is the worst and 100 is the best.\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```, and has","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":302401,"byte_end":302468,"line_start":355,"line_end":355,"column_start":5,"column_end":72}},{"value":"/ the quality parameter ```quality``` with a value in the range 1-100","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":302473,"byte_end":302544,"line_start":356,"line_end":356,"column_start":5,"column_end":76}},{"value":"/ where 1 is the worst and 100 is the best.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":302549,"byte_end":302594,"line_start":357,"line_end":357,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1220},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":304964,"byte_end":304981,"line_start":430,"line_end":430,"column_start":12,"column_end":29},"name":"set_pixel_density","qualname":"<JpegEncoder>::set_pixel_density","value":"pub fn set_pixel_density(&mut Self, PixelDensity)","parent":null,"children":[],"decl_id":null,"docs":" Set the pixel density of the images the encoder will encode.\n If this method is not called, then a default pixel aspect ratio of 1x1 will be applied,\n and no DPI information will be stored in the image.\n","sig":null,"attributes":[{"value":"/ Set the pixel density of the images the encoder will encode.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":304732,"byte_end":304796,"line_start":427,"line_end":427,"column_start":5,"column_end":69}},{"value":"/ If this method is not called, then a default pixel aspect ratio of 1x1 will be applied,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":304801,"byte_end":304892,"line_start":428,"line_end":428,"column_start":5,"column_end":96}},{"value":"/ and no DPI information will be stored in the image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":304897,"byte_end":304952,"line_start":429,"line_end":429,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1221},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":305313,"byte_end":305319,"line_start":439,"line_end":439,"column_start":12,"column_end":18},"name":"encode","qualname":"<JpegEncoder>::encode","value":"pub fn encode(&mut Self, &[u8], u32, u32, ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image stored in the raw byte buffer ```image```\n that has dimensions ```width``` and ```height```\n and ```ColorType``` ```c```","sig":null,"attributes":[{"value":"/ Encodes the image stored in the raw byte buffer ```image```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":305079,"byte_end":305142,"line_start":434,"line_end":434,"column_start":5,"column_end":68}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":305147,"byte_end":305199,"line_start":435,"line_end":435,"column_start":5,"column_end":57}},{"value":"/ and ```ColorType``` ```c```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":305204,"byte_end":305235,"line_start":436,"line_end":436,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":305240,"byte_end":305243,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ The Image in encoded with subsampling ratio 4:2:2","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":305248,"byte_end":305301,"line_start":438,"line_end":438,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1222},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":307520,"byte_end":307532,"line_start":491,"line_end":491,"column_start":12,"column_end":24},"name":"encode_image","qualname":"<JpegEncoder>::encode_image","value":"pub fn encode_image<I: GenericImageView>(&mut Self, &I) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the given image.","sig":null,"attributes":[{"value":"/ Encodes the given image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":306992,"byte_end":307020,"line_start":482,"line_end":482,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":307025,"byte_end":307028,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ As a special feature this does not require the whole image to be present in memory at the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":307033,"byte_end":307126,"line_start":484,"line_end":484,"column_start":5,"column_end":98}},{"value":"/ same time such that it may be computed on the fly, which is why this method exists on this","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":307131,"byte_end":307225,"line_start":485,"line_end":485,"column_start":5,"column_end":99}},{"value":"/ encoder but not on others. Instead the encoder will iterate over 8-by-8 blocks of pixels at","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":307230,"byte_end":307325,"line_start":486,"line_end":486,"column_start":5,"column_end":100}},{"value":"/ a time, inspecting each pixel exactly once. You can rely on this behaviour when calling","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":307330,"byte_end":307421,"line_start":487,"line_end":487,"column_start":5,"column_end":96}},{"value":"/ this method.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":307426,"byte_end":307442,"line_start":488,"line_end":488,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":307447,"byte_end":307450,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ The Image in encoded with subsampling ratio 4:2:2","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":307455,"byte_end":307508,"line_start":490,"line_end":490,"column_start":5,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":1288},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"png","qualname":"::codecs::png","value":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","parent":null,"children":[{"krate":0,"index":1289},{"krate":0,"index":1290},{"krate":0,"index":1291},{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1294},{"krate":0,"index":1295},{"krate":0,"index":1296},{"krate":0,"index":1297},{"krate":0,"index":1298},{"krate":0,"index":1299},{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1302},{"krate":0,"index":4549},{"krate":0,"index":1303},{"krate":0,"index":4551},{"krate":0,"index":1304},{"krate":0,"index":1305},{"krate":0,"index":4555},{"krate":0,"index":1306},{"krate":0,"index":4557},{"krate":0,"index":1307},{"krate":0,"index":1308},{"krate":0,"index":1309},{"krate":0,"index":1310},{"krate":0,"index":1311},{"krate":0,"index":1312},{"krate":0,"index":1313},{"krate":0,"index":1314},{"krate":0,"index":1315},{"krate":0,"index":1316},{"krate":0,"index":1317},{"krate":0,"index":1318},{"krate":0,"index":1319},{"krate":0,"index":1320},{"krate":0,"index":1321},{"krate":0,"index":1322},{"krate":0,"index":1323},{"krate":0,"index":1324},{"krate":0,"index":1325},{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":1335},{"krate":0,"index":1337},{"krate":0,"index":1340},{"krate":0,"index":1344},{"krate":0,"index":1348},{"krate":0,"index":1353},{"krate":0,"index":1354},{"krate":0,"index":1368},{"krate":0,"index":1376},{"krate":0,"index":1382},{"krate":0,"index":1394},{"krate":0,"index":1399},{"krate":0,"index":2998},{"krate":0,"index":3022},{"krate":0,"index":3021},{"krate":0,"index":3019},{"krate":0,"index":3016},{"krate":0,"index":3017},{"krate":0,"index":3012},{"krate":0,"index":3013},{"krate":0,"index":3024},{"krate":0,"index":3048},{"krate":0,"index":3047},{"krate":0,"index":3045},{"krate":0,"index":3042},{"krate":0,"index":3043},{"krate":0,"index":3038},{"krate":0,"index":3039},{"krate":0,"index":1401},{"krate":0,"index":1408},{"krate":0,"index":1416},{"krate":0,"index":1419},{"krate":0,"index":1421}],"decl_id":null,"docs":" Decoding and Encoding of PNG Images","sig":null,"attributes":[{"value":"cfg(feature = \"png\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":8043,"byte_end":8066,"line_start":234,"line_end":234,"column_start":5,"column_end":28}},{"value":"/ Decoding and Encoding of PNG Images","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":334764,"byte_end":334803,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":334804,"byte_end":334807,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ PNG (Portable Network Graphics) is an image format that supports lossless compression.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":334808,"byte_end":334898,"line_start":3,"line_end":3,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":334899,"byte_end":334902,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Related Links","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":334903,"byte_end":334922,"line_start":5,"line_end":5,"column_start":1,"column_end":20}},{"value":"/ * <http://www.w3.org/TR/PNG/> - The PNG Specification","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":334923,"byte_end":334980,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":334981,"byte_end":334984,"line_start":7,"line_end":7,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":1330},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":335737,"byte_end":335746,"line_start":28,"line_end":28,"column_start":12,"column_end":21},"name":"PngReader","qualname":"::codecs::png::PngReader","value":"PngReader {  }","parent":null,"children":[{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1334}],"decl_id":null,"docs":" Png Reader","sig":null,"attributes":[{"value":"/ Png Reader","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":335547,"byte_end":335561,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":335562,"byte_end":335565,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This reader will try to read the png one row at a time,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":335566,"byte_end":335625,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/ however for interlaced png files this is not possible and","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":335626,"byte_end":335687,"line_start":26,"line_end":26,"column_start":1,"column_end":62}},{"value":"/ these are therefore read at once.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":335688,"byte_end":335725,"line_start":27,"line_end":27,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":1335},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":336021,"byte_end":336030,"line_start":43,"line_end":43,"column_start":10,"column_end":19},"name":"PNGReader","qualname":"::codecs::png::PNGReader","value":"PngReader<R>","parent":null,"children":[],"decl_id":null,"docs":" PNG Reader","sig":null,"attributes":[{"value":"/ PNG Reader","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":335828,"byte_end":335842,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":335843,"byte_end":335846,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ An alias of [`PngReader`].","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":335847,"byte_end":335877,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":335878,"byte_end":335881,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ TODO: remove","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":335882,"byte_end":335898,"line_start":38,"line_end":38,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":335899,"byte_end":335902,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`PngReader`]: struct.PngReader.html","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":335903,"byte_end":335943,"line_start":40,"line_end":40,"column_start":1,"column_end":41}},{"value":"allow(dead_code)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":335944,"byte_end":335963,"line_start":41,"line_end":41,"column_start":1,"column_end":20}},{"value":"deprecated(note = \"Use `PngReader` instead\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":335964,"byte_end":336011,"line_start":42,"line_end":42,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":1344},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":338112,"byte_end":338122,"line_start":115,"line_end":115,"column_start":12,"column_end":22},"name":"PngDecoder","qualname":"::codecs::png::PngDecoder","value":"PngDecoder {  }","parent":null,"children":[{"krate":0,"index":1346},{"krate":0,"index":1347}],"decl_id":null,"docs":" PNG decoder\n","sig":null,"attributes":[{"value":"/ PNG decoder","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":338085,"byte_end":338100,"line_start":114,"line_end":114,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1350},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":338300,"byte_end":338303,"line_start":122,"line_end":122,"column_start":12,"column_end":15},"name":"new","qualname":"<PngDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<PngDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Creates a new decoder that decodes from the stream ```r```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":338226,"byte_end":338288,"line_start":121,"line_end":121,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1351},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":342056,"byte_end":342060,"line_start":187,"line_end":187,"column_start":12,"column_end":16},"name":"apng","qualname":"<PngDecoder<R>>::apng","value":"pub fn apng(Self) -> ApngDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Turn this into an iterator over the animation frames.","sig":null,"attributes":[{"value":"/ Turn this into an iterator over the animation frames.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":341409,"byte_end":341466,"line_start":177,"line_end":177,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":341471,"byte_end":341474,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ Reading the complete animation requires more memory than reading the data from the IDAT","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":341479,"byte_end":341570,"line_start":179,"line_end":179,"column_start":5,"column_end":96}},{"value":"/ frame–multiple frame buffers need to be reserved at the same time. We further do not","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":341575,"byte_end":341665,"line_start":180,"line_end":180,"column_start":5,"column_end":93}},{"value":"/ support compositing 16-bit colors. In any case this would be lossy as the interface of","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":341670,"byte_end":341760,"line_start":181,"line_end":181,"column_start":5,"column_end":95}},{"value":"/ animation decoders does not support 16-bit colors.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":341765,"byte_end":341819,"line_start":182,"line_end":182,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":341824,"byte_end":341827,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ If something is not supported or a limit is violated then the decoding step that requires","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":341832,"byte_end":341925,"line_start":184,"line_end":184,"column_start":5,"column_end":98}},{"value":"/ them will fail and an error will be returned instead of the frame. No further frames will","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":341930,"byte_end":342023,"line_start":185,"line_end":185,"column_start":5,"column_end":98}},{"value":"/ be returned.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":342028,"byte_end":342044,"line_start":186,"line_end":186,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1352},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":342483,"byte_end":342490,"line_start":197,"line_end":197,"column_start":12,"column_end":19},"name":"is_apng","qualname":"<PngDecoder<R>>::is_apng","value":"pub fn is_apng(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if the image contains an animation.","sig":null,"attributes":[{"value":"/ Returns if the image contains an animation.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":342129,"byte_end":342176,"line_start":191,"line_end":191,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":342181,"byte_end":342184,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ Note that the file itself decides if the default image is considered to be part of the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":342189,"byte_end":342279,"line_start":193,"line_end":193,"column_start":5,"column_end":95}},{"value":"/ animation. When it is not the common interpretation is to use it as a thumbnail.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":342284,"byte_end":342368,"line_start":194,"line_end":194,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":342373,"byte_end":342376,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ If a non-animated image is converted into an `ApngDecoder` then its iterator is empty.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":342381,"byte_end":342471,"line_start":196,"line_end":196,"column_start":5,"column_end":95}}]},{"kind":"Struct","id":{"krate":0,"index":1368},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":344459,"byte_end":344470,"line_start":258,"line_end":258,"column_start":12,"column_end":23},"name":"ApngDecoder","qualname":"::codecs::png::ApngDecoder","value":"ApngDecoder {  }","parent":null,"children":[{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1374},{"krate":0,"index":1375}],"decl_id":null,"docs":" An [`AnimationDecoder`] adapter of [`PngDecoder`].","sig":null,"attributes":[{"value":"/ An [`AnimationDecoder`] adapter of [`PngDecoder`].","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":344173,"byte_end":344227,"line_start":251,"line_end":251,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":344228,"byte_end":344231,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ See [`PngDecoder::apng`] for more information.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":344232,"byte_end":344282,"line_start":253,"line_end":253,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":344283,"byte_end":344286,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ [`AnimationDecoder`]: ../trait.AnimationDecoder.html","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":344287,"byte_end":344343,"line_start":255,"line_end":255,"column_start":1,"column_end":57}},{"value":"/ [`PngDecoder`]: struct.PngDecoder.html","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":344344,"byte_end":344386,"line_start":256,"line_end":256,"column_start":1,"column_end":43}},{"value":"/ [`PngDecoder::apng`]: struct.PngDecoder.html#method.apng","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":344387,"byte_end":344447,"line_start":257,"line_end":257,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":1394},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":351663,"byte_end":351673,"line_start":445,"line_end":445,"column_start":12,"column_end":22},"name":"PngEncoder","qualname":"::codecs::png::PngEncoder","value":"PngEncoder {  }","parent":null,"children":[{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1398}],"decl_id":null,"docs":" PNG encoder\n","sig":null,"attributes":[{"value":"/ PNG encoder","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":351636,"byte_end":351651,"line_start":444,"line_end":444,"column_start":1,"column_end":16}}]},{"kind":"Type","id":{"krate":0,"index":1399},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":351955,"byte_end":351965,"line_start":460,"line_end":460,"column_start":10,"column_end":20},"name":"PNGEncoder","qualname":"::codecs::png::PNGEncoder","value":"PngEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" PNG Encoder","sig":null,"attributes":[{"value":"/ PNG Encoder","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":351757,"byte_end":351772,"line_start":451,"line_end":451,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":351773,"byte_end":351776,"line_start":452,"line_end":452,"column_start":1,"column_end":4}},{"value":"/ An alias of [`PngEncoder`].","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":351777,"byte_end":351808,"line_start":453,"line_end":453,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":351809,"byte_end":351812,"line_start":454,"line_end":454,"column_start":1,"column_end":4}},{"value":"/ TODO: remove","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":351813,"byte_end":351829,"line_start":455,"line_end":455,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":351830,"byte_end":351833,"line_start":456,"line_end":456,"column_start":1,"column_end":4}},{"value":"/ [`PngEncoder`]: struct.PngEncoder.html","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":351834,"byte_end":351876,"line_start":457,"line_end":457,"column_start":1,"column_end":43}},{"value":"allow(dead_code)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":351877,"byte_end":351896,"line_start":458,"line_end":458,"column_start":1,"column_end":20}},{"value":"deprecated(note = \"Use `PngEncoder` instead\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":351897,"byte_end":351945,"line_start":459,"line_end":459,"column_start":1,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2999},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":352168,"byte_end":352175,"line_start":466,"line_end":466,"column_start":5,"column_end":12},"name":"Default","qualname":"::codecs::png::CompressionType::Default","value":"CompressionType::Default","parent":{"krate":0,"index":2998},"children":[],"decl_id":null,"docs":" Default compression level\n","sig":null,"attributes":[{"value":"/ Default compression level","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":352134,"byte_end":352163,"line_start":465,"line_end":465,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3001},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":352215,"byte_end":352219,"line_start":468,"line_end":468,"column_start":5,"column_end":9},"name":"Fast","qualname":"::codecs::png::CompressionType::Fast","value":"CompressionType::Fast","parent":{"krate":0,"index":2998},"children":[],"decl_id":null,"docs":" Fast, minimal compression\n","sig":null,"attributes":[{"value":"/ Fast, minimal compression","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":352181,"byte_end":352210,"line_start":467,"line_end":467,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3003},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":352256,"byte_end":352260,"line_start":470,"line_end":470,"column_start":5,"column_end":9},"name":"Best","qualname":"::codecs::png::CompressionType::Best","value":"CompressionType::Best","parent":{"krate":0,"index":2998},"children":[],"decl_id":null,"docs":" High compression level\n","sig":null,"attributes":[{"value":"/ High compression level","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":352225,"byte_end":352251,"line_start":469,"line_end":469,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3005},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":352301,"byte_end":352308,"line_start":472,"line_end":472,"column_start":5,"column_end":12},"name":"Huffman","qualname":"::codecs::png::CompressionType::Huffman","value":"CompressionType::Huffman","parent":{"krate":0,"index":2998},"children":[],"decl_id":null,"docs":" Huffman coding compression\n","sig":null,"attributes":[{"value":"/ Huffman coding compression","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":352266,"byte_end":352296,"line_start":471,"line_end":471,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3007},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":352354,"byte_end":352357,"line_start":474,"line_end":474,"column_start":5,"column_end":8},"name":"Rle","qualname":"::codecs::png::CompressionType::Rle","value":"CompressionType::Rle","parent":{"krate":0,"index":2998},"children":[],"decl_id":null,"docs":" Run-length encoding compression\n","sig":null,"attributes":[{"value":"/ Run-length encoding compression","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":352314,"byte_end":352349,"line_start":473,"line_end":473,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3009},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":352383,"byte_end":352398,"line_start":477,"line_end":477,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::codecs::png::CompressionType::__NonExhaustive","value":"CompressionType::__NonExhaustive(crate::utils::NonExhaustiveMarker)","parent":{"krate":0,"index":2998},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2998},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":352112,"byte_end":352127,"line_start":464,"line_end":464,"column_start":10,"column_end":25},"name":"CompressionType","qualname":"::codecs::png::CompressionType","value":"pub enum CompressionType {\n\n    /// Default compression level\n    Default,\n\n    /// Fast, minimal compression\n    Fast,\n\n    /// High compression level\n    Best,\n\n    /// Huffman coding compression\n    Huffman,\n\n    /// Run-length encoding compression\n    Rle,\n\n    #[doc(hidden)]\n    __NonExhaustive(crate::utils::NonExhaustiveMarker),\n}","parent":null,"children":[{"krate":0,"index":2999},{"krate":0,"index":3001},{"krate":0,"index":3003},{"krate":0,"index":3005},{"krate":0,"index":3007},{"krate":0,"index":3009}],"decl_id":null,"docs":" Compression level of a PNG encoder. The default setting is `Fast`.\n","sig":null,"attributes":[{"value":"/ Compression level of a PNG encoder. The default setting is `Fast`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":351987,"byte_end":352057,"line_start":462,"line_end":462,"column_start":1,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3025},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":352833,"byte_end":352841,"line_start":488,"line_end":488,"column_start":5,"column_end":13},"name":"NoFilter","qualname":"::codecs::png::FilterType::NoFilter","value":"FilterType::NoFilter","parent":{"krate":0,"index":3024},"children":[],"decl_id":null,"docs":" No processing done, best used for low bit depth greyscale or data with a\n low color count\n","sig":null,"attributes":[{"value":"/ No processing done, best used for low bit depth greyscale or data with a","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":352728,"byte_end":352804,"line_start":486,"line_end":486,"column_start":5,"column_end":81}},{"value":"/ low color count","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":352809,"byte_end":352828,"line_start":487,"line_end":487,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3027},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":352908,"byte_end":352911,"line_start":490,"line_end":490,"column_start":5,"column_end":8},"name":"Sub","qualname":"::codecs::png::FilterType::Sub","value":"FilterType::Sub","parent":{"krate":0,"index":3024},"children":[],"decl_id":null,"docs":" Filters based on previous pixel in the same scanline\n","sig":null,"attributes":[{"value":"/ Filters based on previous pixel in the same scanline","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":352847,"byte_end":352903,"line_start":489,"line_end":489,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3029},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":352961,"byte_end":352963,"line_start":492,"line_end":492,"column_start":5,"column_end":7},"name":"Up","qualname":"::codecs::png::FilterType::Up","value":"FilterType::Up","parent":{"krate":0,"index":3024},"children":[],"decl_id":null,"docs":" Filters based on the scanline above\n","sig":null,"attributes":[{"value":"/ Filters based on the scanline above","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":352917,"byte_end":352956,"line_start":491,"line_end":491,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3031},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":353040,"byte_end":353043,"line_start":494,"line_end":494,"column_start":5,"column_end":8},"name":"Avg","qualname":"::codecs::png::FilterType::Avg","value":"FilterType::Avg","parent":{"krate":0,"index":3024},"children":[],"decl_id":null,"docs":" Filters based on the average of left and right neighbor pixels\n","sig":null,"attributes":[{"value":"/ Filters based on the average of left and right neighbor pixels","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":352969,"byte_end":353035,"line_start":493,"line_end":493,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3033},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":353130,"byte_end":353135,"line_start":496,"line_end":496,"column_start":5,"column_end":10},"name":"Paeth","qualname":"::codecs::png::FilterType::Paeth","value":"FilterType::Paeth","parent":{"krate":0,"index":3024},"children":[],"decl_id":null,"docs":" Algorithm that takes into account the left, upper left, and above pixels\n","sig":null,"attributes":[{"value":"/ Algorithm that takes into account the left, upper left, and above pixels","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":353049,"byte_end":353125,"line_start":495,"line_end":495,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3035},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":353161,"byte_end":353176,"line_start":499,"line_end":499,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::codecs::png::FilterType::__NonExhaustive","value":"FilterType::__NonExhaustive(crate::utils::NonExhaustiveMarker)","parent":{"krate":0,"index":3024},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3024},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":352711,"byte_end":352721,"line_start":485,"line_end":485,"column_start":10,"column_end":20},"name":"FilterType","qualname":"::codecs::png::FilterType","value":"pub enum FilterType {\n\n    /// No processing done, best used for low bit depth greyscale or data with a\n    /// low color count\n    NoFilter,\n\n    /// Filters based on previous pixel in the same scanline\n    Sub,\n\n    /// Filters based on the scanline above\n    Up,\n\n    /// Filters based on the average of left and right neighbor pixels\n    Avg,\n\n    /// Algorithm that takes into account the left, upper left, and above pixels\n    Paeth,\n\n    #[doc(hidden)]\n    __NonExhaustive(crate::utils::NonExhaustiveMarker),\n}","parent":null,"children":[{"krate":0,"index":3025},{"krate":0,"index":3027},{"krate":0,"index":3029},{"krate":0,"index":3031},{"krate":0,"index":3033},{"krate":0,"index":3035}],"decl_id":null,"docs":" Filter algorithms used to process image data to improve compression.","sig":null,"attributes":[{"value":"/ Filter algorithms used to process image data to improve compression.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":352438,"byte_end":352510,"line_start":480,"line_end":480,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":352511,"byte_end":352514,"line_start":481,"line_end":481,"column_start":1,"column_end":4}},{"value":"/ The default filter is `Sub` though this default may change in the future, most notable if an","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":352515,"byte_end":352611,"line_start":482,"line_end":482,"column_start":1,"column_end":97}},{"value":"/ adaptive encoding option is implemented.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":352612,"byte_end":352656,"line_start":483,"line_end":483,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1403},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":353321,"byte_end":353324,"line_start":504,"line_end":504,"column_start":12,"column_end":15},"name":"new","qualname":"<PngEncoder<W>>::new","value":"pub fn new(W) -> PngEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":353251,"byte_end":353309,"line_start":503,"line_end":503,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1404},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":354506,"byte_end":354522,"line_start":526,"line_end":526,"column_start":12,"column_end":28},"name":"new_with_quality","qualname":"<PngEncoder<W>>::new_with_quality","value":"pub fn new_with_quality(W, CompressionType, FilterType) -> PngEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to `w` with `CompressionType` `compression` and\n `FilterType` `filter`.","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to `w` with `CompressionType` `compression` and","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":353492,"byte_end":353587,"line_start":512,"line_end":512,"column_start":5,"column_end":100}},{"value":"/ `FilterType` `filter`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":353592,"byte_end":353618,"line_start":513,"line_end":513,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":353623,"byte_end":353626,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ It is best to view the options as a _hint_ to the implementation on the smallest or fastest","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":353631,"byte_end":353726,"line_start":515,"line_end":515,"column_start":5,"column_end":100}},{"value":"/ option for encoding a particular image. That is, using options that map directly to a PNG","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":353731,"byte_end":353824,"line_start":516,"line_end":516,"column_start":5,"column_end":98}},{"value":"/ image parameter will use this parameter where possible. But variants that have no direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":353829,"byte_end":353921,"line_start":517,"line_end":517,"column_start":5,"column_end":97}},{"value":"/ mapping may be interpreted differently in minor versions. The exact output is expressly","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":353926,"byte_end":354017,"line_start":518,"line_end":518,"column_start":5,"column_end":96}},{"value":"/ __not__ part the SemVer stability guarantee.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":354022,"byte_end":354070,"line_start":519,"line_end":519,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":354075,"byte_end":354078,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ Note that it is not optimal to use a single filter type. It is likely that the library used","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":354083,"byte_end":354178,"line_start":521,"line_end":521,"column_start":5,"column_end":100}},{"value":"/ will at some point gain the ability to use adaptive filtering methods per pixel row (or","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":354183,"byte_end":354274,"line_start":522,"line_end":522,"column_start":5,"column_end":96}},{"value":"/ even interlaced row). We might make it the new default variant in which case choosing a","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":354279,"byte_end":354370,"line_start":523,"line_end":523,"column_start":5,"column_end":96}},{"value":"/ particular filter method likely produces larger images. Be sure to check the release notes","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":354375,"byte_end":354469,"line_start":524,"line_end":524,"column_start":5,"column_end":99}},{"value":"/ once in a while.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":354474,"byte_end":354494,"line_start":525,"line_end":525,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1405},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":354802,"byte_end":354808,"line_start":535,"line_end":535,"column_start":12,"column_end":18},"name":"encode","qualname":"<PngEncoder<W>>::encode","value":"pub fn encode(Self, &[u8], u32, u32, ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image `data` that has dimensions `width` and `height` and `ColorType` `c`.\n","sig":null,"attributes":[{"value":"/ Encodes the image `data` that has dimensions `width` and `height` and `ColorType` `c`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":354700,"byte_end":354790,"line_start":534,"line_end":534,"column_start":5,"column_end":95}}]},{"kind":"Mod","id":{"krate":0,"index":1423},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":8509,"byte_end":8512,"line_start":254,"line_end":254,"column_start":9,"column_end":12},"name":"bmp","qualname":"::bmp","value":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","parent":null,"children":[{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1426},{"krate":0,"index":1427}],"decl_id":null,"docs":" Decoding and Encoding of BMP Images\n","sig":null,"attributes":[{"value":"cfg(feature = \"bmp\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":8435,"byte_end":8458,"line_start":252,"line_end":252,"column_start":1,"column_end":24}},{"value":"deprecated = \"Use codecs::bmp instead\"","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":8459,"byte_end":8500,"line_start":253,"line_end":253,"column_start":1,"column_end":42}},{"value":"/ Decoding and Encoding of BMP Images","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":8519,"byte_end":8558,"line_start":255,"line_end":255,"column_start":5,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":1428},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":9387,"byte_end":9390,"line_start":282,"line_end":282,"column_start":9,"column_end":12},"name":"gif","qualname":"::gif","value":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","parent":null,"children":[{"krate":0,"index":1429},{"krate":0,"index":1430},{"krate":0,"index":1431},{"krate":0,"index":1432},{"krate":0,"index":1433}],"decl_id":null,"docs":" Decoding of GIF Images\n","sig":null,"attributes":[{"value":"cfg(feature = \"gif\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":9313,"byte_end":9336,"line_start":280,"line_end":280,"column_start":1,"column_end":24}},{"value":"deprecated = \"Use codecs::gif instead\"","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":9337,"byte_end":9378,"line_start":281,"line_end":281,"column_start":1,"column_end":42}},{"value":"/ Decoding of GIF Images","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":9397,"byte_end":9423,"line_start":283,"line_end":283,"column_start":5,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":1434},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":10251,"byte_end":10255,"line_start":307,"line_end":307,"column_start":9,"column_end":13},"name":"jpeg","qualname":"::jpeg","value":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","parent":null,"children":[{"krate":0,"index":1435},{"krate":0,"index":1436},{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1439},{"krate":0,"index":1440}],"decl_id":null,"docs":" Decoding and Encoding of JPEG Images\n","sig":null,"attributes":[{"value":"cfg(feature = \"jpeg\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":10175,"byte_end":10199,"line_start":305,"line_end":305,"column_start":1,"column_end":25}},{"value":"deprecated = \"Use codecs::jpeg instead\"","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":10200,"byte_end":10242,"line_start":306,"line_end":306,"column_start":1,"column_end":43}},{"value":"/ Decoding and Encoding of JPEG Images","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":10262,"byte_end":10302,"line_start":308,"line_end":308,"column_start":5,"column_end":45}}]},{"kind":"Mod","id":{"krate":0,"index":1441},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":10525,"byte_end":10528,"line_start":316,"line_end":316,"column_start":9,"column_end":12},"name":"png","qualname":"::png","value":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","parent":null,"children":[{"krate":0,"index":1442},{"krate":0,"index":1443},{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":1446},{"krate":0,"index":1447},{"krate":0,"index":1448}],"decl_id":null,"docs":" Decoding and Encoding of PNG Images\n","sig":null,"attributes":[{"value":"cfg(feature = \"png\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":10451,"byte_end":10474,"line_start":314,"line_end":314,"column_start":1,"column_end":24}},{"value":"deprecated = \"Use codecs::png instead\"","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":10475,"byte_end":10516,"line_start":315,"line_end":315,"column_start":1,"column_end":42}},{"value":"/ Decoding and Encoding of PNG Images","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":10535,"byte_end":10574,"line_start":317,"line_end":317,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":1455},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":361003,"byte_end":361009,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Frames","qualname":"::animation::Frames","value":"Frames {  }","parent":null,"children":[{"krate":0,"index":1457}],"decl_id":null,"docs":" An implementation dependent iterator, reading the frames as requested\n","sig":null,"attributes":[{"value":"/ An implementation dependent iterator, reading the frames as requested","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":360918,"byte_end":360991,"line_start":9,"line_end":9,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1460},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":361189,"byte_end":361192,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"new","qualname":"<Frames>::new","value":"pub fn new(Box<Iterator<Item = ImageResult<Frame>> + 'a>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Frames` from an implementation specific iterator.\n","sig":null,"attributes":[{"value":"/ Creates a new `Frames` from an implementation specific iterator.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":361109,"byte_end":361177,"line_start":15,"line_end":15,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1461},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":361584,"byte_end":361598,"line_start":25,"line_end":25,"column_start":12,"column_end":26},"name":"collect_frames","qualname":"<Frames>::collect_frames","value":"pub fn collect_frames(Self) -> ImageResult<Vec<Frame>>","parent":null,"children":[],"decl_id":null,"docs":" Steps through the iterator from the current frame until the end and pushes each frame into\n a `Vec`.\n If en error is encountered that error is returned instead.","sig":null,"attributes":[{"value":"/ Steps through the iterator from the current frame until the end and pushes each frame into","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":361303,"byte_end":361397,"line_start":20,"line_end":20,"column_start":5,"column_end":99}},{"value":"/ a `Vec`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":361402,"byte_end":361414,"line_start":21,"line_end":21,"column_start":5,"column_end":17}},{"value":"/ If en error is encountered that error is returned instead.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":361419,"byte_end":361481,"line_start":22,"line_end":22,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":361486,"byte_end":361489,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ Note: This is equivalent to `Frames::collect::<ImageResult<Vec<Frame>>>()`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":361494,"byte_end":361572,"line_start":24,"line_end":24,"column_start":5,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":3050},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":361887,"byte_end":361892,"line_start":39,"line_end":39,"column_start":12,"column_end":17},"name":"Frame","qualname":"::animation::Frame","value":"Frame {  }","parent":null,"children":[{"krate":0,"index":3051},{"krate":0,"index":3052},{"krate":0,"index":3053},{"krate":0,"index":3054}],"decl_id":null,"docs":" A single animation frame\n","sig":null,"attributes":[{"value":"/ A single animation frame","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":361830,"byte_end":361858,"line_start":37,"line_end":37,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":3057},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":362174,"byte_end":362179,"line_start":51,"line_end":51,"column_start":12,"column_end":17},"name":"Delay","qualname":"::animation::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":3058}],"decl_id":null,"docs":" The delay of a frame relative to the previous one.\n","sig":null,"attributes":[{"value":"/ The delay of a frame relative to the previous one.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":362051,"byte_end":362105,"line_start":49,"line_end":49,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1467},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":362281,"byte_end":362284,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"new","qualname":"<Frame>::new","value":"pub fn new(RgbaImage) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Contructs a new frame without any delay.\n","sig":null,"attributes":[{"value":"/ Contructs a new frame without any delay.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":362225,"byte_end":362269,"line_start":56,"line_end":56,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1468},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":362512,"byte_end":362522,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Frame>::from_parts","value":"pub fn from_parts(RgbaImage, u32, u32, Delay) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Contructs a new frame\n","sig":null,"attributes":[{"value":"/ Contructs a new frame","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":362475,"byte_end":362500,"line_start":66,"line_end":66,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1469},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":362734,"byte_end":362739,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"delay","qualname":"<Frame>::delay","value":"pub fn delay(&Self) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Delay of this frame\n","sig":null,"attributes":[{"value":"/ Delay of this frame","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":362699,"byte_end":362722,"line_start":76,"line_end":76,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1470},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":362828,"byte_end":362834,"line_start":82,"line_end":82,"column_start":12,"column_end":18},"name":"buffer","qualname":"<Frame>::buffer","value":"pub fn buffer(&Self) -> &RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns the image buffer\n","sig":null,"attributes":[{"value":"/ Returns the image buffer","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":362788,"byte_end":362816,"line_start":81,"line_end":81,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1471},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":362930,"byte_end":362941,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"into_buffer","qualname":"<Frame>::into_buffer","value":"pub fn into_buffer(Self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns the image buffer\n","sig":null,"attributes":[{"value":"/ Returns the image buffer","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":362890,"byte_end":362918,"line_start":86,"line_end":86,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1472},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":363030,"byte_end":363034,"line_start":92,"line_end":92,"column_start":12,"column_end":16},"name":"left","qualname":"<Frame>::left","value":"pub fn left(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the x offset\n","sig":null,"attributes":[{"value":"/ Returns the x offset","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":362994,"byte_end":363018,"line_start":91,"line_end":91,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1473},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":363116,"byte_end":363119,"line_start":97,"line_end":97,"column_start":12,"column_end":15},"name":"top","qualname":"<Frame>::top","value":"pub fn top(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the y offset\n","sig":null,"attributes":[{"value":"/ Returns the y offset","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":363080,"byte_end":363104,"line_start":96,"line_end":96,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1475},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":363384,"byte_end":363403,"line_start":111,"line_end":111,"column_start":12,"column_end":31},"name":"from_numer_denom_ms","qualname":"<Delay>::from_numer_denom_ms","value":"pub fn from_numer_denom_ms(u32, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a delay from a ratio of milliseconds.","sig":null,"attributes":[{"value":"/ Create a delay from a ratio of milliseconds.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":363179,"byte_end":363227,"line_start":103,"line_end":103,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":363232,"byte_end":363235,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":363240,"byte_end":363254,"line_start":105,"line_end":105,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":363259,"byte_end":363262,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":363267,"byte_end":363274,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"/ use image::Delay;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":363279,"byte_end":363300,"line_start":108,"line_end":108,"column_start":5,"column_end":26}},{"value":"/ let delay_10ms = Delay::from_numer_denom_ms(10, 1);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":363305,"byte_end":363360,"line_start":109,"line_end":109,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":363365,"byte_end":363372,"line_start":110,"line_end":110,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1476},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":364046,"byte_end":364070,"line_start":129,"line_end":129,"column_start":12,"column_end":36},"name":"from_saturating_duration","qualname":"<Delay>::from_saturating_duration","value":"pub fn from_saturating_duration(Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert from a duration, clamped between 0 and an implemented defined maximum.","sig":null,"attributes":[{"value":"/ Convert from a duration, clamped between 0 and an implemented defined maximum.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":363523,"byte_end":363605,"line_start":115,"line_end":115,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":363610,"byte_end":363613,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ The maximum is *at least* `i32::MAX` milliseconds. It should be noted that the accuracy of","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":363618,"byte_end":363712,"line_start":117,"line_end":117,"column_start":5,"column_end":99}},{"value":"/ the result may be relative and very large delays have a coarse resolution.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":363717,"byte_end":363795,"line_start":118,"line_end":118,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":363800,"byte_end":363803,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":363808,"byte_end":363822,"line_start":120,"line_end":120,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":363827,"byte_end":363830,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":363835,"byte_end":363842,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":363847,"byte_end":363875,"line_start":123,"line_end":123,"column_start":5,"column_end":33}},{"value":"/ use image::Delay;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":363880,"byte_end":363901,"line_start":124,"line_end":124,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":363906,"byte_end":363909,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let duration = Duration::from_millis(20);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":363914,"byte_end":363959,"line_start":126,"line_end":126,"column_start":5,"column_end":50}},{"value":"/ let delay = Delay::from_saturating_duration(duration);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":363964,"byte_end":364022,"line_start":127,"line_end":127,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":364027,"byte_end":364034,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1478},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":365246,"byte_end":365260,"line_start":158,"line_end":158,"column_start":12,"column_end":26},"name":"numer_denom_ms","qualname":"<Delay>::numer_denom_ms","value":"pub fn numer_denom_ms(Self) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" The numerator and denominator of the delay in milliseconds.","sig":null,"attributes":[{"value":"/ The numerator and denominator of the delay in milliseconds.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":365020,"byte_end":365083,"line_start":154,"line_end":154,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":365088,"byte_end":365091,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ This is guaranteed to be an exact conversion if the `Delay` was previously created with the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":365096,"byte_end":365191,"line_start":156,"line_end":156,"column_start":5,"column_end":100}},{"value":"/ `from_numer_denom_ms` constructor.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":365196,"byte_end":365234,"line_start":157,"line_end":157,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":1527},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":372540,"byte_end":372546,"line_start":19,"line_end":19,"column_start":12,"column_end":18},"name":"Pixels","qualname":"::buffer_::Pixels","value":"Pixels {  }","parent":null,"children":[{"krate":0,"index":1530}],"decl_id":null,"docs":" Iterate over pixel refs.\n","sig":null,"attributes":[{"value":"/ Iterate over pixel refs.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":372500,"byte_end":372528,"line_start":18,"line_end":18,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":1552},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":373707,"byte_end":373716,"line_start":76,"line_end":76,"column_start":12,"column_end":21},"name":"PixelsMut","qualname":"::buffer_::PixelsMut","value":"PixelsMut {  }","parent":null,"children":[{"krate":0,"index":1555}],"decl_id":null,"docs":" Iterate over mutable pixel refs.\n","sig":null,"attributes":[{"value":"/ Iterate over mutable pixel refs.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":373659,"byte_end":373695,"line_start":75,"line_end":75,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1574},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":374972,"byte_end":374976,"line_start":133,"line_end":133,"column_start":12,"column_end":16},"name":"Rows","qualname":"::buffer_::Rows","value":"Rows {  }","parent":null,"children":[{"krate":0,"index":1577}],"decl_id":null,"docs":" Iterate over rows of an image","sig":null,"attributes":[{"value":"/ Iterate over rows of an image","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":374766,"byte_end":374799,"line_start":128,"line_end":128,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":374800,"byte_end":374803,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ This iterator is created with [`ImageBuffer::rows`]. See its document for details.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":374804,"byte_end":374890,"line_start":130,"line_end":130,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":374891,"byte_end":374894,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ [`ImageBuffer::rows`]: ../struct.ImageBuffer.html#method.rows","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":374895,"byte_end":374960,"line_start":132,"line_end":132,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1601},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":377526,"byte_end":377533,"line_start":223,"line_end":223,"column_start":12,"column_end":19},"name":"RowsMut","qualname":"::buffer_::RowsMut","value":"RowsMut {  }","parent":null,"children":[{"krate":0,"index":1604}],"decl_id":null,"docs":" Iterate over mutable rows of an image","sig":null,"attributes":[{"value":"/ Iterate over mutable rows of an image","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":377300,"byte_end":377341,"line_start":218,"line_end":218,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":377342,"byte_end":377345,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ This iterator is created with [`ImageBuffer::rows_mut`]. See its document for details.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":377346,"byte_end":377436,"line_start":220,"line_end":220,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":377437,"byte_end":377440,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ [`ImageBuffer::rows_mut`]: ../struct.ImageBuffer.html#method.rows_mut","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":377441,"byte_end":377514,"line_start":222,"line_end":222,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1625},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":379849,"byte_end":379864,"line_start":303,"line_end":303,"column_start":12,"column_end":27},"name":"EnumeratePixels","qualname":"::buffer_::EnumeratePixels","value":"EnumeratePixels {  }","parent":null,"children":[{"krate":0,"index":1628},{"krate":0,"index":1629},{"krate":0,"index":1630},{"krate":0,"index":1631}],"decl_id":null,"docs":" Enumerate the pixels of an image.\n","sig":null,"attributes":[{"value":"/ Enumerate the pixels of an image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":379800,"byte_end":379837,"line_start":302,"line_end":302,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1648},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":381171,"byte_end":381184,"line_start":365,"line_end":365,"column_start":12,"column_end":25},"name":"EnumerateRows","qualname":"::buffer_::EnumerateRows","value":"EnumerateRows {  }","parent":null,"children":[{"krate":0,"index":1651},{"krate":0,"index":1652},{"krate":0,"index":1653}],"decl_id":null,"docs":" Enumerate the rows of an image.\n","sig":null,"attributes":[{"value":"/ Enumerate the rows of an image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":381124,"byte_end":381159,"line_start":364,"line_end":364,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":1670},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":382559,"byte_end":382577,"line_start":431,"line_end":431,"column_start":12,"column_end":30},"name":"EnumeratePixelsMut","qualname":"::buffer_::EnumeratePixelsMut","value":"EnumeratePixelsMut {  }","parent":null,"children":[{"krate":0,"index":1673},{"krate":0,"index":1674},{"krate":0,"index":1675},{"krate":0,"index":1676}],"decl_id":null,"docs":" Enumerate the pixels of an image.\n","sig":null,"attributes":[{"value":"/ Enumerate the pixels of an image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":382510,"byte_end":382547,"line_start":430,"line_end":430,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1690},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":383721,"byte_end":383737,"line_start":484,"line_end":484,"column_start":12,"column_end":28},"name":"EnumerateRowsMut","qualname":"::buffer_::EnumerateRowsMut","value":"EnumerateRowsMut {  }","parent":null,"children":[{"krate":0,"index":1693},{"krate":0,"index":1694},{"krate":0,"index":1695}],"decl_id":null,"docs":" Enumerate the rows of an image.\n","sig":null,"attributes":[{"value":"/ Enumerate the rows of an image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":383674,"byte_end":383709,"line_start":483,"line_end":483,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3077},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":387287,"byte_end":387298,"line_start":609,"line_end":609,"column_start":12,"column_end":23},"name":"ImageBuffer","qualname":"::buffer_::ImageBuffer","value":"ImageBuffer {  }","parent":null,"children":[{"krate":0,"index":3080},{"krate":0,"index":3081},{"krate":0,"index":3082},{"krate":0,"index":3083}],"decl_id":null,"docs":" Generic image buffer","sig":null,"attributes":[{"value":"/ Generic image buffer","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":384909,"byte_end":384933,"line_start":540,"line_end":540,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":384934,"byte_end":384937,"line_start":541,"line_end":541,"column_start":1,"column_end":4}},{"value":"/ This is an image parameterised by its Pixel types, represented by a width and height and a","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":384938,"byte_end":385032,"line_start":542,"line_end":542,"column_start":1,"column_end":95}},{"value":"/ container of channel data. It provides direct access to its pixels and implements the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":385033,"byte_end":385122,"line_start":543,"line_end":543,"column_start":1,"column_end":90}},{"value":"/ [`GenericImageView`] and [`GenericImage`] traits. In many ways, this is the standard buffer","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":385123,"byte_end":385218,"line_start":544,"line_end":544,"column_start":1,"column_end":96}},{"value":"/ implementing those traits. Using this concrete type instead of a generic type parameter has","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":385219,"byte_end":385314,"line_start":545,"line_end":545,"column_start":1,"column_end":96}},{"value":"/ been shown to improve performance.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":385315,"byte_end":385353,"line_start":546,"line_end":546,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":385354,"byte_end":385357,"line_start":547,"line_end":547,"column_start":1,"column_end":4}},{"value":"/ The crate defines a few type aliases with regularly used pixel types for your convenience, such","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":385358,"byte_end":385457,"line_start":548,"line_end":548,"column_start":1,"column_end":100}},{"value":"/ as `RgbImage`, `GrayImage` etc.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":385458,"byte_end":385493,"line_start":549,"line_end":549,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":385494,"byte_end":385497,"line_start":550,"line_end":550,"column_start":1,"column_end":4}},{"value":"/ [`GenericImage`]: trait.GenericImage.html","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":385498,"byte_end":385543,"line_start":551,"line_end":551,"column_start":1,"column_end":46}},{"value":"/ [`GenericImageView`]: trait.GenericImageView.html","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":385544,"byte_end":385597,"line_start":552,"line_end":552,"column_start":1,"column_end":54}},{"value":"/ [`RgbImage`]: type.RgbImage.html","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":385598,"byte_end":385634,"line_start":553,"line_end":553,"column_start":1,"column_end":37}},{"value":"/ [`GrayImage`]: type.GrayImage.html","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":385635,"byte_end":385673,"line_start":554,"line_end":554,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":385674,"byte_end":385677,"line_start":555,"line_end":555,"column_start":1,"column_end":4}},{"value":"/ To convert between images of different Pixel types use [`DynamicImage`].","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":385678,"byte_end":385754,"line_start":556,"line_end":556,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":385755,"byte_end":385758,"line_start":557,"line_end":557,"column_start":1,"column_end":4}},{"value":"/ You can retrieve a complete description of the buffer's layout and contents through","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":385759,"byte_end":385846,"line_start":558,"line_end":558,"column_start":1,"column_end":88}},{"value":"/ [`as_flat_samples`] and [`as_flat_samples_mut`]. This can be handy to also use the contents in","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":385847,"byte_end":385945,"line_start":559,"line_end":559,"column_start":1,"column_end":99}},{"value":"/ a foreign language, map it as a GPU host buffer or other similar tasks.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":385946,"byte_end":386021,"line_start":560,"line_end":560,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":386022,"byte_end":386025,"line_start":561,"line_end":561,"column_start":1,"column_end":4}},{"value":"/ [`DynamicImage`]: enum.DynamicImage.html","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":386026,"byte_end":386070,"line_start":562,"line_end":562,"column_start":1,"column_end":45}},{"value":"/ [`as_flat_samples`]: #method.as_flat_samples","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":386071,"byte_end":386119,"line_start":563,"line_end":563,"column_start":1,"column_end":49}},{"value":"/ [`as_flat_samples_mut`]: #method.as_flat_samples_mut","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":386120,"byte_end":386176,"line_start":564,"line_end":564,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":386177,"byte_end":386180,"line_start":565,"line_end":565,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":386181,"byte_end":386196,"line_start":566,"line_end":566,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":386197,"byte_end":386200,"line_start":567,"line_end":567,"column_start":1,"column_end":4}},{"value":"/ Create a simple canvas and paint a small cross.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":386201,"byte_end":386252,"line_start":568,"line_end":568,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":386253,"byte_end":386256,"line_start":569,"line_end":569,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":386257,"byte_end":386264,"line_start":570,"line_end":570,"column_start":1,"column_end":8}},{"value":"/ use image::{RgbImage, Rgb};","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":386265,"byte_end":386296,"line_start":571,"line_end":571,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":386297,"byte_end":386300,"line_start":572,"line_end":572,"column_start":1,"column_end":4}},{"value":"/ let mut img = RgbImage::new(32, 32);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":386301,"byte_end":386341,"line_start":573,"line_end":573,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":386342,"byte_end":386345,"line_start":574,"line_end":574,"column_start":1,"column_end":4}},{"value":"/ for x in 15..=17 {","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":386346,"byte_end":386368,"line_start":575,"line_end":575,"column_start":1,"column_end":23}},{"value":"/     for y in 8..24 {","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":386369,"byte_end":386393,"line_start":576,"line_end":576,"column_start":1,"column_end":25}},{"value":"/         img.put_pixel(x, y, Rgb([255, 0, 0]));","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":386394,"byte_end":386444,"line_start":577,"line_end":577,"column_start":1,"column_end":51}},{"value":"/         img.put_pixel(y, x, Rgb([255, 0, 0]));","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":386445,"byte_end":386495,"line_start":578,"line_end":578,"column_start":1,"column_end":51}},{"value":"/     }","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":386496,"byte_end":386505,"line_start":579,"line_end":579,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":386506,"byte_end":386511,"line_start":580,"line_end":580,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":386512,"byte_end":386519,"line_start":581,"line_end":581,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":386520,"byte_end":386523,"line_start":582,"line_end":582,"column_start":1,"column_end":4}},{"value":"/ Overlays an image on top of a larger background raster.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":386524,"byte_end":386583,"line_start":583,"line_end":583,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":386584,"byte_end":386587,"line_start":584,"line_end":584,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":386588,"byte_end":386601,"line_start":585,"line_end":585,"column_start":1,"column_end":14}},{"value":"/ use image::{GenericImage, GenericImageView, ImageBuffer, open};","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":386602,"byte_end":386669,"line_start":586,"line_end":586,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":386670,"byte_end":386673,"line_start":587,"line_end":587,"column_start":1,"column_end":4}},{"value":"/ let on_top = open(\"path/to/some.png\").unwrap().into_rgb();","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":386674,"byte_end":386736,"line_start":588,"line_end":588,"column_start":1,"column_end":63}},{"value":"/ let mut img = ImageBuffer::from_fn(512, 512, |x, y| {","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":386737,"byte_end":386794,"line_start":589,"line_end":589,"column_start":1,"column_end":58}},{"value":"/     if (x + y) % 2 == 0 {","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":386795,"byte_end":386824,"line_start":590,"line_end":590,"column_start":1,"column_end":30}},{"value":"/         image::Rgb([0, 0, 0])","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":386825,"byte_end":386858,"line_start":591,"line_end":591,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":386859,"byte_end":386875,"line_start":592,"line_end":592,"column_start":1,"column_end":17}},{"value":"/         image::Rgb([255, 255, 255])","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":386876,"byte_end":386915,"line_start":593,"line_end":593,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":386916,"byte_end":386925,"line_start":594,"line_end":594,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":386926,"byte_end":386933,"line_start":595,"line_end":595,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":386934,"byte_end":386937,"line_start":596,"line_end":596,"column_start":1,"column_end":4}},{"value":"/ image::imageops::overlay(&mut img, &on_top, 128, 128);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":386938,"byte_end":386996,"line_start":597,"line_end":597,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":386997,"byte_end":387004,"line_start":598,"line_end":598,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":387005,"byte_end":387008,"line_start":599,"line_end":599,"column_start":1,"column_end":4}},{"value":"/ Convert an RgbaImage to a GrayImage.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":387009,"byte_end":387049,"line_start":600,"line_end":600,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":387050,"byte_end":387053,"line_start":601,"line_end":601,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":387054,"byte_end":387067,"line_start":602,"line_end":602,"column_start":1,"column_end":14}},{"value":"/ use image::{open, DynamicImage};","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":387068,"byte_end":387104,"line_start":603,"line_end":603,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":387105,"byte_end":387108,"line_start":604,"line_end":604,"column_start":1,"column_end":4}},{"value":"/ let rgba = open(\"path/to/some.png\").unwrap().into_rgba();","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":387109,"byte_end":387170,"line_start":605,"line_end":605,"column_start":1,"column_end":62}},{"value":"/ let gray = DynamicImage::ImageRgba8(rgba).into_luma();","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":387171,"byte_end":387229,"line_start":606,"line_end":606,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":387230,"byte_end":387237,"line_start":607,"line_end":607,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1712},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":388056,"byte_end":388064,"line_start":631,"line_end":631,"column_start":12,"column_end":20},"name":"from_raw","qualname":"<ImageBuffer<P, Container>>::from_raw","value":"pub fn from_raw(u32, u32, Container) -> Option<ImageBuffer<P, Container>>","parent":null,"children":[],"decl_id":null,"docs":" Contructs a buffer from a generic container\n (for example a `Vec` or a slice)","sig":null,"attributes":[{"value":"/ Contructs a buffer from a generic container","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":387771,"byte_end":387818,"line_start":626,"line_end":626,"column_start":5,"column_end":52}},{"value":"/ (for example a `Vec` or a slice)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":387823,"byte_end":387859,"line_start":627,"line_end":627,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":387864,"byte_end":387867,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the container is not big enough (including when the image dimensions","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":387872,"byte_end":387962,"line_start":629,"line_end":629,"column_start":5,"column_end":95}},{"value":"/ necessitate an allocation of more bytes than supported by the container).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":387967,"byte_end":388044,"line_start":630,"line_end":630,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1713},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":388470,"byte_end":388478,"line_start":645,"line_end":645,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<ImageBuffer<P, Container>>::into_raw","value":"pub fn into_raw(Self) -> Container","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying raw buffer\n","sig":null,"attributes":[{"value":"/ Returns the underlying raw buffer","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":388421,"byte_end":388458,"line_start":644,"line_end":644,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1714},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":388578,"byte_end":388584,"line_start":650,"line_end":650,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<ImageBuffer<P, Container>>::as_raw","value":"pub fn as_raw(&Self) -> &Container","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying raw buffer\n","sig":null,"attributes":[{"value":"/ Returns the underlying raw buffer","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":388529,"byte_end":388566,"line_start":649,"line_end":649,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1715},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":388689,"byte_end":388699,"line_start":655,"line_end":655,"column_start":12,"column_end":22},"name":"dimensions","qualname":"<ImageBuffer<P, Container>>::dimensions","value":"pub fn dimensions(&Self) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" The width and height of this image.\n","sig":null,"attributes":[{"value":"/ The width and height of this image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":388638,"byte_end":388677,"line_start":654,"line_end":654,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1716},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":388808,"byte_end":388813,"line_start":660,"line_end":660,"column_start":12,"column_end":17},"name":"width","qualname":"<ImageBuffer<P, Container>>::width","value":"pub fn width(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The width of this image.\n","sig":null,"attributes":[{"value":"/ The width of this image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":388768,"byte_end":388796,"line_start":659,"line_end":659,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1717},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":388901,"byte_end":388907,"line_start":665,"line_end":665,"column_start":12,"column_end":18},"name":"height","qualname":"<ImageBuffer<P, Container>>::height","value":"pub fn height(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The height of this image.\n","sig":null,"attributes":[{"value":"/ The height of this image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":388860,"byte_end":388889,"line_start":664,"line_end":664,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1719},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":389292,"byte_end":389298,"line_start":677,"line_end":677,"column_start":12,"column_end":18},"name":"pixels","qualname":"<ImageBuffer<P, Container>>::pixels","value":"pub fn pixels(&Self) -> Pixels<, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the pixels of this image.\n The iteration order is x = 0 to width then y = 0 to height\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the pixels of this image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":389159,"byte_end":389213,"line_start":675,"line_end":675,"column_start":5,"column_end":59}},{"value":"/ The iteration order is x = 0 to width then y = 0 to height","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":389218,"byte_end":389280,"line_start":676,"line_end":676,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1720},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":389798,"byte_end":389802,"line_start":688,"line_end":688,"column_start":12,"column_end":16},"name":"rows","qualname":"<ImageBuffer<P, Container>>::rows","value":"pub fn rows(&Self) -> Rows<, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the rows of this image.","sig":null,"attributes":[{"value":"/ Returns an iterator over the rows of this image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":389451,"byte_end":389503,"line_start":683,"line_end":683,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":389508,"byte_end":389511,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ Only non-empty rows can be iterated in this manner. In particular the iterator will not","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":389516,"byte_end":389607,"line_start":685,"line_end":685,"column_start":5,"column_end":96}},{"value":"/ yield any item when the width of the image is `0` or a pixel type without any channels is","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":389612,"byte_end":389705,"line_start":686,"line_end":686,"column_start":5,"column_end":98}},{"value":"/ used. This ensures that its length can always be represented by `usize`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":389710,"byte_end":389786,"line_start":687,"line_end":687,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1721},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":390117,"byte_end":390133,"line_start":696,"line_end":696,"column_start":12,"column_end":28},"name":"enumerate_pixels","qualname":"<ImageBuffer<P, Container>>::enumerate_pixels","value":"pub fn enumerate_pixels(&Self) -> EnumeratePixels<, P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the pixels of the image.\n The iterator yields the coordinates of each pixel\n along with a reference to them.\n The iteration order is x = 0 to width then y = 0 to height\n","sig":null,"attributes":[{"value":"/ Enumerates over the pixels of the image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":389896,"byte_end":389940,"line_start":692,"line_end":692,"column_start":5,"column_end":49}},{"value":"/ The iterator yields the coordinates of each pixel","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":389945,"byte_end":389998,"line_start":693,"line_end":693,"column_start":5,"column_end":58}},{"value":"/ along with a reference to them.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":390003,"byte_end":390038,"line_start":694,"line_end":694,"column_start":5,"column_end":40}},{"value":"/ The iteration order is x = 0 to width then y = 0 to height","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":390043,"byte_end":390105,"line_start":695,"line_end":695,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1722},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":390465,"byte_end":390479,"line_start":708,"line_end":708,"column_start":12,"column_end":26},"name":"enumerate_rows","qualname":"<ImageBuffer<P, Container>>::enumerate_rows","value":"pub fn enumerate_rows(&Self) -> EnumerateRows<, P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the rows of the image.\n The iterator yields the y-coordinate of each row\n along with a reference to them.\n","sig":null,"attributes":[{"value":"/ Enumerates over the rows of the image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":390314,"byte_end":390356,"line_start":705,"line_end":705,"column_start":5,"column_end":47}},{"value":"/ The iterator yields the y-coordinate of each row","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":390361,"byte_end":390413,"line_start":706,"line_end":706,"column_start":5,"column_end":57}},{"value":"/ along with a reference to them.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":390418,"byte_end":390453,"line_start":707,"line_end":707,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1723},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":390800,"byte_end":390809,"line_start":721,"line_end":721,"column_start":12,"column_end":21},"name":"get_pixel","qualname":"<ImageBuffer<P, Container>>::get_pixel","value":"pub fn get_pixel(&Self, u32, u32) -> &P","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the pixel at location `(x, y)`","sig":null,"attributes":[{"value":"/ Gets a reference to the pixel at location `(x, y)`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":390634,"byte_end":390688,"line_start":716,"line_end":716,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":390693,"byte_end":390696,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":390701,"byte_end":390713,"line_start":718,"line_end":718,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":390718,"byte_end":390721,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of the bounds `(width, height)`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":390726,"byte_end":390788,"line_start":720,"line_end":720,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1731},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":392535,"byte_end":392548,"line_start":762,"line_end":762,"column_start":12,"column_end":25},"name":"sample_layout","qualname":"<ImageBuffer<P, Container>>::sample_layout","value":"pub fn sample_layout(&Self) -> SampleLayout","parent":null,"children":[],"decl_id":null,"docs":" Get the format of the buffer when viewed as a matrix of samples.\n","sig":null,"attributes":[{"value":"/ Get the format of the buffer when viewed as a matrix of samples.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":392455,"byte_end":392523,"line_start":761,"line_end":761,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1732},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":393162,"byte_end":393179,"line_start":773,"line_end":773,"column_start":12,"column_end":29},"name":"into_flat_samples","qualname":"<ImageBuffer<P, Container>>::into_flat_samples","value":"pub fn into_flat_samples(Self) -> FlatSamples<Container> where\nContainer: AsRef<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Return the raw sample buffer with its stride an dimension information.","sig":null,"attributes":[{"value":"/ Return the raw sample buffer with its stride an dimension information.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":392751,"byte_end":392825,"line_start":767,"line_end":767,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":392830,"byte_end":392833,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ The returned buffer is guaranteed to be well formed in all cases. It is layed out by","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":392838,"byte_end":392926,"line_start":769,"line_end":769,"column_start":5,"column_end":93}},{"value":"/ colors, width then height, meaning `channel_stride <= width_stride <= height_stride`. All","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":392931,"byte_end":393024,"line_start":770,"line_end":770,"column_start":5,"column_end":98}},{"value":"/ strides are in numbers of elements but those are mostly `u8` in which case the strides are","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":393029,"byte_end":393123,"line_start":771,"line_end":771,"column_start":5,"column_end":99}},{"value":"/ also byte strides.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":393128,"byte_end":393150,"line_start":772,"line_end":772,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1733},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":393662,"byte_end":393677,"line_start":788,"line_end":788,"column_start":12,"column_end":27},"name":"as_flat_samples","qualname":"<ImageBuffer<P, Container>>::as_flat_samples","value":"pub fn as_flat_samples(&Self) -> FlatSamples<&[P::Subpixel]> where\nContainer: AsRef<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Return a view on the raw sample buffer.","sig":null,"attributes":[{"value":"/ Return a view on the raw sample buffer.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":393520,"byte_end":393563,"line_start":785,"line_end":785,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":393568,"byte_end":393571,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ See [`into_flat_samples`](#method.into_flat_samples) for more details.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":393576,"byte_end":393650,"line_start":787,"line_end":787,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1734},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":394110,"byte_end":394129,"line_start":802,"line_end":802,"column_start":12,"column_end":31},"name":"as_flat_samples_mut","qualname":"<ImageBuffer<P, Container>>::as_flat_samples_mut","value":"pub fn as_flat_samples_mut(&mut Self) -> FlatSamples<&mut [P::Subpixel]> where\nContainer: AsMut<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable view on the raw sample buffer.","sig":null,"attributes":[{"value":"/ Return a mutable view on the raw sample buffer.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":393960,"byte_end":394011,"line_start":799,"line_end":799,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":394016,"byte_end":394019,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ See [`into_flat_samples`](#method.into_flat_samples) for more details.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":394024,"byte_end":394098,"line_start":801,"line_end":801,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1739},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":394876,"byte_end":394886,"line_start":827,"line_end":827,"column_start":12,"column_end":22},"name":"pixels_mut","qualname":"<ImageBuffer<P, Container>>::pixels_mut","value":"pub fn pixels_mut(&mut Self) -> PixelsMut<, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the mutable pixels of this image.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the mutable pixels of this image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":394802,"byte_end":394864,"line_start":826,"line_end":826,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1740},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":395412,"byte_end":395420,"line_start":838,"line_end":838,"column_start":12,"column_end":20},"name":"rows_mut","qualname":"<ImageBuffer<P, Container>>::rows_mut","value":"pub fn rows_mut(&mut Self) -> RowsMut<, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the mutable rows of this image.","sig":null,"attributes":[{"value":"/ Returns an iterator over the mutable rows of this image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":395057,"byte_end":395117,"line_start":833,"line_end":833,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":395122,"byte_end":395125,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ Only non-empty rows can be iterated in this manner. In particular the iterator will not","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":395130,"byte_end":395221,"line_start":835,"line_end":835,"column_start":5,"column_end":96}},{"value":"/ yield any item when the width of the image is `0` or a pixel type without any channels is","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":395226,"byte_end":395319,"line_start":836,"line_end":836,"column_start":5,"column_end":98}},{"value":"/ used. This ensures that its length can always be represented by `usize`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":395324,"byte_end":395400,"line_start":837,"line_end":837,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1741},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":395690,"byte_end":395710,"line_start":845,"line_end":845,"column_start":12,"column_end":32},"name":"enumerate_pixels_mut","qualname":"<ImageBuffer<P, Container>>::enumerate_pixels_mut","value":"pub fn enumerate_pixels_mut(&mut Self) -> EnumeratePixelsMut<, P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the pixels of the image.\n The iterator yields the coordinates of each pixel\n along with a mutable reference to them.\n","sig":null,"attributes":[{"value":"/ Enumerates over the pixels of the image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":395528,"byte_end":395572,"line_start":842,"line_end":842,"column_start":5,"column_end":49}},{"value":"/ The iterator yields the coordinates of each pixel","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":395577,"byte_end":395630,"line_start":843,"line_end":843,"column_start":5,"column_end":58}},{"value":"/ along with a mutable reference to them.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":395635,"byte_end":395678,"line_start":844,"line_end":844,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1742},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":396084,"byte_end":396102,"line_start":858,"line_end":858,"column_start":12,"column_end":30},"name":"enumerate_rows_mut","qualname":"<ImageBuffer<P, Container>>::enumerate_rows_mut","value":"pub fn enumerate_rows_mut(&mut Self) -> EnumerateRowsMut<, P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the rows of the image.\n The iterator yields the y-coordinate of each row\n along with a mutable reference to them.\n","sig":null,"attributes":[{"value":"/ Enumerates over the rows of the image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":395925,"byte_end":395967,"line_start":855,"line_end":855,"column_start":5,"column_end":47}},{"value":"/ The iterator yields the y-coordinate of each row","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":395972,"byte_end":396024,"line_start":856,"line_end":856,"column_start":5,"column_end":57}},{"value":"/ along with a mutable reference to them.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":396029,"byte_end":396072,"line_start":857,"line_end":857,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1743},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":396465,"byte_end":396478,"line_start":872,"line_end":872,"column_start":12,"column_end":25},"name":"get_pixel_mut","qualname":"<ImageBuffer<P, Container>>::get_pixel_mut","value":"pub fn get_pixel_mut(&mut Self, u32, u32) -> &mut P","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the mutable pixel at location `(x, y)`","sig":null,"attributes":[{"value":"/ Gets a reference to the mutable pixel at location `(x, y)`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":396291,"byte_end":396353,"line_start":867,"line_end":867,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":396358,"byte_end":396361,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":396366,"byte_end":396378,"line_start":869,"line_end":869,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":396383,"byte_end":396386,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of the bounds `(width, height)`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":396391,"byte_end":396453,"line_start":871,"line_end":871,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1744},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":396927,"byte_end":396936,"line_start":884,"line_end":884,"column_start":12,"column_end":21},"name":"put_pixel","qualname":"<ImageBuffer<P, Container>>::put_pixel","value":"pub fn put_pixel(&mut Self, u32, u32, P)","parent":null,"children":[],"decl_id":null,"docs":" Puts a pixel at location `(x, y)`","sig":null,"attributes":[{"value":"/ Puts a pixel at location `(x, y)`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":396778,"byte_end":396815,"line_start":879,"line_end":879,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":396820,"byte_end":396823,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":396828,"byte_end":396840,"line_start":881,"line_end":881,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":396845,"byte_end":396848,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of the bounds `(width, height)`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":396853,"byte_end":396915,"line_start":883,"line_end":883,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1748},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":397381,"byte_end":397385,"line_start":899,"line_end":899,"column_start":12,"column_end":16},"name":"save","qualname":"<ImageBuffer<P, Container>>::save","value":"pub fn save<Q>(&Self, Q) -> ImageResult<()> where Q: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the path specified.","sig":null,"attributes":[{"value":"/ Saves the buffer to a file at the path specified.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":397190,"byte_end":397243,"line_start":895,"line_end":895,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":397248,"byte_end":397251,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ The image format is derived from the file extension.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":397256,"byte_end":397312,"line_start":897,"line_end":897,"column_start":5,"column_end":61}},{"value":"/ Currently only jpeg and png files are supported.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":397317,"byte_end":397369,"line_start":898,"line_end":898,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1753},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":398060,"byte_end":398076,"line_start":925,"line_end":925,"column_start":12,"column_end":28},"name":"save_with_format","qualname":"<ImageBuffer<P, Container>>::save_with_format","value":"pub fn save_with_format<Q>(&Self, Q, ImageFormat) -> ImageResult<()> where\nQ: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the specified path in\n the specified format.","sig":null,"attributes":[{"value":"/ Saves the buffer to a file at the specified path in","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":397853,"byte_end":397908,"line_start":920,"line_end":920,"column_start":5,"column_end":60}},{"value":"/ the specified format.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":397913,"byte_end":397938,"line_start":921,"line_end":921,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":397943,"byte_end":397946,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ See [`save_buffer_with_format`](fn.save_buffer_with_format.html) for","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":397951,"byte_end":398023,"line_start":923,"line_end":923,"column_start":5,"column_end":77}},{"value":"/ supported types.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":398028,"byte_end":398048,"line_start":924,"line_end":924,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1801},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":404631,"byte_end":404634,"line_start":1138,"line_end":1138,"column_start":12,"column_end":15},"name":"new","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::new","value":"pub fn new(u32, u32) -> ImageBuffer<P, Vec<P::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new image buffer based on a `Vec<P::Subpixel>`.","sig":null,"attributes":[{"value":"/ Creates a new image buffer based on a `Vec<P::Subpixel>`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":404441,"byte_end":404502,"line_start":1133,"line_end":1133,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":404507,"byte_end":404510,"line_start":1134,"line_end":1134,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":404515,"byte_end":404527,"line_start":1135,"line_end":1135,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":404532,"byte_end":404535,"line_start":1136,"line_end":1136,"column_start":5,"column_end":8}},{"value":"/ Panics when the resulting image is larger the the maximum size of a vector.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":404540,"byte_end":404619,"line_start":1137,"line_end":1137,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1802},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":405172,"byte_end":405182,"line_start":1154,"line_end":1154,"column_start":12,"column_end":22},"name":"from_pixel","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_pixel","value":"pub fn from_pixel(u32, u32, P) -> ImageBuffer<P, Vec<P::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new ImageBuffer by copying a pixel","sig":null,"attributes":[{"value":"/ Constructs a new ImageBuffer by copying a pixel","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":404992,"byte_end":405043,"line_start":1149,"line_end":1149,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":405048,"byte_end":405051,"line_start":1150,"line_end":1150,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":405056,"byte_end":405068,"line_start":1151,"line_end":1151,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":405073,"byte_end":405076,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/ Panics when the resulting image is larger the the maximum size of a vector.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":405081,"byte_end":405160,"line_start":1153,"line_end":1153,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1803},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":405697,"byte_end":405704,"line_start":1169,"line_end":1169,"column_start":12,"column_end":19},"name":"from_fn","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_fn","value":"pub fn from_fn<F>(u32, u32, F) -> ImageBuffer<P, Vec<P::Subpixel>> where\nF: FnMut(u32, u32) -> P","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new ImageBuffer by repeated application of the supplied function.","sig":null,"attributes":[{"value":"/ Constructs a new ImageBuffer by repeated application of the supplied function.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":405403,"byte_end":405485,"line_start":1162,"line_end":1162,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":405490,"byte_end":405493,"line_start":1163,"line_end":1163,"column_start":5,"column_end":8}},{"value":"/ The arguments to the function are the pixel's x and y coordinates.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":405498,"byte_end":405568,"line_start":1164,"line_end":1164,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":405573,"byte_end":405576,"line_start":1165,"line_end":1165,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":405581,"byte_end":405593,"line_start":1166,"line_end":1166,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":405598,"byte_end":405601,"line_start":1167,"line_end":1167,"column_start":5,"column_end":8}},{"value":"/ Panics when the resulting image is larger the the maximum size of a vector.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":405606,"byte_end":405685,"line_start":1168,"line_end":1168,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1805},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":406115,"byte_end":406123,"line_start":1182,"line_end":1182,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_vec","value":"pub fn from_vec(u32, u32, Vec<P::Subpixel>)\n-> Option<ImageBuffer<P, Vec<P::Subpixel>>>","parent":null,"children":[],"decl_id":null,"docs":" Creates an image buffer out of an existing buffer.\n Returns None if the buffer is not big enough.\n","sig":null,"attributes":[{"value":"/ Creates an image buffer out of an existing buffer.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":405995,"byte_end":406049,"line_start":1180,"line_end":1180,"column_start":5,"column_end":59}},{"value":"/ Returns None if the buffer is not big enough.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":406054,"byte_end":406103,"line_start":1181,"line_end":1181,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1806},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":406410,"byte_end":406418,"line_start":1192,"line_end":1192,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::into_vec","value":"pub fn into_vec(Self) -> Vec<P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the image buffer and returns the underlying data\n as an owned buffer\n","sig":null,"attributes":[{"value":"/ Consumes the image buffer and returns the underlying data","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":406310,"byte_end":406371,"line_start":1190,"line_end":1190,"column_start":5,"column_end":66}},{"value":"/ as an owned buffer","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":406376,"byte_end":406398,"line_start":1191,"line_end":1191,"column_start":5,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":1807},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":406546,"byte_end":406559,"line_start":1198,"line_end":1198,"column_start":11,"column_end":24},"name":"ConvertBuffer","qualname":"::buffer_::ConvertBuffer","value":"ConvertBuffer<T>","parent":null,"children":[{"krate":0,"index":1809}],"decl_id":null,"docs":" Provides color conversions for whole image buffers.\n","sig":null,"attributes":[{"value":"/ Provides color conversions for whole image buffers.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":406480,"byte_end":406535,"line_start":1197,"line_end":1197,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1809},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":406746,"byte_end":406753,"line_start":1203,"line_end":1203,"column_start":8,"column_end":15},"name":"convert","qualname":"::buffer_::ConvertBuffer::convert","value":"pub fn convert(&Self) -> T","parent":{"krate":0,"index":1807},"children":[],"decl_id":null,"docs":" Converts `self` to a buffer of type T","sig":null,"attributes":[{"value":"/ Converts `self` to a buffer of type T","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":406569,"byte_end":406610,"line_start":1199,"line_end":1199,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":406615,"byte_end":406618,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/ A generic implementation is provided to convert any image buffer to a image buffer","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":406623,"byte_end":406709,"line_start":1201,"line_end":1201,"column_start":5,"column_end":91}},{"value":"/ based on a `Vec<T>`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":406714,"byte_end":406738,"line_start":1202,"line_end":1202,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1811},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":407021,"byte_end":407035,"line_start":1211,"line_end":1211,"column_start":12,"column_end":26},"name":"expand_palette","qualname":"<GrayImage>::expand_palette","value":"pub fn expand_palette(Self, &[(u8, u8, u8)], Option<u8>) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Expands a color palette by re-using the existing buffer.\n Assumes 8 bit per pixel. Uses an optionally transparent index to\n adjust it's alpha value accordingly.\n","sig":null,"attributes":[{"value":"/ Expands a color palette by re-using the existing buffer.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":406831,"byte_end":406891,"line_start":1208,"line_end":1208,"column_start":5,"column_end":65}},{"value":"/ Assumes 8 bit per pixel. Uses an optionally transparent index to","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":406896,"byte_end":406964,"line_start":1209,"line_end":1209,"column_start":5,"column_end":73}},{"value":"/ adjust it's alpha value accordingly.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":406969,"byte_end":407009,"line_start":1210,"line_end":1210,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1820},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":409170,"byte_end":409178,"line_start":1276,"line_end":1276,"column_start":10,"column_end":18},"name":"RgbImage","qualname":"::buffer_::RgbImage","value":"ImageBuffer<Rgb<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable Rgb image buffer\n","sig":null,"attributes":[{"value":"/ Sendable Rgb image buffer","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":409131,"byte_end":409160,"line_start":1275,"line_end":1275,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":1821},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":409267,"byte_end":409276,"line_start":1278,"line_end":1278,"column_start":10,"column_end":19},"name":"RgbaImage","qualname":"::buffer_::RgbaImage","value":"ImageBuffer<Rgba<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable Rgb + alpha channel image buffer\n","sig":null,"attributes":[{"value":"/ Sendable Rgb + alpha channel image buffer","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":409212,"byte_end":409257,"line_start":1277,"line_end":1277,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":1822},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":409356,"byte_end":409365,"line_start":1280,"line_end":1280,"column_start":10,"column_end":19},"name":"GrayImage","qualname":"::buffer_::GrayImage","value":"ImageBuffer<Luma<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable grayscale image buffer\n","sig":null,"attributes":[{"value":"/ Sendable grayscale image buffer","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":409311,"byte_end":409346,"line_start":1279,"line_end":1279,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":1823},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":409461,"byte_end":409475,"line_start":1282,"line_end":1282,"column_start":10,"column_end":24},"name":"GrayAlphaImage","qualname":"::buffer_::GrayAlphaImage","value":"ImageBuffer<LumaA<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable grayscale + alpha channel image buffer\n","sig":null,"attributes":[{"value":"/ Sendable grayscale + alpha channel image buffer","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":409400,"byte_end":409451,"line_start":1281,"line_end":1281,"column_start":1,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3109},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":418088,"byte_end":418090,"line_start":11,"line_end":11,"column_start":5,"column_end":7},"name":"L8","qualname":"::color::ColorType::L8","value":"ColorType::L8","parent":{"krate":0,"index":3108},"children":[],"decl_id":null,"docs":" Pixel is 8-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit luminance","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":418055,"byte_end":418083,"line_start":10,"line_end":10,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3111},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":418151,"byte_end":418154,"line_start":13,"line_end":13,"column_start":5,"column_end":8},"name":"La8","qualname":"::color::ColorType::La8","value":"ColorType::La8","parent":{"krate":0,"index":3108},"children":[],"decl_id":null,"docs":" Pixel is 8-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit luminance with an alpha channel","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":418096,"byte_end":418146,"line_start":12,"line_end":12,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3113},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":418209,"byte_end":418213,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Rgb8","qualname":"::color::ColorType::Rgb8","value":"ColorType::Rgb8","parent":{"krate":0,"index":3108},"children":[],"decl_id":null,"docs":" Pixel contains 8-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 8-bit R, G and B channels","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":418160,"byte_end":418204,"line_start":14,"line_end":14,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3115},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":418268,"byte_end":418273,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"Rgba8","qualname":"::color::ColorType::Rgba8","value":"ColorType::Rgba8","parent":{"krate":0,"index":3108},"children":[],"decl_id":null,"docs":" Pixel is 8-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit RGB with an alpha channel","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":418219,"byte_end":418263,"line_start":16,"line_end":16,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3117},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":418314,"byte_end":418317,"line_start":20,"line_end":20,"column_start":5,"column_end":8},"name":"L16","qualname":"::color::ColorType::L16","value":"ColorType::L16","parent":{"krate":0,"index":3108},"children":[],"decl_id":null,"docs":" Pixel is 16-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit luminance","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":418280,"byte_end":418309,"line_start":19,"line_end":19,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3119},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":418379,"byte_end":418383,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"La16","qualname":"::color::ColorType::La16","value":"ColorType::La16","parent":{"krate":0,"index":3108},"children":[],"decl_id":null,"docs":" Pixel is 16-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit luminance with an alpha channel","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":418323,"byte_end":418374,"line_start":21,"line_end":21,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3121},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":418417,"byte_end":418422,"line_start":24,"line_end":24,"column_start":5,"column_end":10},"name":"Rgb16","qualname":"::color::ColorType::Rgb16","value":"ColorType::Rgb16","parent":{"krate":0,"index":3108},"children":[],"decl_id":null,"docs":" Pixel is 16-bit RGB\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit RGB","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":418389,"byte_end":418412,"line_start":23,"line_end":23,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3123},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":418457,"byte_end":418463,"line_start":26,"line_end":26,"column_start":5,"column_end":11},"name":"Rgba16","qualname":"::color::ColorType::Rgba16","value":"ColorType::Rgba16","parent":{"krate":0,"index":3108},"children":[],"decl_id":null,"docs":" Pixel is 16-bit RGBA\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit RGBA","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":418428,"byte_end":418452,"line_start":25,"line_end":25,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3125},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":418519,"byte_end":418523,"line_start":29,"line_end":29,"column_start":5,"column_end":9},"name":"Bgr8","qualname":"::color::ColorType::Bgr8","value":"ColorType::Bgr8","parent":{"krate":0,"index":3108},"children":[],"decl_id":null,"docs":" Pixel contains 8-bit B, G and R channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 8-bit B, G and R channels","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":418470,"byte_end":418514,"line_start":28,"line_end":28,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3127},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":418578,"byte_end":418583,"line_start":31,"line_end":31,"column_start":5,"column_end":10},"name":"Bgra8","qualname":"::color::ColorType::Bgra8","value":"ColorType::Bgra8","parent":{"krate":0,"index":3108},"children":[],"decl_id":null,"docs":" Pixel is 8-bit BGR with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit BGR with an alpha channel","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":418529,"byte_end":418573,"line_start":30,"line_end":30,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3129},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":418609,"byte_end":418624,"line_start":34,"line_end":34,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::color::ColorType::__NonExhaustive","value":"ColorType::__NonExhaustive(crate::utils::NonExhaustiveMarker)","parent":{"krate":0,"index":3108},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3108},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":418039,"byte_end":418048,"line_start":9,"line_end":9,"column_start":10,"column_end":19},"name":"ColorType","qualname":"::color::ColorType","value":"pub enum ColorType {\n\n    /// Pixel is 8-bit luminance\n    L8,\n\n    /// Pixel is 8-bit luminance with an alpha channel\n    La8,\n\n    /// Pixel contains 8-bit R, G and B channels\n    Rgb8,\n\n    /// Pixel is 8-bit RGB with an alpha channel\n    Rgba8,\n\n    /// Pixel is 16-bit luminance\n    L16,\n\n    /// Pixel is 16-bit luminance with an alpha channel\n    La16,\n\n    /// Pixel is 16-bit RGB\n    Rgb16,\n\n    /// Pixel is 16-bit RGBA\n    Rgba16,\n\n    /// Pixel contains 8-bit B, G and R channels\n    Bgr8,\n\n    /// Pixel is 8-bit BGR with an alpha channel\n    Bgra8,\n\n    #[doc(hidden)]\n    __NonExhaustive(crate::utils::NonExhaustiveMarker),\n}","parent":null,"children":[{"krate":0,"index":3109},{"krate":0,"index":3111},{"krate":0,"index":3113},{"krate":0,"index":3115},{"krate":0,"index":3117},{"krate":0,"index":3119},{"krate":0,"index":3121},{"krate":0,"index":3123},{"krate":0,"index":3125},{"krate":0,"index":3127},{"krate":0,"index":3129}],"decl_id":null,"docs":" An enumeration over supported color types and bit depths\n","sig":null,"attributes":[{"value":"/ An enumeration over supported color types and bit depths","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":417918,"byte_end":417978,"line_start":7,"line_end":7,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1842},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":418772,"byte_end":418787,"line_start":39,"line_end":39,"column_start":12,"column_end":27},"name":"bytes_per_pixel","qualname":"<ColorType>::bytes_per_pixel","value":"pub fn bytes_per_pixel(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes contained in a pixel of `ColorType` ```c```\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes contained in a pixel of `ColorType` ```c```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":418685,"byte_end":418760,"line_start":38,"line_end":38,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1843},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":419250,"byte_end":419259,"line_start":52,"line_end":52,"column_start":12,"column_end":21},"name":"has_alpha","qualname":"<ColorType>::has_alpha","value":"pub fn has_alpha(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if there is an alpha channel.\n","sig":null,"attributes":[{"value":"/ Returns if there is an alpha channel.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":419197,"byte_end":419238,"line_start":51,"line_end":51,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1845},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":419598,"byte_end":419607,"line_start":62,"line_end":62,"column_start":12,"column_end":21},"name":"has_color","qualname":"<ColorType>::has_color","value":"pub fn has_color(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns false if the color scheme is grayscale, true otherwise.\n","sig":null,"attributes":[{"value":"/ Returns false if the color scheme is grayscale, true otherwise.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":419519,"byte_end":419586,"line_start":61,"line_end":61,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1847},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":420001,"byte_end":420015,"line_start":73,"line_end":73,"column_start":12,"column_end":26},"name":"bits_per_pixel","qualname":"<ColorType>::bits_per_pixel","value":"pub fn bits_per_pixel(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bits contained in a pixel of `ColorType` ```c``` (which will always be\n a multiple of 8).\n","sig":null,"attributes":[{"value":"/ Returns the number of bits contained in a pixel of `ColorType` ```c``` (which will always be","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":419867,"byte_end":419963,"line_start":71,"line_end":71,"column_start":5,"column_end":101}},{"value":"/ a multiple of 8).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":419968,"byte_end":419989,"line_start":72,"line_end":72,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1848},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":420178,"byte_end":420191,"line_start":78,"line_end":78,"column_start":12,"column_end":25},"name":"channel_count","qualname":"<ColorType>::channel_count","value":"pub fn channel_count(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of color channels that make up this pixel\n","sig":null,"attributes":[{"value":"/ Returns the number of color channels that make up this pixel","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":420102,"byte_end":420166,"line_start":77,"line_end":77,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3148},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":420853,"byte_end":420855,"line_start":95,"line_end":95,"column_start":5,"column_end":7},"name":"L1","qualname":"::color::ExtendedColorType::L1","value":"ExtendedColorType::L1","parent":{"krate":0,"index":3147},"children":[],"decl_id":null,"docs":" Pixel is 1-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 1-bit luminance","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":420820,"byte_end":420848,"line_start":94,"line_end":94,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3150},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":420916,"byte_end":420919,"line_start":97,"line_end":97,"column_start":5,"column_end":8},"name":"La1","qualname":"::color::ExtendedColorType::La1","value":"ExtendedColorType::La1","parent":{"krate":0,"index":3147},"children":[],"decl_id":null,"docs":" Pixel is 1-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 1-bit luminance with an alpha channel","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":420861,"byte_end":420911,"line_start":96,"line_end":96,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3152},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":420974,"byte_end":420978,"line_start":99,"line_end":99,"column_start":5,"column_end":9},"name":"Rgb1","qualname":"::color::ExtendedColorType::Rgb1","value":"ExtendedColorType::Rgb1","parent":{"krate":0,"index":3147},"children":[],"decl_id":null,"docs":" Pixel contains 1-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 1-bit R, G and B channels","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":420925,"byte_end":420969,"line_start":98,"line_end":98,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3154},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":421033,"byte_end":421038,"line_start":101,"line_end":101,"column_start":5,"column_end":10},"name":"Rgba1","qualname":"::color::ExtendedColorType::Rgba1","value":"ExtendedColorType::Rgba1","parent":{"krate":0,"index":3147},"children":[],"decl_id":null,"docs":" Pixel is 1-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 1-bit RGB with an alpha channel","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":420984,"byte_end":421028,"line_start":100,"line_end":100,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3156},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":421077,"byte_end":421079,"line_start":103,"line_end":103,"column_start":5,"column_end":7},"name":"L2","qualname":"::color::ExtendedColorType::L2","value":"ExtendedColorType::L2","parent":{"krate":0,"index":3147},"children":[],"decl_id":null,"docs":" Pixel is 2-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 2-bit luminance","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":421044,"byte_end":421072,"line_start":102,"line_end":102,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3158},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":421140,"byte_end":421143,"line_start":105,"line_end":105,"column_start":5,"column_end":8},"name":"La2","qualname":"::color::ExtendedColorType::La2","value":"ExtendedColorType::La2","parent":{"krate":0,"index":3147},"children":[],"decl_id":null,"docs":" Pixel is 2-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 2-bit luminance with an alpha channel","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":421085,"byte_end":421135,"line_start":104,"line_end":104,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3160},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":421198,"byte_end":421202,"line_start":107,"line_end":107,"column_start":5,"column_end":9},"name":"Rgb2","qualname":"::color::ExtendedColorType::Rgb2","value":"ExtendedColorType::Rgb2","parent":{"krate":0,"index":3147},"children":[],"decl_id":null,"docs":" Pixel contains 2-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 2-bit R, G and B channels","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":421149,"byte_end":421193,"line_start":106,"line_end":106,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3162},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":421257,"byte_end":421262,"line_start":109,"line_end":109,"column_start":5,"column_end":10},"name":"Rgba2","qualname":"::color::ExtendedColorType::Rgba2","value":"ExtendedColorType::Rgba2","parent":{"krate":0,"index":3147},"children":[],"decl_id":null,"docs":" Pixel is 2-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 2-bit RGB with an alpha channel","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":421208,"byte_end":421252,"line_start":108,"line_end":108,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3164},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":421301,"byte_end":421303,"line_start":111,"line_end":111,"column_start":5,"column_end":7},"name":"L4","qualname":"::color::ExtendedColorType::L4","value":"ExtendedColorType::L4","parent":{"krate":0,"index":3147},"children":[],"decl_id":null,"docs":" Pixel is 4-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 4-bit luminance","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":421268,"byte_end":421296,"line_start":110,"line_end":110,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3166},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":421364,"byte_end":421367,"line_start":113,"line_end":113,"column_start":5,"column_end":8},"name":"La4","qualname":"::color::ExtendedColorType::La4","value":"ExtendedColorType::La4","parent":{"krate":0,"index":3147},"children":[],"decl_id":null,"docs":" Pixel is 4-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 4-bit luminance with an alpha channel","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":421309,"byte_end":421359,"line_start":112,"line_end":112,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3168},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":421422,"byte_end":421426,"line_start":115,"line_end":115,"column_start":5,"column_end":9},"name":"Rgb4","qualname":"::color::ExtendedColorType::Rgb4","value":"ExtendedColorType::Rgb4","parent":{"krate":0,"index":3147},"children":[],"decl_id":null,"docs":" Pixel contains 4-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 4-bit R, G and B channels","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":421373,"byte_end":421417,"line_start":114,"line_end":114,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3170},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":421481,"byte_end":421486,"line_start":117,"line_end":117,"column_start":5,"column_end":10},"name":"Rgba4","qualname":"::color::ExtendedColorType::Rgba4","value":"ExtendedColorType::Rgba4","parent":{"krate":0,"index":3147},"children":[],"decl_id":null,"docs":" Pixel is 4-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 4-bit RGB with an alpha channel","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":421432,"byte_end":421476,"line_start":116,"line_end":116,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3172},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":421525,"byte_end":421527,"line_start":119,"line_end":119,"column_start":5,"column_end":7},"name":"L8","qualname":"::color::ExtendedColorType::L8","value":"ExtendedColorType::L8","parent":{"krate":0,"index":3147},"children":[],"decl_id":null,"docs":" Pixel is 8-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit luminance","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":421492,"byte_end":421520,"line_start":118,"line_end":118,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3174},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":421588,"byte_end":421591,"line_start":121,"line_end":121,"column_start":5,"column_end":8},"name":"La8","qualname":"::color::ExtendedColorType::La8","value":"ExtendedColorType::La8","parent":{"krate":0,"index":3147},"children":[],"decl_id":null,"docs":" Pixel is 8-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit luminance with an alpha channel","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":421533,"byte_end":421583,"line_start":120,"line_end":120,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3176},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":421646,"byte_end":421650,"line_start":123,"line_end":123,"column_start":5,"column_end":9},"name":"Rgb8","qualname":"::color::ExtendedColorType::Rgb8","value":"ExtendedColorType::Rgb8","parent":{"krate":0,"index":3147},"children":[],"decl_id":null,"docs":" Pixel contains 8-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 8-bit R, G and B channels","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":421597,"byte_end":421641,"line_start":122,"line_end":122,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3178},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":421705,"byte_end":421710,"line_start":125,"line_end":125,"column_start":5,"column_end":10},"name":"Rgba8","qualname":"::color::ExtendedColorType::Rgba8","value":"ExtendedColorType::Rgba8","parent":{"krate":0,"index":3147},"children":[],"decl_id":null,"docs":" Pixel is 8-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit RGB with an alpha channel","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":421656,"byte_end":421700,"line_start":124,"line_end":124,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3180},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":421750,"byte_end":421753,"line_start":127,"line_end":127,"column_start":5,"column_end":8},"name":"L16","qualname":"::color::ExtendedColorType::L16","value":"ExtendedColorType::L16","parent":{"krate":0,"index":3147},"children":[],"decl_id":null,"docs":" Pixel is 16-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit luminance","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":421716,"byte_end":421745,"line_start":126,"line_end":126,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3182},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":421815,"byte_end":421819,"line_start":129,"line_end":129,"column_start":5,"column_end":9},"name":"La16","qualname":"::color::ExtendedColorType::La16","value":"ExtendedColorType::La16","parent":{"krate":0,"index":3147},"children":[],"decl_id":null,"docs":" Pixel is 16-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit luminance with an alpha channel","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":421759,"byte_end":421810,"line_start":128,"line_end":128,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3184},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":421875,"byte_end":421880,"line_start":131,"line_end":131,"column_start":5,"column_end":10},"name":"Rgb16","qualname":"::color::ExtendedColorType::Rgb16","value":"ExtendedColorType::Rgb16","parent":{"krate":0,"index":3147},"children":[],"decl_id":null,"docs":" Pixel contains 16-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 16-bit R, G and B channels","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":421825,"byte_end":421870,"line_start":130,"line_end":130,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3186},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":421936,"byte_end":421942,"line_start":133,"line_end":133,"column_start":5,"column_end":11},"name":"Rgba16","qualname":"::color::ExtendedColorType::Rgba16","value":"ExtendedColorType::Rgba16","parent":{"krate":0,"index":3147},"children":[],"decl_id":null,"docs":" Pixel is 16-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit RGB with an alpha channel","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":421886,"byte_end":421931,"line_start":132,"line_end":132,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3188},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":421997,"byte_end":422001,"line_start":135,"line_end":135,"column_start":5,"column_end":9},"name":"Bgr8","qualname":"::color::ExtendedColorType::Bgr8","value":"ExtendedColorType::Bgr8","parent":{"krate":0,"index":3147},"children":[],"decl_id":null,"docs":" Pixel contains 8-bit B, G and R channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 8-bit B, G and R channels","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":421948,"byte_end":421992,"line_start":134,"line_end":134,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3190},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":422056,"byte_end":422061,"line_start":137,"line_end":137,"column_start":5,"column_end":10},"name":"Bgra8","qualname":"::color::ExtendedColorType::Bgra8","value":"ExtendedColorType::Bgra8","parent":{"krate":0,"index":3147},"children":[],"decl_id":null,"docs":" Pixel is 8-bit BGR with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit BGR with an alpha channel","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":422007,"byte_end":422051,"line_start":136,"line_end":136,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3192},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":422290,"byte_end":422297,"line_start":142,"line_end":142,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::color::ExtendedColorType::Unknown","value":"ExtendedColorType::Unknown(u8)","parent":{"krate":0,"index":3147},"children":[],"decl_id":null,"docs":" Pixel is of unknown color type with the specified bits per pixel. This can apply to pixels\n which are associated with an external palette. In that case, the pixel value is an index\n into the palette.\n","sig":null,"attributes":[{"value":"/ Pixel is of unknown color type with the specified bits per pixel. This can apply to pixels","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":422068,"byte_end":422162,"line_start":139,"line_end":139,"column_start":5,"column_end":99}},{"value":"/ which are associated with an external palette. In that case, the pixel value is an index","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":422167,"byte_end":422259,"line_start":140,"line_end":140,"column_start":5,"column_end":97}},{"value":"/ into the palette.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":422264,"byte_end":422285,"line_start":141,"line_end":141,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3195},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":422327,"byte_end":422342,"line_start":145,"line_end":145,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::color::ExtendedColorType::__NonExhaustive","value":"ExtendedColorType::__NonExhaustive(crate::utils::NonExhaustiveMarker)","parent":{"krate":0,"index":3147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3147},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":420796,"byte_end":420813,"line_start":93,"line_end":93,"column_start":10,"column_end":27},"name":"ExtendedColorType","qualname":"::color::ExtendedColorType","value":"pub enum ExtendedColorType {\n\n    /// Pixel is 1-bit luminance\n    L1,\n\n    /// Pixel is 1-bit luminance with an alpha channel\n    La1,\n\n    /// Pixel contains 1-bit R, G and B channels\n    Rgb1,\n\n    /// Pixel is 1-bit RGB with an alpha channel\n    Rgba1,\n\n    /// Pixel is 2-bit luminance\n    L2,\n\n    /// Pixel is 2-bit luminance with an alpha channel\n    La2,\n\n    /// Pixel contains 2-bit R, G and B channels\n    Rgb2,\n\n    /// Pixel is 2-bit RGB with an alpha channel\n    Rgba2,\n\n    /// Pixel is 4-bit luminance\n    L4,\n\n    /// Pixel is 4-bit luminance with an alpha channel\n    La4,\n\n    /// Pixel contains 4-bit R, G and B channels\n    Rgb4,\n\n    /// Pixel is 4-bit RGB with an alpha channel\n    Rgba4,\n\n    /// Pixel is 8-bit luminance\n    L8,\n\n    /// Pixel is 8-bit luminance with an alpha channel\n    La8,\n\n    /// Pixel contains 8-bit R, G and B channels\n    Rgb8,\n\n    /// Pixel is 8-bit RGB with an alpha channel\n    Rgba8,\n\n    /// Pixel is 16-bit luminance\n    L16,\n\n    /// Pixel is 16-bit luminance with an alpha channel\n    La16,\n\n    /// Pixel contains 16-bit R, G and B channels\n    Rgb16,\n\n    /// Pixel is 16-bit RGB with an alpha channel\n    Rgba16,\n\n    /// Pixel contains 8-bit B, G and R channels\n    Bgr8,\n\n    /// Pixel is 8-bit BGR with an alpha channel\n    Bgra8,\n\n    /// Pixel is of unknown color type with the specified bits per pixel. This can apply to pixels\n    /// which are associated with an external palette. In that case, the pixel value is an index\n    /// into the palette.\n    Unknown(u8),\n\n    #[doc(hidden)]\n    __NonExhaustive(crate::utils::NonExhaustiveMarker),\n}","parent":null,"children":[{"krate":0,"index":3148},{"krate":0,"index":3150},{"krate":0,"index":3152},{"krate":0,"index":3154},{"krate":0,"index":3156},{"krate":0,"index":3158},{"krate":0,"index":3160},{"krate":0,"index":3162},{"krate":0,"index":3164},{"krate":0,"index":3166},{"krate":0,"index":3168},{"krate":0,"index":3170},{"krate":0,"index":3172},{"krate":0,"index":3174},{"krate":0,"index":3176},{"krate":0,"index":3178},{"krate":0,"index":3180},{"krate":0,"index":3182},{"krate":0,"index":3184},{"krate":0,"index":3186},{"krate":0,"index":3188},{"krate":0,"index":3190},{"krate":0,"index":3192},{"krate":0,"index":3195}],"decl_id":null,"docs":" An enumeration of color types encountered in image formats.","sig":null,"attributes":[{"value":"/ An enumeration of color types encountered in image formats.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":420289,"byte_end":420352,"line_start":84,"line_end":84,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":420353,"byte_end":420356,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ This is not exhaustive over all existing image formats but should be granular enough to allow","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":420357,"byte_end":420454,"line_start":86,"line_end":86,"column_start":1,"column_end":98}},{"value":"/ round tripping of decoding and encoding as much as possible. The variants will be extended as","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":420455,"byte_end":420552,"line_start":87,"line_end":87,"column_start":1,"column_end":98}},{"value":"/ necessary to enable this.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":420553,"byte_end":420582,"line_start":88,"line_end":88,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":420583,"byte_end":420586,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ Another purpose is to advise users of a rough estimate of the accuracy and effort of the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":420587,"byte_end":420679,"line_start":90,"line_end":90,"column_start":1,"column_end":93}},{"value":"/ decoding from and encoding to such an image format.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":420680,"byte_end":420735,"line_start":91,"line_end":91,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1850},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":422625,"byte_end":422638,"line_start":153,"line_end":153,"column_start":12,"column_end":25},"name":"channel_count","qualname":"<ExtendedColorType>::channel_count","value":"pub fn channel_count(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the number of channels for colors of this type.","sig":null,"attributes":[{"value":"/ Get the number of channels for colors of this type.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":422411,"byte_end":422466,"line_start":149,"line_end":149,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":422471,"byte_end":422474,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ Note that the `Unknown` variant returns a value of `1` since pixels can only be treated as","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":422479,"byte_end":422573,"line_start":151,"line_end":151,"column_start":5,"column_end":99}},{"value":"/ an opaque datum by the library.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":422578,"byte_end":422613,"line_start":152,"line_end":152,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3513},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":429002,"byte_end":429005,"line_start":373,"line_end":373,"column_start":5,"column_end":8},"name":"Rgb","qualname":"::color::Rgb","value":"","parent":null,"children":[],"decl_id":null,"docs":"RGB colors\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":424752,"byte_end":424762,"line_start":215,"line_end":215,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":424763,"byte_end":424785,"line_start":216,"line_end":216,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":3542},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":429082,"byte_end":429085,"line_start":374,"line_end":374,"column_start":5,"column_end":8},"name":"Bgr","qualname":"::color::Bgr","value":"","parent":null,"children":[],"decl_id":null,"docs":"BGR colors\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":424752,"byte_end":424762,"line_start":215,"line_end":215,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":424763,"byte_end":424785,"line_start":216,"line_end":216,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":3571},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":429161,"byte_end":429165,"line_start":375,"line_end":375,"column_start":5,"column_end":9},"name":"Luma","qualname":"::color::Luma","value":"","parent":null,"children":[],"decl_id":null,"docs":"Grayscale colors\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":424752,"byte_end":424762,"line_start":215,"line_end":215,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":424763,"byte_end":424785,"line_start":216,"line_end":216,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":3600},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":429242,"byte_end":429246,"line_start":376,"line_end":376,"column_start":5,"column_end":9},"name":"Rgba","qualname":"::color::Rgba","value":"","parent":null,"children":[],"decl_id":null,"docs":"RGB colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":424752,"byte_end":424762,"line_start":215,"line_end":215,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":424763,"byte_end":424785,"line_start":216,"line_end":216,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":3629},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":429342,"byte_end":429346,"line_start":377,"line_end":377,"column_start":5,"column_end":9},"name":"Bgra","qualname":"::color::Bgra","value":"","parent":null,"children":[],"decl_id":null,"docs":"BGR colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":424752,"byte_end":424762,"line_start":215,"line_end":215,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":424763,"byte_end":424785,"line_start":216,"line_end":216,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":3658},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":429441,"byte_end":429446,"line_start":378,"line_end":378,"column_start":5,"column_end":10},"name":"LumaA","qualname":"::color::LumaA","value":"","parent":null,"children":[],"decl_id":null,"docs":"Grayscale colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":424752,"byte_end":424762,"line_start":215,"line_end":215,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":424763,"byte_end":424785,"line_start":216,"line_end":216,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":1854},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":429613,"byte_end":429622,"line_start":382,"line_end":382,"column_start":11,"column_end":20},"name":"FromColor","qualname":"::color::FromColor","value":"FromColor<Other>","parent":null,"children":[{"krate":0,"index":1856}],"decl_id":null,"docs":" Provides color conversions for the different pixel types.\n","sig":null,"attributes":[{"value":"/ Provides color conversions for the different pixel types.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":429541,"byte_end":429602,"line_start":381,"line_end":381,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1856},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":429712,"byte_end":429722,"line_start":384,"line_end":384,"column_start":8,"column_end":18},"name":"from_color","qualname":"::color::FromColor::from_color","value":"pub fn from_color(&mut Self, &Other)","parent":{"krate":0,"index":1854},"children":[],"decl_id":null,"docs":" Changes `self` to represent `Other` in the color space of `Self`\n","sig":null,"attributes":[{"value":"/ Changes `self` to represent `Other` in the color space of `Self`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":429636,"byte_end":429704,"line_start":383,"line_end":383,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3739},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":457755,"byte_end":457765,"line_start":44,"line_end":44,"column_start":5,"column_end":15},"name":"ImageLuma8","qualname":"::dynimage::DynamicImage::ImageLuma8","value":"DynamicImage::ImageLuma8(GrayImage)","parent":{"krate":0,"index":3738},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Luma\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Luma","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":457708,"byte_end":457750,"line_start":43,"line_end":43,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3742},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":457841,"byte_end":457852,"line_start":47,"line_end":47,"column_start":5,"column_end":16},"name":"ImageLumaA8","qualname":"::dynimage::DynamicImage::ImageLumaA8","value":"DynamicImage::ImageLumaA8(GrayAlphaImage)","parent":{"krate":0,"index":3738},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Luma with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Luma with alpha","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":457783,"byte_end":457836,"line_start":46,"line_end":46,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3745},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":457921,"byte_end":457930,"line_start":50,"line_end":50,"column_start":5,"column_end":14},"name":"ImageRgb8","qualname":"::dynimage::DynamicImage::ImageRgb8","value":"DynamicImage::ImageRgb8(RgbImage)","parent":{"krate":0,"index":3738},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Rgb\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Rgb","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":457875,"byte_end":457916,"line_start":49,"line_end":49,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3748},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":458004,"byte_end":458014,"line_start":53,"line_end":53,"column_start":5,"column_end":15},"name":"ImageRgba8","qualname":"::dynimage::DynamicImage::ImageRgba8","value":"DynamicImage::ImageRgba8(RgbaImage)","parent":{"krate":0,"index":3738},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Rgb with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Rgb with alpha","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":457947,"byte_end":457999,"line_start":52,"line_end":52,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3751},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":458078,"byte_end":458087,"line_start":56,"line_end":56,"column_start":5,"column_end":14},"name":"ImageBgr8","qualname":"::dynimage::DynamicImage::ImageBgr8","value":"DynamicImage::ImageBgr8(BgrImage)","parent":{"krate":0,"index":3738},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Bgr\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Bgr","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":458032,"byte_end":458073,"line_start":55,"line_end":55,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3754},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":458161,"byte_end":458171,"line_start":59,"line_end":59,"column_start":5,"column_end":15},"name":"ImageBgra8","qualname":"::dynimage::DynamicImage::ImageBgra8","value":"DynamicImage::ImageBgra8(BgraImage)","parent":{"krate":0,"index":3738},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Bgr with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Bgr with alpha","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":458104,"byte_end":458156,"line_start":58,"line_end":58,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3757},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":458237,"byte_end":458248,"line_start":62,"line_end":62,"column_start":5,"column_end":16},"name":"ImageLuma16","qualname":"::dynimage::DynamicImage::ImageLuma16","value":"DynamicImage::ImageLuma16(Gray16Image)","parent":{"krate":0,"index":3738},"children":[],"decl_id":null,"docs":" Each pixel in this image is 16-bit Luma\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 16-bit Luma","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":458189,"byte_end":458232,"line_start":61,"line_end":61,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3760},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":458327,"byte_end":458339,"line_start":65,"line_end":65,"column_start":5,"column_end":17},"name":"ImageLumaA16","qualname":"::dynimage::DynamicImage::ImageLumaA16","value":"DynamicImage::ImageLumaA16(GrayAlpha16Image)","parent":{"krate":0,"index":3738},"children":[],"decl_id":null,"docs":" Each pixel in this image is 16-bit Luma with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 16-bit Luma with alpha","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":458268,"byte_end":458322,"line_start":64,"line_end":64,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3763},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":458411,"byte_end":458421,"line_start":68,"line_end":68,"column_start":5,"column_end":15},"name":"ImageRgb16","qualname":"::dynimage::DynamicImage::ImageRgb16","value":"DynamicImage::ImageRgb16(Rgb16Image)","parent":{"krate":0,"index":3738},"children":[],"decl_id":null,"docs":" Each pixel in this image is 16-bit Rgb\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 16-bit Rgb","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":458364,"byte_end":458406,"line_start":67,"line_end":67,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3766},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":458498,"byte_end":458509,"line_start":71,"line_end":71,"column_start":5,"column_end":16},"name":"ImageRgba16","qualname":"::dynimage::DynamicImage::ImageRgba16","value":"DynamicImage::ImageRgba16(Rgba16Image)","parent":{"krate":0,"index":3738},"children":[],"decl_id":null,"docs":" Each pixel in this image is 16-bit Rgb with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 16-bit Rgb with alpha","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":458440,"byte_end":458493,"line_start":70,"line_end":70,"column_start":5,"column_end":58}}]},{"kind":"Enum","id":{"krate":0,"index":3738},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":457689,"byte_end":457701,"line_start":42,"line_end":42,"column_start":10,"column_end":22},"name":"DynamicImage","qualname":"::dynimage::DynamicImage","value":"pub enum DynamicImage {\n\n    /// Each pixel in this image is 8-bit Luma\n    ImageLuma8(GrayImage),\n\n    /// Each pixel in this image is 8-bit Luma with alpha\n    ImageLumaA8(GrayAlphaImage),\n\n    /// Each pixel in this image is 8-bit Rgb\n    ImageRgb8(RgbImage),\n\n    /// Each pixel in this image is 8-bit Rgb with alpha\n    ImageRgba8(RgbaImage),\n\n    /// Each pixel in this image is 8-bit Bgr\n    ImageBgr8(BgrImage),\n\n    /// Each pixel in this image is 8-bit Bgr with alpha\n    ImageBgra8(BgraImage),\n\n    /// Each pixel in this image is 16-bit Luma\n    ImageLuma16(Gray16Image),\n\n    /// Each pixel in this image is 16-bit Luma with alpha\n    ImageLumaA16(GrayAlpha16Image),\n\n    /// Each pixel in this image is 16-bit Rgb\n    ImageRgb16(Rgb16Image),\n\n    /// Each pixel in this image is 16-bit Rgb with alpha\n    ImageRgba16(Rgba16Image),\n}","parent":null,"children":[{"krate":0,"index":3739},{"krate":0,"index":3742},{"krate":0,"index":3745},{"krate":0,"index":3748},{"krate":0,"index":3751},{"krate":0,"index":3754},{"krate":0,"index":3757},{"krate":0,"index":3760},{"krate":0,"index":3763},{"krate":0,"index":3766}],"decl_id":null,"docs":" A Dynamic Image\n","sig":null,"attributes":[{"value":"/ A Dynamic Image","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":457643,"byte_end":457662,"line_start":40,"line_end":40,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2075},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":462724,"byte_end":462733,"line_start":138,"line_end":138,"column_start":12,"column_end":21},"name":"new_luma8","qualname":"<DynamicImage>::new_luma8","value":"pub fn new_luma8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of grey pixels.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":462650,"byte_end":462712,"line_start":137,"line_end":137,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2076},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":462936,"byte_end":462947,"line_start":144,"line_end":144,"column_start":12,"column_end":23},"name":"new_luma_a8","qualname":"<DynamicImage>::new_luma_a8","value":"pub fn new_luma_a8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey\n pixels with transparency.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of grey","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":462836,"byte_end":462890,"line_start":142,"line_end":142,"column_start":5,"column_end":59}},{"value":"/ pixels with transparency.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":462895,"byte_end":462924,"line_start":143,"line_end":143,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2077},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":463124,"byte_end":463132,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"new_rgb8","qualname":"<DynamicImage>::new_rgb8","value":"pub fn new_rgb8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGB pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGB pixels.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":463051,"byte_end":463112,"line_start":148,"line_end":148,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2078},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":463308,"byte_end":463317,"line_start":154,"line_end":154,"column_start":12,"column_end":21},"name":"new_rgba8","qualname":"<DynamicImage>::new_rgba8","value":"pub fn new_rgba8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGBA pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGBA pixels.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":463234,"byte_end":463296,"line_start":153,"line_end":153,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2079},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":463494,"byte_end":463503,"line_start":159,"line_end":159,"column_start":12,"column_end":21},"name":"new_bgra8","qualname":"<DynamicImage>::new_bgra8","value":"pub fn new_bgra8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of BGRA pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of BGRA pixels.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":463420,"byte_end":463482,"line_start":158,"line_end":158,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2080},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":463679,"byte_end":463687,"line_start":164,"line_end":164,"column_start":12,"column_end":20},"name":"new_bgr8","qualname":"<DynamicImage>::new_bgr8","value":"pub fn new_bgr8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of BGR pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of BGR pixels.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":463606,"byte_end":463667,"line_start":163,"line_end":163,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2081},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":463863,"byte_end":463873,"line_start":169,"line_end":169,"column_start":12,"column_end":22},"name":"new_luma16","qualname":"<DynamicImage>::new_luma16","value":"pub fn new_luma16(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of grey pixels.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":463789,"byte_end":463851,"line_start":168,"line_end":168,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2082},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":464077,"byte_end":464089,"line_start":175,"line_end":175,"column_start":12,"column_end":24},"name":"new_luma_a16","qualname":"<DynamicImage>::new_luma_a16","value":"pub fn new_luma_a16(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey\n pixels with transparency.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of grey","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":463977,"byte_end":464031,"line_start":173,"line_end":173,"column_start":5,"column_end":59}},{"value":"/ pixels with transparency.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":464036,"byte_end":464065,"line_start":174,"line_end":174,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2083},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":464267,"byte_end":464276,"line_start":180,"line_end":180,"column_start":12,"column_end":21},"name":"new_rgb16","qualname":"<DynamicImage>::new_rgb16","value":"pub fn new_rgb16(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGB pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGB pixels.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":464194,"byte_end":464255,"line_start":179,"line_end":179,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2084},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":464453,"byte_end":464463,"line_start":185,"line_end":185,"column_start":12,"column_end":22},"name":"new_rgba16","qualname":"<DynamicImage>::new_rgba16","value":"pub fn new_rgba16(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGBA pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGBA pixels.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":464379,"byte_end":464441,"line_start":184,"line_end":184,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2085},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":464629,"byte_end":464641,"line_start":190,"line_end":190,"column_start":12,"column_end":24},"name":"from_decoder","qualname":"<DynamicImage>::from_decoder","value":"pub fn from_decoder<'a,\n                    impl ImageDecoder<'a>: ImageDecoder>(impl ImageDecoder<'a>)\n-> ImageResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Decodes an encoded image into a dynamic image.\n","sig":null,"attributes":[{"value":"/ Decodes an encoded image into a dynamic image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":464567,"byte_end":464617,"line_start":189,"line_end":189,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2088},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":464819,"byte_end":464825,"line_start":197,"line_end":197,"column_start":12,"column_end":18},"name":"to_rgb","qualname":"<DynamicImage>::to_rgb","value":"pub fn to_rgb(&Self) -> RgbImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGB image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGB image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":464758,"byte_end":464807,"line_start":196,"line_end":196,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2089},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":464994,"byte_end":465001,"line_start":204,"line_end":204,"column_start":12,"column_end":19},"name":"to_rgba","qualname":"<DynamicImage>::to_rgba","value":"pub fn to_rgba(&Self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGBA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGBA image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":464932,"byte_end":464982,"line_start":203,"line_end":203,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2090},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":465170,"byte_end":465176,"line_start":211,"line_end":211,"column_start":12,"column_end":18},"name":"to_bgr","qualname":"<DynamicImage>::to_bgr","value":"pub fn to_bgr(&Self) -> BgrImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an BGR image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an BGR image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":465109,"byte_end":465158,"line_start":210,"line_end":210,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2091},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":465345,"byte_end":465352,"line_start":218,"line_end":218,"column_start":12,"column_end":19},"name":"to_bgra","qualname":"<DynamicImage>::to_bgra","value":"pub fn to_bgra(&Self) -> BgraImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an BGRA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an BGRA image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":465283,"byte_end":465333,"line_start":217,"line_end":217,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2092},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":465521,"byte_end":465528,"line_start":225,"line_end":225,"column_start":12,"column_end":19},"name":"to_luma","qualname":"<DynamicImage>::to_luma","value":"pub fn to_luma(&Self) -> GrayImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a Luma image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a Luma image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":465460,"byte_end":465509,"line_start":224,"line_end":224,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2093},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":465698,"byte_end":465711,"line_start":232,"line_end":232,"column_start":12,"column_end":25},"name":"to_luma_alpha","qualname":"<DynamicImage>::to_luma_alpha","value":"pub fn to_luma_alpha(&Self) -> GrayAlphaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a LumaA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a LumaA image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":465636,"byte_end":465686,"line_start":231,"line_end":231,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2094},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":466003,"byte_end":466011,"line_start":242,"line_end":242,"column_start":12,"column_end":20},"name":"into_rgb","qualname":"<DynamicImage>::into_rgb","value":"pub fn into_rgb(Self) -> RgbImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGB image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a RGB image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":465824,"byte_end":465870,"line_start":238,"line_end":238,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":465875,"byte_end":465878,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":465883,"byte_end":465953,"line_start":240,"line_end":240,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":465958,"byte_end":465991,"line_start":241,"line_end":241,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2095},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":466328,"byte_end":466337,"line_start":253,"line_end":253,"column_start":12,"column_end":21},"name":"into_rgba","qualname":"<DynamicImage>::into_rgba","value":"pub fn into_rgba(Self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGBA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a RGBA image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":466148,"byte_end":466195,"line_start":249,"line_end":249,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":466200,"byte_end":466203,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":466208,"byte_end":466278,"line_start":251,"line_end":251,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":466283,"byte_end":466316,"line_start":252,"line_end":252,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2096},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":466656,"byte_end":466664,"line_start":264,"line_end":264,"column_start":12,"column_end":20},"name":"into_bgr","qualname":"<DynamicImage>::into_bgr","value":"pub fn into_bgr(Self) -> BgrImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a BGR image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a BGR image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":466477,"byte_end":466523,"line_start":260,"line_end":260,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":466528,"byte_end":466531,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":466536,"byte_end":466606,"line_start":262,"line_end":262,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":466611,"byte_end":466644,"line_start":263,"line_end":263,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2097},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":466981,"byte_end":466990,"line_start":275,"line_end":275,"column_start":12,"column_end":21},"name":"into_bgra","qualname":"<DynamicImage>::into_bgra","value":"pub fn into_bgra(Self) -> BgraImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a BGRA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a BGRA image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":466801,"byte_end":466848,"line_start":271,"line_end":271,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":466853,"byte_end":466856,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":466861,"byte_end":466931,"line_start":273,"line_end":273,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":466936,"byte_end":466969,"line_start":274,"line_end":274,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2098},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":467310,"byte_end":467319,"line_start":286,"line_end":286,"column_start":12,"column_end":21},"name":"into_luma","qualname":"<DynamicImage>::into_luma","value":"pub fn into_luma(Self) -> GrayImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a Luma image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a Luma image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":467130,"byte_end":467177,"line_start":282,"line_end":282,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":467182,"byte_end":467185,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":467190,"byte_end":467260,"line_start":284,"line_end":284,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":467265,"byte_end":467298,"line_start":285,"line_end":285,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2099},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":467640,"byte_end":467655,"line_start":297,"line_end":297,"column_start":12,"column_end":27},"name":"into_luma_alpha","qualname":"<DynamicImage>::into_luma_alpha","value":"pub fn into_luma_alpha(Self) -> GrayAlphaImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a LumaA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a LumaA image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":467459,"byte_end":467507,"line_start":293,"line_end":293,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":467512,"byte_end":467515,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":467520,"byte_end":467590,"line_start":295,"line_end":295,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":467595,"byte_end":467628,"line_start":296,"line_end":296,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2100},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":468037,"byte_end":468041,"line_start":308,"line_end":308,"column_start":12,"column_end":16},"name":"crop","qualname":"<DynamicImage>::crop","value":"pub fn crop(&mut Self, u32, u32, u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a cut-out of this image delimited by the bounding rectangle.","sig":null,"attributes":[{"value":"/ Return a cut-out of this image delimited by the bounding rectangle.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":467807,"byte_end":467878,"line_start":304,"line_end":304,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":467883,"byte_end":467886,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ Note: this method does *not* modify the object,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":467891,"byte_end":467942,"line_start":306,"line_end":306,"column_start":5,"column_end":56}},{"value":"/ and its signature will be replaced with `crop_imm()`'s in the 0.24 release","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":467947,"byte_end":468025,"line_start":307,"line_end":307,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2101},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":468298,"byte_end":468306,"line_start":313,"line_end":313,"column_start":12,"column_end":20},"name":"crop_imm","qualname":"<DynamicImage>::crop_imm","value":"pub fn crop_imm(&Self, u32, u32, u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a cut-out of this image delimited by the bounding rectangle.\n","sig":null,"attributes":[{"value":"/ Return a cut-out of this image delimited by the bounding rectangle.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":468215,"byte_end":468286,"line_start":312,"line_end":312,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2102},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":468531,"byte_end":468538,"line_start":318,"line_end":318,"column_start":12,"column_end":19},"name":"as_rgb8","qualname":"<DynamicImage>::as_rgb8","value":"pub fn as_rgb8(&Self) -> Option<&RgbImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit RGB image","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":468476,"byte_end":468519,"line_start":317,"line_end":317,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2103},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":468753,"byte_end":468764,"line_start":326,"line_end":326,"column_start":12,"column_end":23},"name":"as_mut_rgb8","qualname":"<DynamicImage>::as_mut_rgb8","value":"pub fn as_mut_rgb8(&mut Self) -> Option<&mut RgbImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit RGB image","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":468690,"byte_end":468741,"line_start":325,"line_end":325,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2104},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":468983,"byte_end":468990,"line_start":334,"line_end":334,"column_start":12,"column_end":19},"name":"as_bgr8","qualname":"<DynamicImage>::as_bgr8","value":"pub fn as_bgr8(&Self) -> Option<&BgrImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit BGR image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit BGR image","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":468928,"byte_end":468971,"line_start":333,"line_end":333,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2105},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":469205,"byte_end":469216,"line_start":342,"line_end":342,"column_start":12,"column_end":23},"name":"as_mut_bgr8","qualname":"<DynamicImage>::as_mut_bgr8","value":"pub fn as_mut_bgr8(&mut Self) -> Option<&mut BgrImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit BGR image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit BGR image","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":469142,"byte_end":469193,"line_start":341,"line_end":341,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2106},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":469436,"byte_end":469444,"line_start":350,"line_end":350,"column_start":12,"column_end":20},"name":"as_rgba8","qualname":"<DynamicImage>::as_rgba8","value":"pub fn as_rgba8(&Self) -> Option<&RgbaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit RGBA image","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":469380,"byte_end":469424,"line_start":349,"line_end":349,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2107},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":469662,"byte_end":469674,"line_start":358,"line_end":358,"column_start":12,"column_end":24},"name":"as_mut_rgba8","qualname":"<DynamicImage>::as_mut_rgba8","value":"pub fn as_mut_rgba8(&mut Self) -> Option<&mut RgbaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit RGBA image","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":469598,"byte_end":469650,"line_start":357,"line_end":357,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2108},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":469896,"byte_end":469904,"line_start":366,"line_end":366,"column_start":12,"column_end":20},"name":"as_bgra8","qualname":"<DynamicImage>::as_bgra8","value":"pub fn as_bgra8(&Self) -> Option<&BgraImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit BGRA image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit BGRA image","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":469840,"byte_end":469884,"line_start":365,"line_end":365,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2109},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":470122,"byte_end":470134,"line_start":374,"line_end":374,"column_start":12,"column_end":24},"name":"as_mut_bgra8","qualname":"<DynamicImage>::as_mut_bgra8","value":"pub fn as_mut_bgra8(&mut Self) -> Option<&mut BgraImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit RGBA image","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":470058,"byte_end":470110,"line_start":373,"line_end":373,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2110},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":470361,"byte_end":470369,"line_start":382,"line_end":382,"column_start":12,"column_end":20},"name":"as_luma8","qualname":"<DynamicImage>::as_luma8","value":"pub fn as_luma8(&Self) -> Option<&GrayImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit Grayscale image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit Grayscale image","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":470300,"byte_end":470349,"line_start":381,"line_end":381,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2111},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":470592,"byte_end":470604,"line_start":390,"line_end":390,"column_start":12,"column_end":24},"name":"as_mut_luma8","qualname":"<DynamicImage>::as_mut_luma8","value":"pub fn as_mut_luma8(&mut Self) -> Option<&mut GrayImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit Grayscale image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit Grayscale image","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":470523,"byte_end":470580,"line_start":389,"line_end":389,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2112},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":470853,"byte_end":470867,"line_start":398,"line_end":398,"column_start":12,"column_end":26},"name":"as_luma_alpha8","qualname":"<DynamicImage>::as_luma_alpha8","value":"pub fn as_luma_alpha8(&Self) -> Option<&GrayAlphaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit Grayscale image with an alpha channel\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit Grayscale image with an alpha channel","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":470770,"byte_end":470841,"line_start":397,"line_end":397,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2113},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":471118,"byte_end":471136,"line_start":406,"line_end":406,"column_start":12,"column_end":30},"name":"as_mut_luma_alpha8","qualname":"<DynamicImage>::as_mut_luma_alpha8","value":"pub fn as_mut_luma_alpha8(&mut Self) -> Option<&mut GrayAlphaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit Grayscale image with an alpha channel\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit Grayscale image with an alpha channel","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":471027,"byte_end":471106,"line_start":405,"line_end":405,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":2114},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":471364,"byte_end":471372,"line_start":414,"line_end":414,"column_start":12,"column_end":20},"name":"as_rgb16","qualname":"<DynamicImage>::as_rgb16","value":"pub fn as_rgb16(&Self) -> Option<&Rgb16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 16bit RGB image","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":471308,"byte_end":471352,"line_start":413,"line_end":413,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2115},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":471591,"byte_end":471603,"line_start":422,"line_end":422,"column_start":12,"column_end":24},"name":"as_mut_rgb16","qualname":"<DynamicImage>::as_mut_rgb16","value":"pub fn as_mut_rgb16(&mut Self) -> Option<&mut Rgb16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 16bit RGB image","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":471527,"byte_end":471579,"line_start":421,"line_end":421,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2116},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":471827,"byte_end":471836,"line_start":430,"line_end":430,"column_start":12,"column_end":21},"name":"as_rgba16","qualname":"<DynamicImage>::as_rgba16","value":"pub fn as_rgba16(&Self) -> Option<&Rgba16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 16bit RGBA image","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":471770,"byte_end":471815,"line_start":429,"line_end":429,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2117},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":472058,"byte_end":472071,"line_start":438,"line_end":438,"column_start":12,"column_end":25},"name":"as_mut_rgba16","qualname":"<DynamicImage>::as_mut_rgba16","value":"pub fn as_mut_rgba16(&mut Self) -> Option<&mut Rgba16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 16bit RGBA image","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":471993,"byte_end":472046,"line_start":437,"line_end":437,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2118},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":472302,"byte_end":472311,"line_start":446,"line_end":446,"column_start":12,"column_end":21},"name":"as_luma16","qualname":"<DynamicImage>::as_luma16","value":"pub fn as_luma16(&Self) -> Option<&Gray16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit Grayscale image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 16bit Grayscale image","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":472240,"byte_end":472290,"line_start":445,"line_end":445,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2119},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":472538,"byte_end":472551,"line_start":454,"line_end":454,"column_start":12,"column_end":25},"name":"as_mut_luma16","qualname":"<DynamicImage>::as_mut_luma16","value":"pub fn as_mut_luma16(&mut Self) -> Option<&mut Gray16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit Grayscale image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 16bit Grayscale image","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":472468,"byte_end":472526,"line_start":453,"line_end":453,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2120},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":472804,"byte_end":472819,"line_start":462,"line_end":462,"column_start":12,"column_end":27},"name":"as_luma_alpha16","qualname":"<DynamicImage>::as_luma_alpha16","value":"pub fn as_luma_alpha16(&Self) -> Option<&GrayAlpha16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit Grayscale image with an alpha channel\n","sig":null,"attributes":[{"value":"/ Return a reference to an 16bit Grayscale image with an alpha channel","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":472720,"byte_end":472792,"line_start":461,"line_end":461,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2121},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":473074,"byte_end":473093,"line_start":470,"line_end":470,"column_start":12,"column_end":31},"name":"as_mut_luma_alpha16","qualname":"<DynamicImage>::as_mut_luma_alpha16","value":"pub fn as_mut_luma_alpha16(&mut Self) -> Option<&mut GrayAlpha16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit Grayscale image with an alpha channel\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 16bit Grayscale image with an alpha channel","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":472982,"byte_end":473062,"line_start":469,"line_end":469,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2122},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":473352,"byte_end":473370,"line_start":478,"line_end":478,"column_start":12,"column_end":30},"name":"as_flat_samples_u8","qualname":"<DynamicImage>::as_flat_samples_u8","value":"pub fn as_flat_samples_u8(&Self) -> Option<FlatSamples<&[u8]>>","parent":null,"children":[],"decl_id":null,"docs":" Return a view on the raw sample buffer for 8 bit per channel images.\n","sig":null,"attributes":[{"value":"/ Return a view on the raw sample buffer for 8 bit per channel images.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":473268,"byte_end":473340,"line_start":477,"line_end":477,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2123},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":474004,"byte_end":474023,"line_start":491,"line_end":491,"column_start":12,"column_end":31},"name":"as_flat_samples_u16","qualname":"<DynamicImage>::as_flat_samples_u16","value":"pub fn as_flat_samples_u16(&Self) -> Option<FlatSamples<&[u16]>>","parent":null,"children":[],"decl_id":null,"docs":" Return a view on the raw sample buffer for 16 bit per channel images.\n","sig":null,"attributes":[{"value":"/ Return a view on the raw sample buffer for 16 bit per channel images.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":473919,"byte_end":473992,"line_start":490,"line_end":490,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2124},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":474490,"byte_end":474498,"line_start":502,"line_end":502,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<DynamicImage>::to_bytes","value":"pub fn to_bytes(&Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Return this image's pixels as a byte vector.\n","sig":null,"attributes":[{"value":"/ Return this image's pixels as a byte vector.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":474430,"byte_end":474478,"line_start":501,"line_end":501,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2125},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":474606,"byte_end":474611,"line_start":507,"line_end":507,"column_start":12,"column_end":17},"name":"color","qualname":"<DynamicImage>::color","value":"pub fn color(&Self) -> color::ColorType","parent":null,"children":[],"decl_id":null,"docs":" Return this image's color type.\n","sig":null,"attributes":[{"value":"/ Return this image's color type.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":474559,"byte_end":474594,"line_start":506,"line_end":506,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2126},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":475415,"byte_end":475424,"line_start":523,"line_end":523,"column_start":12,"column_end":21},"name":"grayscale","qualname":"<DynamicImage>::grayscale","value":"pub fn grayscale(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a grayscale version of this image.\n","sig":null,"attributes":[{"value":"/ Return a grayscale version of this image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":475358,"byte_end":475403,"line_start":522,"line_end":522,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2127},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":476530,"byte_end":476536,"line_start":540,"line_end":540,"column_start":12,"column_end":18},"name":"invert","qualname":"<DynamicImage>::invert","value":"pub fn invert(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Invert the colors of this image.\n This method operates inplace.\n","sig":null,"attributes":[{"value":"/ Invert the colors of this image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":476444,"byte_end":476480,"line_start":538,"line_end":538,"column_start":5,"column_end":41}},{"value":"/ This method operates inplace.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":476485,"byte_end":476518,"line_start":539,"line_end":539,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2128},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":476900,"byte_end":476906,"line_start":548,"line_end":548,"column_start":12,"column_end":18},"name":"resize","qualname":"<DynamicImage>::resize","value":"pub fn resize(&Self, u32, u32, imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the bounds specified by ```nwidth``` and ```nheight```.\n","sig":null,"attributes":[{"value":"/ Resize this image using the specified filter algorithm.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":476623,"byte_end":476682,"line_start":544,"line_end":544,"column_start":5,"column_end":64}},{"value":"/ Returns a new image. The image's aspect ratio is preserved.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":476687,"byte_end":476750,"line_start":545,"line_end":545,"column_start":5,"column_end":68}},{"value":"/ The image is scaled to the maximum possible size that fits","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":476755,"byte_end":476817,"line_start":546,"line_end":546,"column_start":5,"column_end":67}},{"value":"/ within the bounds specified by ```nwidth``` and ```nheight```.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":476822,"byte_end":476888,"line_start":547,"line_end":547,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2129},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":477370,"byte_end":477382,"line_start":558,"line_end":558,"column_start":12,"column_end":24},"name":"resize_exact","qualname":"<DynamicImage>::resize_exact","value":"pub fn resize_exact(&Self, u32, u32, imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. Does not preserve aspect ratio.\n ```nwidth``` and ```nheight``` are the new image's dimensions\n","sig":null,"attributes":[{"value":"/ Resize this image using the specified filter algorithm.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":477168,"byte_end":477227,"line_start":555,"line_end":555,"column_start":5,"column_end":64}},{"value":"/ Returns a new image. Does not preserve aspect ratio.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":477232,"byte_end":477288,"line_start":556,"line_end":556,"column_start":5,"column_end":61}},{"value":"/ ```nwidth``` and ```nheight``` are the new image's dimensions","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":477293,"byte_end":477358,"line_start":557,"line_end":557,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2130},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":478073,"byte_end":478082,"line_start":575,"line_end":575,"column_start":12,"column_end":21},"name":"thumbnail","qualname":"<DynamicImage>::thumbnail","value":"pub fn thumbnail(&Self, u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Scale this image down to fit within a specific size.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the bounds specified by ```nwidth``` and ```nheight```.","sig":null,"attributes":[{"value":"/ Scale this image down to fit within a specific size.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":477598,"byte_end":477654,"line_start":567,"line_end":567,"column_start":5,"column_end":61}},{"value":"/ Returns a new image. The image's aspect ratio is preserved.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":477659,"byte_end":477722,"line_start":568,"line_end":568,"column_start":5,"column_end":68}},{"value":"/ The image is scaled to the maximum possible size that fits","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":477727,"byte_end":477789,"line_start":569,"line_end":569,"column_start":5,"column_end":67}},{"value":"/ within the bounds specified by ```nwidth``` and ```nheight```.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":477794,"byte_end":477860,"line_start":570,"line_end":570,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":477865,"byte_end":477868,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ This method uses a fast integer algorithm where each source","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":477873,"byte_end":477936,"line_start":572,"line_end":572,"column_start":5,"column_end":68}},{"value":"/ pixel contributes to exactly one target pixel.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":477941,"byte_end":477991,"line_start":573,"line_end":573,"column_start":5,"column_end":55}},{"value":"/ May give aliasing artifacts if new size is close to old size.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":477996,"byte_end":478061,"line_start":574,"line_end":574,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2131},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":478690,"byte_end":478705,"line_start":587,"line_end":587,"column_start":12,"column_end":27},"name":"thumbnail_exact","qualname":"<DynamicImage>::thumbnail_exact","value":"pub fn thumbnail_exact(&Self, u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Scale this image down to a specific size.\n Returns a new image. Does not preserve aspect ratio.\n ```nwidth``` and ```nheight``` are the new image's dimensions.\n This method uses a fast integer algorithm where each source\n pixel contributes to exactly one target pixel.\n May give aliasing artifacts if new size is close to old size.\n","sig":null,"attributes":[{"value":"/ Scale this image down to a specific size.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":478308,"byte_end":478353,"line_start":581,"line_end":581,"column_start":5,"column_end":50}},{"value":"/ Returns a new image. Does not preserve aspect ratio.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":478358,"byte_end":478414,"line_start":582,"line_end":582,"column_start":5,"column_end":61}},{"value":"/ ```nwidth``` and ```nheight``` are the new image's dimensions.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":478419,"byte_end":478485,"line_start":583,"line_end":583,"column_start":5,"column_end":71}},{"value":"/ This method uses a fast integer algorithm where each source","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":478490,"byte_end":478553,"line_start":584,"line_end":584,"column_start":5,"column_end":68}},{"value":"/ pixel contributes to exactly one target pixel.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":478558,"byte_end":478608,"line_start":585,"line_end":585,"column_start":5,"column_end":55}},{"value":"/ May give aliasing artifacts if new size is close to old size.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":478613,"byte_end":478678,"line_start":586,"line_end":586,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2132},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":479225,"byte_end":479239,"line_start":597,"line_end":597,"column_start":12,"column_end":26},"name":"resize_to_fill","qualname":"<DynamicImage>::resize_to_fill","value":"pub fn resize_to_fill(&Self, u32, u32, imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the larger (relative to aspect ratio) of the bounds\n specified by ```nwidth``` and ```nheight```, then cropped to\n fit within the other bound.\n","sig":null,"attributes":[{"value":"/ Resize this image using the specified filter algorithm.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":478847,"byte_end":478906,"line_start":591,"line_end":591,"column_start":5,"column_end":64}},{"value":"/ Returns a new image. The image's aspect ratio is preserved.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":478911,"byte_end":478974,"line_start":592,"line_end":592,"column_start":5,"column_end":68}},{"value":"/ The image is scaled to the maximum possible size that fits","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":478979,"byte_end":479041,"line_start":593,"line_end":593,"column_start":5,"column_end":67}},{"value":"/ within the larger (relative to aspect ratio) of the bounds","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":479046,"byte_end":479108,"line_start":594,"line_end":594,"column_start":5,"column_end":67}},{"value":"/ specified by ```nwidth``` and ```nheight```, then cropped to","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":479113,"byte_end":479177,"line_start":595,"line_end":595,"column_start":5,"column_end":69}},{"value":"/ fit within the other bound.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":479182,"byte_end":479213,"line_start":596,"line_end":596,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2133},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":480059,"byte_end":480063,"line_start":620,"line_end":620,"column_start":12,"column_end":16},"name":"blur","qualname":"<DynamicImage>::blur","value":"pub fn blur(&Self, f32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Performs a Gaussian blur on this image.\n ```sigma``` is a measure of how much to blur by.\n","sig":null,"attributes":[{"value":"/ Performs a Gaussian blur on this image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":479947,"byte_end":479990,"line_start":618,"line_end":618,"column_start":5,"column_end":48}},{"value":"/ ```sigma``` is a measure of how much to blur by.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":479995,"byte_end":480047,"line_start":619,"line_end":619,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2134},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":480441,"byte_end":480450,"line_start":629,"line_end":629,"column_start":12,"column_end":21},"name":"unsharpen","qualname":"<DynamicImage>::unsharpen","value":"pub fn unsharpen(&Self, f32, i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Performs an unsharpen mask on this image.\n ```sigma``` is the amount to blur the image by.\n ```threshold``` is a control of how much to sharpen.","sig":null,"attributes":[{"value":"/ Performs an unsharpen mask on this image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":480175,"byte_end":480220,"line_start":624,"line_end":624,"column_start":5,"column_end":50}},{"value":"/ ```sigma``` is the amount to blur the image by.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":480225,"byte_end":480276,"line_start":625,"line_end":625,"column_start":5,"column_end":56}},{"value":"/ ```threshold``` is a control of how much to sharpen.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":480281,"byte_end":480337,"line_start":626,"line_end":626,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":480342,"byte_end":480345,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ See <https://en.wikipedia.org/wiki/Unsharp_masking#Digital_unsharp_masking>","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":480350,"byte_end":480429,"line_start":628,"line_end":628,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":2135},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":480659,"byte_end":480668,"line_start":634,"line_end":634,"column_start":12,"column_end":21},"name":"filter3x3","qualname":"<DynamicImage>::filter3x3","value":"pub fn filter3x3(&Self, &[f32]) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Filters this image with the specified 3x3 kernel.\n","sig":null,"attributes":[{"value":"/ Filters this image with the specified 3x3 kernel.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":480594,"byte_end":480647,"line_start":633,"line_end":633,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2136},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":481078,"byte_end":481093,"line_start":645,"line_end":645,"column_start":12,"column_end":27},"name":"adjust_contrast","qualname":"<DynamicImage>::adjust_contrast","value":"pub fn adjust_contrast(&Self, f32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Adjust the contrast of this image.\n ```contrast``` is the amount to adjust the contrast by.\n Negative values decrease the contrast and positive values increase the contrast.\n","sig":null,"attributes":[{"value":"/ Adjust the contrast of this image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":480875,"byte_end":480913,"line_start":642,"line_end":642,"column_start":5,"column_end":43}},{"value":"/ ```contrast``` is the amount to adjust the contrast by.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":480918,"byte_end":480977,"line_start":643,"line_end":643,"column_start":5,"column_end":64}},{"value":"/ Negative values decrease the contrast and positive values increase the contrast.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":480982,"byte_end":481066,"line_start":644,"line_end":644,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":2137},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":481393,"byte_end":481401,"line_start":652,"line_end":652,"column_start":12,"column_end":20},"name":"brighten","qualname":"<DynamicImage>::brighten","value":"pub fn brighten(&Self, i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Brighten the pixels of this image.\n ```value``` is the amount to brighten each pixel by.\n Negative values decrease the brightness and positive values increase it.\n","sig":null,"attributes":[{"value":"/ Brighten the pixels of this image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":481201,"byte_end":481239,"line_start":649,"line_end":649,"column_start":5,"column_end":43}},{"value":"/ ```value``` is the amount to brighten each pixel by.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":481244,"byte_end":481300,"line_start":650,"line_end":650,"column_start":5,"column_end":61}},{"value":"/ Negative values decrease the brightness and positive values increase it.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":481305,"byte_end":481381,"line_start":651,"line_end":651,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2138},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":481749,"byte_end":481758,"line_start":660,"line_end":660,"column_start":12,"column_end":21},"name":"huerotate","qualname":"<DynamicImage>::huerotate","value":"pub fn huerotate(&Self, i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Hue rotate the supplied image.\n `value` is the degrees to rotate each pixel by.\n 0 and 360 do nothing, the rest rotates by the given degree value.\n just like the css webkit filter hue-rotate(180)\n","sig":null,"attributes":[{"value":"/ Hue rotate the supplied image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":481517,"byte_end":481551,"line_start":656,"line_end":656,"column_start":5,"column_end":39}},{"value":"/ `value` is the degrees to rotate each pixel by.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":481556,"byte_end":481607,"line_start":657,"line_end":657,"column_start":5,"column_end":56}},{"value":"/ 0 and 360 do nothing, the rest rotates by the given degree value.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":481612,"byte_end":481681,"line_start":658,"line_end":658,"column_start":5,"column_end":74}},{"value":"/ just like the css webkit filter hue-rotate(180)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":481686,"byte_end":481737,"line_start":659,"line_end":659,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2139},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":481917,"byte_end":481922,"line_start":665,"line_end":665,"column_start":12,"column_end":17},"name":"flipv","qualname":"<DynamicImage>::flipv","value":"pub fn flipv(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Flip this image vertically\n","sig":null,"attributes":[{"value":"/ Flip this image vertically","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":481875,"byte_end":481905,"line_start":664,"line_end":664,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2140},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":482068,"byte_end":482073,"line_start":670,"line_end":670,"column_start":12,"column_end":17},"name":"fliph","qualname":"<DynamicImage>::fliph","value":"pub fn fliph(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Flip this image horizontally\n","sig":null,"attributes":[{"value":"/ Flip this image horizontally","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":482024,"byte_end":482056,"line_start":669,"line_end":669,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2141},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":482232,"byte_end":482240,"line_start":675,"line_end":675,"column_start":12,"column_end":20},"name":"rotate90","qualname":"<DynamicImage>::rotate90","value":"pub fn rotate90(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 90 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate this image 90 degrees clockwise.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":482177,"byte_end":482220,"line_start":674,"line_end":674,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2142},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":482393,"byte_end":482402,"line_start":680,"line_end":680,"column_start":12,"column_end":21},"name":"rotate180","qualname":"<DynamicImage>::rotate180","value":"pub fn rotate180(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 180 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate this image 180 degrees clockwise.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":482337,"byte_end":482381,"line_start":679,"line_end":679,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2143},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":482556,"byte_end":482565,"line_start":685,"line_end":685,"column_start":12,"column_end":21},"name":"rotate270","qualname":"<DynamicImage>::rotate270","value":"pub fn rotate270(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 270 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate this image 270 degrees clockwise.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":482500,"byte_end":482544,"line_start":684,"line_end":684,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2144},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":482720,"byte_end":482728,"line_start":690,"line_end":690,"column_start":12,"column_end":20},"name":"write_to","qualname":"<DynamicImage>::write_to","value":"pub fn write_to<W: Write, F: Into<ImageOutputFormat>>(&Self, &mut W, F)\n-> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode this image and write it to ```w```\n","sig":null,"attributes":[{"value":"/ Encode this image and write it to ```w```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":482663,"byte_end":482708,"line_start":689,"line_end":689,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2147},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":486824,"byte_end":486828,"line_start":799,"line_end":799,"column_start":12,"column_end":16},"name":"save","qualname":"<DynamicImage>::save","value":"pub fn save<Q>(&Self, Q) -> ImageResult<()> where Q: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the path specified.","sig":null,"attributes":[{"value":"/ Saves the buffer to a file at the path specified.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":486690,"byte_end":486743,"line_start":796,"line_end":796,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":486748,"byte_end":486751,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ The image format is derived from the file extension.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":486756,"byte_end":486812,"line_start":798,"line_end":798,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2149},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":487200,"byte_end":487216,"line_start":813,"line_end":813,"column_start":12,"column_end":28},"name":"save_with_format","qualname":"<DynamicImage>::save_with_format","value":"pub fn save_with_format<Q>(&Self, Q, ImageFormat) -> ImageResult<()> where\nQ: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the specified path in\n the specified format.","sig":null,"attributes":[{"value":"/ Saves the buffer to a file at the specified path in","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":486993,"byte_end":487048,"line_start":808,"line_end":808,"column_start":5,"column_end":60}},{"value":"/ the specified format.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":487053,"byte_end":487078,"line_start":809,"line_end":809,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":487083,"byte_end":487086,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ See [`save_buffer_with_format`](fn.save_buffer_with_format.html) for","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":487091,"byte_end":487163,"line_start":811,"line_end":811,"column_start":5,"column_end":77}},{"value":"/ supported types.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":487168,"byte_end":487188,"line_start":812,"line_end":812,"column_start":5,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2169},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":494078,"byte_end":494082,"line_start":991,"line_end":991,"column_start":8,"column_end":12},"name":"open","qualname":"::dynimage::open","value":"pub fn open<P>(P) -> ImageResult<DynamicImage> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Open the image located at the path specified.\n The image's format is determined from the path's file extension.","sig":null,"attributes":[{"value":"/ Open the image located at the path specified.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":493776,"byte_end":493825,"line_start":984,"line_end":984,"column_start":1,"column_end":50}},{"value":"/ The image's format is determined from the path's file extension.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":493826,"byte_end":493894,"line_start":985,"line_end":985,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":493895,"byte_end":493898,"line_start":986,"line_end":986,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses, including guessing the format based on the file's","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":493899,"byte_end":493995,"line_start":987,"line_end":987,"column_start":1,"column_end":97}},{"value":"/ content before its path.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":493996,"byte_end":494024,"line_start":988,"line_end":988,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":494025,"byte_end":494028,"line_start":989,"line_end":989,"column_start":1,"column_end":4}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":494029,"byte_end":494070,"line_start":990,"line_end":990,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":2171},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":494637,"byte_end":494653,"line_start":1006,"line_end":1006,"column_start":8,"column_end":24},"name":"image_dimensions","qualname":"::dynimage::image_dimensions","value":"pub fn image_dimensions<P>(P) -> ImageResult<(u32, u32)> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Read the dimensions of the image located at the specified path.\n This is faster than fully loading the image and then getting its dimensions.","sig":null,"attributes":[{"value":"/ Read the dimensions of the image located at the specified path.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":494272,"byte_end":494339,"line_start":999,"line_end":999,"column_start":1,"column_end":68}},{"value":"/ This is faster than fully loading the image and then getting its dimensions.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":494340,"byte_end":494420,"line_start":1000,"line_end":1000,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":494421,"byte_end":494424,"line_start":1001,"line_end":1001,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses, including guessing the format based on the file's","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":494425,"byte_end":494521,"line_start":1002,"line_end":1002,"column_start":1,"column_end":97}},{"value":"/ content before its path or manually supplying the format.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":494522,"byte_end":494583,"line_start":1003,"line_end":1003,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":494584,"byte_end":494587,"line_start":1004,"line_end":1004,"column_start":1,"column_end":4}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":494588,"byte_end":494629,"line_start":1005,"line_end":1005,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":2173},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":495228,"byte_end":495239,"line_start":1021,"line_end":1021,"column_start":8,"column_end":19},"name":"save_buffer","qualname":"::dynimage::save_buffer","value":"pub fn save_buffer<P>(P, &[u8], u32, u32, color::ColorType) -> ImageResult<()>\nwhere P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Saves the supplied buffer to a file at the path specified.","sig":null,"attributes":[{"value":"/ Saves the supplied buffer to a file at the path specified.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":494853,"byte_end":494915,"line_start":1014,"line_end":1014,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":494916,"byte_end":494919,"line_start":1015,"line_end":1015,"column_start":1,"column_end":4}},{"value":"/ The image format is derived from the file extension. The buffer is assumed to have","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":494920,"byte_end":495006,"line_start":1016,"line_end":1016,"column_start":1,"column_end":87}},{"value":"/ the correct format according to the specified color type.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":495007,"byte_end":495068,"line_start":1017,"line_end":1017,"column_start":1,"column_end":62}},{"value":"/ This will lead to corrupted files if the buffer contains malformed data. Currently only","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":495070,"byte_end":495161,"line_start":1019,"line_end":1019,"column_start":1,"column_end":92}},{"value":"/ jpeg, png, ico, pnm, bmp and tiff files are supported.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":495162,"byte_end":495220,"line_start":1020,"line_end":1020,"column_start":1,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":2175},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":495893,"byte_end":495916,"line_start":1043,"line_end":1043,"column_start":8,"column_end":31},"name":"save_buffer_with_format","qualname":"::dynimage::save_buffer_with_format","value":"pub fn save_buffer_with_format<P>(P, &[u8], u32, u32, color::ColorType,\n                                  ImageFormat) -> ImageResult<()> where\nP: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Saves the supplied buffer to a file at the path specified\n in the specified format.","sig":null,"attributes":[{"value":"/ Saves the supplied buffer to a file at the path specified","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":495545,"byte_end":495606,"line_start":1035,"line_end":1035,"column_start":1,"column_end":62}},{"value":"/ in the specified format.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":495607,"byte_end":495635,"line_start":1036,"line_end":1036,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":495636,"byte_end":495639,"line_start":1037,"line_end":1037,"column_start":1,"column_end":4}},{"value":"/ The buffer is assumed to have the correct format according","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":495640,"byte_end":495702,"line_start":1038,"line_end":1038,"column_start":1,"column_end":63}},{"value":"/ to the specified color type.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":495703,"byte_end":495735,"line_start":1039,"line_end":1039,"column_start":1,"column_end":33}},{"value":"/ This will lead to corrupted files if the buffer contains","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":495736,"byte_end":495796,"line_start":1040,"line_end":1040,"column_start":1,"column_end":61}},{"value":"/ malformed data. Currently only jpeg, png, ico, bmp and","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":495797,"byte_end":495855,"line_start":1041,"line_end":1041,"column_start":1,"column_end":59}},{"value":"/ tiff files are supported.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":495856,"byte_end":495885,"line_start":1042,"line_end":1042,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":2177},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":496479,"byte_end":496495,"line_start":1066,"line_end":1066,"column_start":8,"column_end":24},"name":"load_from_memory","qualname":"::dynimage::load_from_memory","value":"pub fn load_from_memory(&[u8]) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a byte slice","sig":null,"attributes":[{"value":"/ Create a new image from a byte slice","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":496235,"byte_end":496275,"line_start":1058,"line_end":1058,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":496276,"byte_end":496279,"line_start":1059,"line_end":1059,"column_start":1,"column_end":4}},{"value":"/ Makes an educated guess about the image format.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":496280,"byte_end":496331,"line_start":1060,"line_end":1060,"column_start":1,"column_end":52}},{"value":"/ TGA is not supported by this function.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":496332,"byte_end":496374,"line_start":1061,"line_end":1061,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":496375,"byte_end":496378,"line_start":1062,"line_end":1062,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":496379,"byte_end":496425,"line_start":1063,"line_end":1063,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":496426,"byte_end":496429,"line_start":1064,"line_end":1064,"column_start":1,"column_end":4}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":496430,"byte_end":496471,"line_start":1065,"line_end":1065,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":2178},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":496977,"byte_end":497005,"line_start":1081,"line_end":1081,"column_start":8,"column_end":36},"name":"load_from_memory_with_format","qualname":"::dynimage::load_from_memory_with_format","value":"pub fn load_from_memory_with_format(&[u8], ImageFormat)\n-> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a byte slice","sig":null,"attributes":[{"value":"/ Create a new image from a byte slice","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":496650,"byte_end":496690,"line_start":1071,"line_end":1071,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":496691,"byte_end":496694,"line_start":1072,"line_end":1072,"column_start":1,"column_end":4}},{"value":"/ This is just a simple wrapper that constructs an `std::io::Cursor` around the buffer and then","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":496695,"byte_end":496792,"line_start":1073,"line_end":1073,"column_start":1,"column_end":98}},{"value":"/ calls `load` with that reader.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":496793,"byte_end":496827,"line_start":1074,"line_end":1074,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":496828,"byte_end":496831,"line_start":1075,"line_end":1075,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":496832,"byte_end":496878,"line_start":1076,"line_end":1076,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":496879,"byte_end":496882,"line_start":1077,"line_end":1077,"column_start":1,"column_end":4}},{"value":"/ [`load`]: fn.load.html","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":496883,"byte_end":496909,"line_start":1078,"line_end":1078,"column_start":1,"column_end":27}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":496910,"byte_end":496951,"line_start":1079,"line_end":1079,"column_start":1,"column_end":42}},{"value":"inline(always)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":496952,"byte_end":496969,"line_start":1080,"line_end":1080,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3772},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":501728,"byte_end":501731,"line_start":25,"line_end":25,"column_start":5,"column_end":8},"name":"Png","qualname":"::image::ImageFormat::Png","value":"ImageFormat::Png","parent":{"krate":0,"index":3771},"children":[],"decl_id":null,"docs":" An Image in PNG Format\n","sig":null,"attributes":[{"value":"/ An Image in PNG Format","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":501697,"byte_end":501723,"line_start":24,"line_end":24,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3774},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":501770,"byte_end":501774,"line_start":28,"line_end":28,"column_start":5,"column_end":9},"name":"Jpeg","qualname":"::image::ImageFormat::Jpeg","value":"ImageFormat::Jpeg","parent":{"krate":0,"index":3771},"children":[],"decl_id":null,"docs":" An Image in JPEG Format\n","sig":null,"attributes":[{"value":"/ An Image in JPEG Format","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":501738,"byte_end":501765,"line_start":27,"line_end":27,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3776},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":501812,"byte_end":501815,"line_start":31,"line_end":31,"column_start":5,"column_end":8},"name":"Gif","qualname":"::image::ImageFormat::Gif","value":"ImageFormat::Gif","parent":{"krate":0,"index":3771},"children":[],"decl_id":null,"docs":" An Image in GIF Format\n","sig":null,"attributes":[{"value":"/ An Image in GIF Format","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":501781,"byte_end":501807,"line_start":30,"line_end":30,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3778},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":501854,"byte_end":501858,"line_start":34,"line_end":34,"column_start":5,"column_end":9},"name":"WebP","qualname":"::image::ImageFormat::WebP","value":"ImageFormat::WebP","parent":{"krate":0,"index":3771},"children":[],"decl_id":null,"docs":" An Image in WEBP Format\n","sig":null,"attributes":[{"value":"/ An Image in WEBP Format","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":501822,"byte_end":501849,"line_start":33,"line_end":33,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3780},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":501904,"byte_end":501907,"line_start":37,"line_end":37,"column_start":5,"column_end":8},"name":"Pnm","qualname":"::image::ImageFormat::Pnm","value":"ImageFormat::Pnm","parent":{"krate":0,"index":3771},"children":[],"decl_id":null,"docs":" An Image in general PNM Format\n","sig":null,"attributes":[{"value":"/ An Image in general PNM Format","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":501865,"byte_end":501899,"line_start":36,"line_end":36,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3782},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":501946,"byte_end":501950,"line_start":40,"line_end":40,"column_start":5,"column_end":9},"name":"Tiff","qualname":"::image::ImageFormat::Tiff","value":"ImageFormat::Tiff","parent":{"krate":0,"index":3771},"children":[],"decl_id":null,"docs":" An Image in TIFF Format\n","sig":null,"attributes":[{"value":"/ An Image in TIFF Format","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":501914,"byte_end":501941,"line_start":39,"line_end":39,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3784},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":501988,"byte_end":501991,"line_start":43,"line_end":43,"column_start":5,"column_end":8},"name":"Tga","qualname":"::image::ImageFormat::Tga","value":"ImageFormat::Tga","parent":{"krate":0,"index":3771},"children":[],"decl_id":null,"docs":" An Image in TGA Format\n","sig":null,"attributes":[{"value":"/ An Image in TGA Format","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":501957,"byte_end":501983,"line_start":42,"line_end":42,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3786},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":502029,"byte_end":502032,"line_start":46,"line_end":46,"column_start":5,"column_end":8},"name":"Dds","qualname":"::image::ImageFormat::Dds","value":"ImageFormat::Dds","parent":{"krate":0,"index":3771},"children":[],"decl_id":null,"docs":" An Image in DDS Format\n","sig":null,"attributes":[{"value":"/ An Image in DDS Format","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":501998,"byte_end":502024,"line_start":45,"line_end":45,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3788},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":502070,"byte_end":502073,"line_start":49,"line_end":49,"column_start":5,"column_end":8},"name":"Bmp","qualname":"::image::ImageFormat::Bmp","value":"ImageFormat::Bmp","parent":{"krate":0,"index":3771},"children":[],"decl_id":null,"docs":" An Image in BMP Format\n","sig":null,"attributes":[{"value":"/ An Image in BMP Format","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":502039,"byte_end":502065,"line_start":48,"line_end":48,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3790},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":502111,"byte_end":502114,"line_start":52,"line_end":52,"column_start":5,"column_end":8},"name":"Ico","qualname":"::image::ImageFormat::Ico","value":"ImageFormat::Ico","parent":{"krate":0,"index":3771},"children":[],"decl_id":null,"docs":" An Image in ICO Format\n","sig":null,"attributes":[{"value":"/ An Image in ICO Format","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":502080,"byte_end":502106,"line_start":51,"line_end":51,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3792},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":502161,"byte_end":502164,"line_start":55,"line_end":55,"column_start":5,"column_end":8},"name":"Hdr","qualname":"::image::ImageFormat::Hdr","value":"ImageFormat::Hdr","parent":{"krate":0,"index":3771},"children":[],"decl_id":null,"docs":" An Image in Radiance HDR Format\n","sig":null,"attributes":[{"value":"/ An Image in Radiance HDR Format","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":502121,"byte_end":502156,"line_start":54,"line_end":54,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3794},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":502207,"byte_end":502215,"line_start":58,"line_end":58,"column_start":5,"column_end":13},"name":"Farbfeld","qualname":"::image::ImageFormat::Farbfeld","value":"ImageFormat::Farbfeld","parent":{"krate":0,"index":3771},"children":[],"decl_id":null,"docs":" An Image in farbfeld Format\n","sig":null,"attributes":[{"value":"/ An Image in farbfeld Format","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":502171,"byte_end":502202,"line_start":57,"line_end":57,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3796},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":502255,"byte_end":502259,"line_start":61,"line_end":61,"column_start":5,"column_end":9},"name":"Avif","qualname":"::image::ImageFormat::Avif","value":"ImageFormat::Avif","parent":{"krate":0,"index":3771},"children":[],"decl_id":null,"docs":" An Image in AVIF format.\n","sig":null,"attributes":[{"value":"/ An Image in AVIF format.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":502222,"byte_end":502250,"line_start":60,"line_end":60,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3798},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":502285,"byte_end":502300,"line_start":64,"line_end":64,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::image::ImageFormat::__NonExhaustive","value":"ImageFormat::__NonExhaustive(crate::utils::NonExhaustiveMarker)","parent":{"krate":0,"index":3771},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3771},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":501679,"byte_end":501690,"line_start":23,"line_end":23,"column_start":10,"column_end":21},"name":"ImageFormat","qualname":"::image::ImageFormat","value":"pub enum ImageFormat {\n\n    /// An Image in PNG Format\n    Png,\n\n    /// An Image in JPEG Format\n    Jpeg,\n\n    /// An Image in GIF Format\n    Gif,\n\n    /// An Image in WEBP Format\n    WebP,\n\n    /// An Image in general PNM Format\n    Pnm,\n\n    /// An Image in TIFF Format\n    Tiff,\n\n    /// An Image in TGA Format\n    Tga,\n\n    /// An Image in DDS Format\n    Dds,\n\n    /// An Image in BMP Format\n    Bmp,\n\n    /// An Image in ICO Format\n    Ico,\n\n    /// An Image in Radiance HDR Format\n    Hdr,\n\n    /// An Image in farbfeld Format\n    Farbfeld,\n\n    /// An Image in AVIF format.\n    Avif,\n\n    #[doc(hidden)]\n    __NonExhaustive(crate::utils::NonExhaustiveMarker),\n}","parent":null,"children":[{"krate":0,"index":3772},{"krate":0,"index":3774},{"krate":0,"index":3776},{"krate":0,"index":3778},{"krate":0,"index":3780},{"krate":0,"index":3782},{"krate":0,"index":3784},{"krate":0,"index":3786},{"krate":0,"index":3788},{"krate":0,"index":3790},{"krate":0,"index":3792},{"krate":0,"index":3794},{"krate":0,"index":3796},{"krate":0,"index":3798}],"decl_id":null,"docs":" An enumeration of supported image formats.\n Not all formats support both encoding and decoding.\n","sig":null,"attributes":[{"value":"/ An enumeration of supported image formats.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":501516,"byte_end":501562,"line_start":20,"line_end":20,"column_start":1,"column_end":47}},{"value":"/ Not all formats support both encoding and decoding.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":501563,"byte_end":501618,"line_start":21,"line_end":21,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2204},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":502442,"byte_end":502451,"line_start":69,"line_end":69,"column_start":12,"column_end":21},"name":"from_path","qualname":"<ImageFormat>::from_path","value":"pub fn from_path<P>(P) -> ImageResult<Self> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Return the image format specified by the path's file extension.\n","sig":null,"attributes":[{"value":"/ Return the image format specified by the path's file extension.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":502363,"byte_end":502430,"line_start":68,"line_end":68,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2206},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":503302,"byte_end":503316,"line_start":84,"line_end":84,"column_start":12,"column_end":26},"name":"extensions_str","qualname":"<ImageFormat>::extensions_str","value":"pub fn extensions_str(Self) -> &'static [&'static str]","parent":null,"children":[],"decl_id":null,"docs":" Return a list of applicable extensions for this format.","sig":null,"attributes":[{"value":"/ Return a list of applicable extensions for this format.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":502712,"byte_end":502771,"line_start":75,"line_end":75,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":502776,"byte_end":502779,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ All currently recognized image formats specify at least on extension but for future","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":502784,"byte_end":502871,"line_start":77,"line_end":77,"column_start":5,"column_end":92}},{"value":"/ compatibility you should not rely on this fact. The list may be empty if the format has no","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":502876,"byte_end":502970,"line_start":78,"line_end":78,"column_start":5,"column_end":99}},{"value":"/ recognized file representation, for example in case it is used as a purely transient memory","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":502975,"byte_end":503070,"line_start":79,"line_end":79,"column_start":5,"column_end":100}},{"value":"/ format.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":503075,"byte_end":503086,"line_start":80,"line_end":80,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":503091,"byte_end":503094,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ The method name `extensions` remains reserved for introducing another method in the future","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":503099,"byte_end":503193,"line_start":82,"line_end":82,"column_start":5,"column_end":99}},{"value":"/ that yields a slice of `OsStr` which is blocked by several features of const evaluation.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":503198,"byte_end":503290,"line_start":83,"line_end":83,"column_start":5,"column_end":97}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3817},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":504366,"byte_end":504369,"line_start":110,"line_end":110,"column_start":5,"column_end":8},"name":"Png","qualname":"::image::ImageOutputFormat::Png","value":"ImageOutputFormat::Png","parent":{"krate":0,"index":3816},"children":[],"decl_id":null,"docs":" An Image in PNG Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"png\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":504307,"byte_end":504330,"line_start":108,"line_end":108,"column_start":5,"column_end":28}},{"value":"/ An Image in PNG Format","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":504335,"byte_end":504361,"line_start":109,"line_end":109,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3819},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":504460,"byte_end":504464,"line_start":114,"line_end":114,"column_start":5,"column_end":9},"name":"Jpeg","qualname":"::image::ImageOutputFormat::Jpeg","value":"ImageOutputFormat::Jpeg(u8)","parent":{"krate":0,"index":3816},"children":[],"decl_id":null,"docs":" An Image in JPEG Format with specified quality\n","sig":null,"attributes":[{"value":"cfg(feature = \"jpeg\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":504376,"byte_end":504400,"line_start":112,"line_end":112,"column_start":5,"column_end":29}},{"value":"/ An Image in JPEG Format with specified quality","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":504405,"byte_end":504455,"line_start":113,"line_end":113,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3822},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":504627,"byte_end":504630,"line_start":122,"line_end":122,"column_start":5,"column_end":8},"name":"Gif","qualname":"::image::ImageOutputFormat::Gif","value":"ImageOutputFormat::Gif","parent":{"krate":0,"index":3816},"children":[],"decl_id":null,"docs":" An Image in GIF Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"gif\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":504568,"byte_end":504591,"line_start":120,"line_end":120,"column_start":5,"column_end":28}},{"value":"/ An Image in GIF Format","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":504596,"byte_end":504622,"line_start":121,"line_end":121,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3824},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":504765,"byte_end":504768,"line_start":130,"line_end":130,"column_start":5,"column_end":8},"name":"Bmp","qualname":"::image::ImageOutputFormat::Bmp","value":"ImageOutputFormat::Bmp","parent":{"krate":0,"index":3816},"children":[],"decl_id":null,"docs":" An Image in BMP Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"bmp\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":504706,"byte_end":504729,"line_start":128,"line_end":128,"column_start":5,"column_end":28}},{"value":"/ An Image in BMP Format","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":504734,"byte_end":504760,"line_start":129,"line_end":129,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3826},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":505245,"byte_end":505256,"line_start":147,"line_end":147,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::image::ImageOutputFormat::Unsupported","value":"ImageOutputFormat::Unsupported(String)","parent":{"krate":0,"index":3816},"children":[],"decl_id":null,"docs":" A value for signalling an error: An unsupported format was requested\n","sig":null,"attributes":[{"value":"/ A value for signalling an error: An unsupported format was requested","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":505000,"byte_end":505072,"line_start":144,"line_end":144,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3829},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":505290,"byte_end":505305,"line_start":150,"line_end":150,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::image::ImageOutputFormat::__NonExhaustive","value":"ImageOutputFormat::__NonExhaustive(crate::utils::NonExhaustiveMarker)","parent":{"krate":0,"index":3816},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3816},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":504283,"byte_end":504300,"line_start":107,"line_end":107,"column_start":10,"column_end":27},"name":"ImageOutputFormat","qualname":"::image::ImageOutputFormat","value":"pub enum ImageOutputFormat {\n\n    #[cfg(feature = \"png\")]\n    /// An Image in PNG Format\n    Png,\n\n    #[cfg(feature = \"jpeg\")]\n    /// An Image in JPEG Format with specified quality\n    Jpeg(u8),\n\n    #[cfg(feature = \"gif\")]\n    /// An Image in GIF Format\n    Gif,\n\n    #[cfg(feature = \"bmp\")]\n    /// An Image in BMP Format\n    Bmp,\n\n    /// A value for signalling an error: An unsupported format was requested\n    Unsupported(String),\n\n    #[doc(hidden)]\n    __NonExhaustive(crate::utils::NonExhaustiveMarker),\n}","parent":null,"children":[{"krate":0,"index":3817},{"krate":0,"index":3819},{"krate":0,"index":3822},{"krate":0,"index":3824},{"krate":0,"index":3826},{"krate":0,"index":3829}],"decl_id":null,"docs":" An enumeration of supported image formats for encoding.\n","sig":null,"attributes":[{"value":"/ An enumeration of supported image formats for encoding.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":504175,"byte_end":504234,"line_start":105,"line_end":105,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":3843},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":514616,"byte_end":514624,"line_start":371,"line_end":371,"column_start":12,"column_end":20},"name":"Progress","qualname":"::image::Progress","value":"Progress {  }","parent":null,"children":[{"krate":0,"index":3844},{"krate":0,"index":3845}],"decl_id":null,"docs":" Represents the progress of an image operation.","sig":null,"attributes":[{"value":"/ Represents the progress of an image operation.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":514212,"byte_end":514262,"line_start":365,"line_end":365,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":514263,"byte_end":514266,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ Note that this is not necessarily accurate and no change to the values passed to the progress","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":514267,"byte_end":514364,"line_start":367,"line_end":367,"column_start":1,"column_end":98}},{"value":"/ function during decoding will be considered breaking. A decoder could in theory report the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":514365,"byte_end":514459,"line_start":368,"line_end":368,"column_start":1,"column_end":95}},{"value":"/ progress `(0, 0)` if progress is unknown, without violating the interface contract of the type.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":514460,"byte_end":514559,"line_start":369,"line_end":369,"column_start":1,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":2232},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":514732,"byte_end":514739,"line_start":378,"line_end":378,"column_start":12,"column_end":19},"name":"current","qualname":"<Progress>::current","value":"pub fn current(Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" A measure of completed decoding.\n","sig":null,"attributes":[{"value":"/ A measure of completed decoding.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":514684,"byte_end":514720,"line_start":377,"line_end":377,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2233},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":514912,"byte_end":514917,"line_start":385,"line_end":385,"column_start":12,"column_end":17},"name":"total","qualname":"<Progress>::total","value":"pub fn total(Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" A measure of all necessary decoding work.","sig":null,"attributes":[{"value":"/ A measure of all necessary decoding work.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":514787,"byte_end":514832,"line_start":382,"line_end":382,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":514837,"byte_end":514840,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This is in general greater or equal than `current`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":514845,"byte_end":514900,"line_start":384,"line_end":384,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2234},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":515027,"byte_end":515036,"line_start":390,"line_end":390,"column_start":12,"column_end":21},"name":"remaining","qualname":"<Progress>::remaining","value":"pub fn remaining(Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Calculate a measure for remaining decoding work.\n","sig":null,"attributes":[{"value":"/ Calculate a measure for remaining decoding work.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":514963,"byte_end":515015,"line_start":389,"line_end":389,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":2235},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":515165,"byte_end":515177,"line_start":396,"line_end":396,"column_start":11,"column_end":23},"name":"ImageDecoder","qualname":"::image::ImageDecoder","value":"ImageDecoder<'a>: Sized","parent":null,"children":[{"krate":0,"index":2237},{"krate":0,"index":2238},{"krate":0,"index":2239},{"krate":0,"index":2240},{"krate":0,"index":2241},{"krate":0,"index":2242},{"krate":0,"index":2243},{"krate":0,"index":2244},{"krate":0,"index":2246}],"decl_id":null,"docs":" The trait that all decoders implement\n","sig":null,"attributes":[{"value":"/ The trait that all decoders implement","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":515113,"byte_end":515154,"line_start":395,"line_end":395,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":2237},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":515254,"byte_end":515260,"line_start":398,"line_end":398,"column_start":10,"column_end":16},"name":"Reader","qualname":"::image::ImageDecoder::Reader","value":"type Reader: Read + 'a;","parent":{"krate":0,"index":2235},"children":[],"decl_id":null,"docs":" The type of reader produced by `into_reader`.\n","sig":null,"attributes":[{"value":"/ The type of reader produced by `into_reader`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":515195,"byte_end":515244,"line_start":397,"line_end":397,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2238},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":515350,"byte_end":515360,"line_start":401,"line_end":401,"column_start":8,"column_end":18},"name":"dimensions","qualname":"::image::ImageDecoder::dimensions","value":"pub fn dimensions(&Self) -> (u32, u32)","parent":{"krate":0,"index":2235},"children":[],"decl_id":null,"docs":" Returns a tuple containing the width and height of the image\n","sig":null,"attributes":[{"value":"/ Returns a tuple containing the width and height of the image","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":515278,"byte_end":515342,"line_start":400,"line_end":400,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2239},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":515465,"byte_end":515475,"line_start":404,"line_end":404,"column_start":8,"column_end":18},"name":"color_type","qualname":"::image::ImageDecoder::color_type","value":"pub fn color_type(&Self) -> ColorType","parent":{"krate":0,"index":2235},"children":[],"decl_id":null,"docs":" Returns the color type of the image data produced by this decoder\n","sig":null,"attributes":[{"value":"/ Returns the color type of the image data produced by this decoder","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":515388,"byte_end":515457,"line_start":403,"line_end":403,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2240},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":515569,"byte_end":515588,"line_start":407,"line_end":407,"column_start":8,"column_end":27},"name":"original_color_type","qualname":"::image::ImageDecoder::original_color_type","value":"pub fn original_color_type(&Self) -> ExtendedColorType","parent":{"krate":0,"index":2235},"children":[],"decl_id":null,"docs":" Retuns the color type of the image file before decoding\n","sig":null,"attributes":[{"value":"/ Retuns the color type of the image file before decoding","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":515502,"byte_end":515561,"line_start":406,"line_end":406,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2241},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":515929,"byte_end":515940,"line_start":414,"line_end":414,"column_start":8,"column_end":19},"name":"into_reader","qualname":"::image::ImageDecoder::into_reader","value":"pub fn into_reader(Self) -> ImageResult<Self::Reader>","parent":{"krate":0,"index":2235},"children":[],"decl_id":null,"docs":" Returns a reader that can be used to obtain the bytes of the image. For the best\n performance, always try to read at least `scanline_bytes` from the reader at a time. Reading\n fewer bytes will cause the reader to perform internal buffering.\n","sig":null,"attributes":[{"value":"/ Returns a reader that can be used to obtain the bytes of the image. For the best","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":515663,"byte_end":515747,"line_start":411,"line_end":411,"column_start":5,"column_end":89}},{"value":"/ performance, always try to read at least `scanline_bytes` from the reader at a time. Reading","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":515752,"byte_end":515848,"line_start":412,"line_end":412,"column_start":5,"column_end":101}},{"value":"/ fewer bytes will cause the reader to perform internal buffering.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":515853,"byte_end":515921,"line_start":413,"line_end":413,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2242},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":516327,"byte_end":516338,"line_start":422,"line_end":422,"column_start":8,"column_end":19},"name":"total_bytes","qualname":"::image::ImageDecoder::total_bytes","value":"pub fn total_bytes(&Self) -> u64","parent":{"krate":0,"index":2235},"children":[],"decl_id":null,"docs":" Returns the total number of bytes in the decoded image.","sig":null,"attributes":[{"value":"/ Returns the total number of bytes in the decoded image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":515982,"byte_end":516041,"line_start":416,"line_end":416,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":516046,"byte_end":516049,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ This is the size of the buffer that must be passed to `read_image` or","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":516054,"byte_end":516127,"line_start":418,"line_end":418,"column_start":5,"column_end":78}},{"value":"/ `read_image_with_progress`. The returned value may exceed usize::MAX, in","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":516132,"byte_end":516208,"line_start":419,"line_end":419,"column_start":5,"column_end":81}},{"value":"/ which case it isn't actually possible to construct a buffer to decode all the image data","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":516213,"byte_end":516305,"line_start":420,"line_end":420,"column_start":5,"column_end":97}},{"value":"/ into.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":516310,"byte_end":516319,"line_start":421,"line_end":421,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2243},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":516675,"byte_end":516689,"line_start":429,"line_end":429,"column_start":8,"column_end":22},"name":"scanline_bytes","qualname":"::image::ImageDecoder::scanline_bytes","value":"pub fn scanline_bytes(&Self) -> u64","parent":{"krate":0,"index":2235},"children":[],"decl_id":null,"docs":" Returns the minimum number of bytes that can be efficiently read from this decoder. This may\n be as few as 1 or as many as `total_bytes()`.\n","sig":null,"attributes":[{"value":"/ Returns the minimum number of bytes that can be efficiently read from this decoder. This may","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":516517,"byte_end":516613,"line_start":427,"line_end":427,"column_start":5,"column_end":101}},{"value":"/ be as few as 1 or as many as `total_bytes()`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":516618,"byte_end":516667,"line_start":428,"line_end":428,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2244},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":517578,"byte_end":517588,"line_start":453,"line_end":453,"column_start":8,"column_end":18},"name":"read_image","qualname":"::image::ImageDecoder::read_image","value":"pub fn read_image(Self, &mut [u8]) -> ImageResult<()>","parent":{"krate":0,"index":2235},"children":[],"decl_id":null,"docs":" Returns all the bytes in the image.","sig":null,"attributes":[{"value":"/ Returns all the bytes in the image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":516744,"byte_end":516783,"line_start":433,"line_end":433,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":516788,"byte_end":516791,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ This function takes a slice of bytes and writes the pixel data of the image into it.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":516796,"byte_end":516884,"line_start":435,"line_end":435,"column_start":5,"column_end":93}},{"value":"/ Although not required, for certain color types callers may want to pass buffers which are","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":516889,"byte_end":516982,"line_start":436,"line_end":436,"column_start":5,"column_end":98}},{"value":"/ aligned to 2 or 4 byte boundaries to the slice can be cast to a [u16] or [u32]. To accommodate","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":516987,"byte_end":517085,"line_start":437,"line_end":437,"column_start":5,"column_end":103}},{"value":"/ such casts, the returned contents will always be in native endian.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":517090,"byte_end":517160,"line_start":438,"line_end":438,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":517165,"byte_end":517168,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":517173,"byte_end":517185,"line_start":440,"line_end":440,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":517190,"byte_end":517193,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ This function panics if buf.len() != self.total_bytes().","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":517198,"byte_end":517258,"line_start":442,"line_end":442,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":517263,"byte_end":517266,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":517271,"byte_end":517285,"line_start":444,"line_end":444,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":517290,"byte_end":517293,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ ```no_build","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":517298,"byte_end":517313,"line_start":446,"line_end":446,"column_start":5,"column_end":20}},{"value":"/ use zerocopy::{AsBytes, FromBytes};","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":517318,"byte_end":517357,"line_start":447,"line_end":447,"column_start":5,"column_end":44}},{"value":"/ fn read_16bit_image(decoder: impl ImageDecoder) -> Vec<16> {","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":517362,"byte_end":517426,"line_start":448,"line_end":448,"column_start":5,"column_end":69}},{"value":"/     let mut buf: Vec<u16> = vec![0; decoder.total_bytes()/2];","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":517431,"byte_end":517496,"line_start":449,"line_end":449,"column_start":5,"column_end":70}},{"value":"/     decoder.read_image(buf.as_bytes());","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":517501,"byte_end":517544,"line_start":450,"line_end":450,"column_start":5,"column_end":48}},{"value":"/     buf","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":517549,"byte_end":517560,"line_start":451,"line_end":451,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":517565,"byte_end":517570,"line_start":452,"line_end":452,"column_start":5,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":2246},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":517816,"byte_end":517840,"line_start":459,"line_end":459,"column_start":8,"column_end":32},"name":"read_image_with_progress","qualname":"::image::ImageDecoder::read_image_with_progress","value":"pub fn read_image_with_progress<F: Fn(Progress) -> ()>(Self, &mut [u8], F)\n-> ImageResult<()>","parent":{"krate":0,"index":2235},"children":[],"decl_id":null,"docs":" Same as `read_image` but periodically calls the provided callback to give updates on loading\n progress.\n","sig":null,"attributes":[{"value":"/ Same as `read_image` but periodically calls the provided callback to give updates on loading","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":517694,"byte_end":517790,"line_start":457,"line_end":457,"column_start":5,"column_end":101}},{"value":"/ progress.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":517795,"byte_end":517808,"line_start":458,"line_end":458,"column_start":5,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":2248},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":518863,"byte_end":518878,"line_start":493,"line_end":493,"column_start":11,"column_end":26},"name":"ImageDecoderExt","qualname":"::image::ImageDecoderExt","value":"ImageDecoderExt<'a>: ImageDecoder + Sized","parent":null,"children":[{"krate":0,"index":2250},{"krate":0,"index":2252}],"decl_id":null,"docs":" Specialized image decoding not be supported by all formats\n","sig":null,"attributes":[{"value":"/ Specialized image decoding not be supported by all formats","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":518790,"byte_end":518852,"line_start":492,"line_end":492,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2250},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":519033,"byte_end":519042,"line_start":495,"line_end":495,"column_start":8,"column_end":17},"name":"read_rect","qualname":"::image::ImageDecoderExt::read_rect","value":"pub fn read_rect(&mut Self, u32, u32, u32, u32, &mut [u8]) -> ImageResult<()>","parent":{"krate":0,"index":2248},"children":[],"decl_id":null,"docs":" Decode a rectangular section of the image; see [`read_rect_with_progress()`](#fn.read_rect_with_progress).\n","sig":null,"attributes":[{"value":"/ Decode a rectangular section of the image; see [`read_rect_with_progress()`](#fn.read_rect_with_progress).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":518915,"byte_end":519025,"line_start":494,"line_end":494,"column_start":5,"column_end":115}}]},{"kind":"Method","id":{"krate":0,"index":2252},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":519984,"byte_end":520007,"line_start":518,"line_end":518,"column_start":8,"column_end":31},"name":"read_rect_with_progress","qualname":"::image::ImageDecoderExt::read_rect_with_progress","value":"pub fn read_rect_with_progress<F: Fn(Progress) ->\n                               ()>(&mut Self, u32, u32, u32, u32, &mut [u8],\n                                   F) -> ImageResult<()>","parent":{"krate":0,"index":2248},"children":[],"decl_id":null,"docs":" Decode a rectangular section of the image, periodically reporting progress.","sig":null,"attributes":[{"value":"/ Decode a rectangular section of the image, periodically reporting progress.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":519268,"byte_end":519347,"line_start":506,"line_end":506,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":519352,"byte_end":519355,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ The output buffer will be filled with fields specified by","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":519360,"byte_end":519421,"line_start":508,"line_end":508,"column_start":5,"column_end":66}},{"value":"/ [`ImageDecoder::color_type()`](trait.ImageDecoder.html#fn.color_type),","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":519426,"byte_end":519500,"line_start":509,"line_end":509,"column_start":5,"column_end":79}},{"value":"/ in that order, each field represented in native-endian.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":519505,"byte_end":519564,"line_start":510,"line_end":510,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":519569,"byte_end":519572,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ The progress callback will be called at least once at the start and the end of decoding,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":519577,"byte_end":519669,"line_start":512,"line_end":512,"column_start":5,"column_end":97}},{"value":"/ implementations are encouraged to call this more often,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":519674,"byte_end":519733,"line_start":513,"line_end":513,"column_start":5,"column_end":64}},{"value":"/ with a frequency meaningful for display to the end-user.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":519738,"byte_end":519798,"line_start":514,"line_end":514,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":519803,"byte_end":519806,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ This function will panic if the output buffer isn't at least","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":519811,"byte_end":519875,"line_start":516,"line_end":516,"column_start":5,"column_end":69}},{"value":"/ `color_type().bytes_per_pixel() * color_type().channel_count() * width * height` bytes long.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":519880,"byte_end":519976,"line_start":517,"line_end":517,"column_start":5,"column_end":101}}]},{"kind":"Trait","id":{"krate":0,"index":2254},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":520238,"byte_end":520254,"line_start":530,"line_end":530,"column_start":11,"column_end":27},"name":"AnimationDecoder","qualname":"::image::AnimationDecoder","value":"AnimationDecoder<'a>","parent":null,"children":[{"krate":0,"index":2256}],"decl_id":null,"docs":" AnimationDecoder trait\n","sig":null,"attributes":[{"value":"/ AnimationDecoder trait","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":520201,"byte_end":520227,"line_start":529,"line_end":529,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2256},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":520326,"byte_end":520337,"line_start":532,"line_end":532,"column_start":8,"column_end":19},"name":"into_frames","qualname":"::image::AnimationDecoder::into_frames","value":"pub fn into_frames(Self) -> Frames","parent":{"krate":0,"index":2254},"children":[],"decl_id":null,"docs":" Consume the decoder producing a series of frames.\n","sig":null,"attributes":[{"value":"/ Consume the decoder producing a series of frames.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":520265,"byte_end":520318,"line_start":531,"line_end":531,"column_start":5,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":2257},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":520409,"byte_end":520421,"line_start":536,"line_end":536,"column_start":11,"column_end":23},"name":"ImageEncoder","qualname":"::image::ImageEncoder","value":"ImageEncoder","parent":null,"children":[{"krate":0,"index":2258}],"decl_id":null,"docs":" The trait all encoders implement\n","sig":null,"attributes":[{"value":"/ The trait all encoders implement","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":520362,"byte_end":520398,"line_start":535,"line_end":535,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2258},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":520970,"byte_end":520981,"line_start":547,"line_end":547,"column_start":8,"column_end":19},"name":"write_image","qualname":"::image::ImageEncoder::write_image","value":"pub fn write_image(Self, &[u8], u32, u32, ColorType) -> ImageResult<()>","parent":{"krate":0,"index":2257},"children":[],"decl_id":null,"docs":" Writes all the bytes in an image to the encoder.","sig":null,"attributes":[{"value":"/ Writes all the bytes in an image to the encoder.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":520428,"byte_end":520480,"line_start":537,"line_end":537,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":520485,"byte_end":520488,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ This function takes a slice of bytes of the pixel data of the image","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":520493,"byte_end":520564,"line_start":539,"line_end":539,"column_start":5,"column_end":76}},{"value":"/ and encodes them. Unlike particular format encoders inherent impl encode","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":520569,"byte_end":520645,"line_start":540,"line_end":540,"column_start":5,"column_end":81}},{"value":"/ methods where endianness is not specified, here image data bytes should","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":520650,"byte_end":520725,"line_start":541,"line_end":541,"column_start":5,"column_end":80}},{"value":"/ always be in native endian. The implementor will reorder the endianess","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":520730,"byte_end":520804,"line_start":542,"line_end":542,"column_start":5,"column_end":79}},{"value":"/ as necessary for the target encoding format.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":520809,"byte_end":520857,"line_start":543,"line_end":543,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":520862,"byte_end":520865,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ See also `ImageDecoder::read_image` which reads byte buffers into","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":520870,"byte_end":520939,"line_start":545,"line_end":545,"column_start":5,"column_end":74}},{"value":"/ native endian.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":520944,"byte_end":520962,"line_start":546,"line_end":546,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":3858},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":521175,"byte_end":521181,"line_start":558,"line_end":558,"column_start":12,"column_end":18},"name":"Pixels","qualname":"::image::Pixels","value":"Pixels {  }","parent":null,"children":[{"krate":0,"index":3861},{"krate":0,"index":3862},{"krate":0,"index":3863},{"krate":0,"index":3864},{"krate":0,"index":3865}],"decl_id":null,"docs":" Immutable pixel iterator\n","sig":null,"attributes":[{"value":"/ Immutable pixel iterator","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":521118,"byte_end":521146,"line_start":556,"line_end":556,"column_start":1,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":2267},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":521922,"byte_end":521938,"line_start":595,"line_end":595,"column_start":11,"column_end":27},"name":"GenericImageView","qualname":"::image::GenericImageView","value":"GenericImageView","parent":null,"children":[{"krate":0,"index":2268},{"krate":0,"index":2269},{"krate":0,"index":2270},{"krate":0,"index":2271},{"krate":0,"index":2272},{"krate":0,"index":2273},{"krate":0,"index":2274},{"krate":0,"index":2275},{"krate":0,"index":2276},{"krate":0,"index":2277},{"krate":0,"index":2278},{"krate":0,"index":2279}],"decl_id":null,"docs":" Trait to inspect an image.\n","sig":null,"attributes":[{"value":"/ Trait to inspect an image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":521881,"byte_end":521911,"line_start":594,"line_end":594,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":2268},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":521977,"byte_end":521982,"line_start":597,"line_end":597,"column_start":10,"column_end":15},"name":"Pixel","qualname":"::image::GenericImageView::Pixel","value":"type Pixel: Pixel;","parent":{"krate":0,"index":2267},"children":[],"decl_id":null,"docs":" The type of pixel.\n","sig":null,"attributes":[{"value":"/ The type of pixel.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":521945,"byte_end":521967,"line_start":596,"line_end":596,"column_start":5,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":2269},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":522216,"byte_end":522230,"line_start":602,"line_end":602,"column_start":10,"column_end":24},"name":"InnerImageView","qualname":"::image::GenericImageView::InnerImageView","value":"type InnerImageView: GenericImageView<Pixel = Self::Pixel>;","parent":{"krate":0,"index":2267},"children":[],"decl_id":null,"docs":" Underlying image type. This is mainly used by SubImages in order to\n always have a reference to the original image. This allows for less\n indirections and it eases the use of nested SubImages.\n","sig":null,"attributes":[{"value":"/ Underlying image type. This is mainly used by SubImages in order to","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":521996,"byte_end":522067,"line_start":599,"line_end":599,"column_start":5,"column_end":76}},{"value":"/ always have a reference to the original image. This allows for less","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":522072,"byte_end":522143,"line_start":600,"line_end":600,"column_start":5,"column_end":76}},{"value":"/ indirections and it eases the use of nested SubImages.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":522148,"byte_end":522206,"line_start":601,"line_end":601,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2270},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":522323,"byte_end":522333,"line_start":605,"line_end":605,"column_start":8,"column_end":18},"name":"dimensions","qualname":"::image::GenericImageView::dimensions","value":"pub fn dimensions(&Self) -> (u32, u32)","parent":{"krate":0,"index":2267},"children":[],"decl_id":null,"docs":" The width and height of this image.\n","sig":null,"attributes":[{"value":"/ The width and height of this image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":522276,"byte_end":522315,"line_start":604,"line_end":604,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2271},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":522397,"byte_end":522402,"line_start":608,"line_end":608,"column_start":8,"column_end":13},"name":"width","qualname":"::image::GenericImageView::width","value":"pub fn width(&Self) -> u32","parent":{"krate":0,"index":2267},"children":[],"decl_id":null,"docs":" The width of this image.\n","sig":null,"attributes":[{"value":"/ The width of this image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":522361,"byte_end":522389,"line_start":607,"line_end":607,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2272},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":522517,"byte_end":522523,"line_start":614,"line_end":614,"column_start":8,"column_end":14},"name":"height","qualname":"::image::GenericImageView::height","value":"pub fn height(&Self) -> u32","parent":{"krate":0,"index":2267},"children":[],"decl_id":null,"docs":" The height of this image.\n","sig":null,"attributes":[{"value":"/ The height of this image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":522480,"byte_end":522509,"line_start":613,"line_end":613,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2273},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":522650,"byte_end":522656,"line_start":620,"line_end":620,"column_start":8,"column_end":14},"name":"bounds","qualname":"::image::GenericImageView::bounds","value":"pub fn bounds(&Self) -> (u32, u32, u32, u32)","parent":{"krate":0,"index":2267},"children":[],"decl_id":null,"docs":" The bounding rectangle of this image.\n","sig":null,"attributes":[{"value":"/ The bounding rectangle of this image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":522601,"byte_end":522642,"line_start":619,"line_end":619,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2274},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":522773,"byte_end":522782,"line_start":623,"line_end":623,"column_start":8,"column_end":17},"name":"in_bounds","qualname":"::image::GenericImageView::in_bounds","value":"pub fn in_bounds(&Self, u32, u32) -> bool","parent":{"krate":0,"index":2267},"children":[],"decl_id":null,"docs":" Returns true if this x, y coordinate is contained inside the image.\n","sig":null,"attributes":[{"value":"/ Returns true if this x, y coordinate is contained inside the image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":522694,"byte_end":522765,"line_start":622,"line_end":622,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2275},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":523105,"byte_end":523114,"line_start":635,"line_end":635,"column_start":8,"column_end":17},"name":"get_pixel","qualname":"::image::GenericImageView::get_pixel","value":"pub fn get_pixel(&Self, u32, u32) -> Self::Pixel","parent":{"krate":0,"index":2267},"children":[],"decl_id":null,"docs":" Returns the pixel located at (x, y)","sig":null,"attributes":[{"value":"/ Returns the pixel located at (x, y)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":522930,"byte_end":522969,"line_start":628,"line_end":628,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":522974,"byte_end":522977,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":522982,"byte_end":522994,"line_start":630,"line_end":630,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":522999,"byte_end":523002,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of bounds.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":523007,"byte_end":523047,"line_start":632,"line_end":632,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":523052,"byte_end":523055,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ TODO: change this signature to &P","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":523060,"byte_end":523097,"line_start":634,"line_end":634,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2276},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":523435,"byte_end":523451,"line_start":645,"line_end":645,"column_start":15,"column_end":31},"name":"unsafe_get_pixel","qualname":"::image::GenericImageView::unsafe_get_pixel","value":"pub unsafe fn unsafe_get_pixel(&Self, u32, u32) -> Self::Pixel","parent":{"krate":0,"index":2267},"children":[],"decl_id":null,"docs":" Returns the pixel located at (x, y)","sig":null,"attributes":[{"value":"/ Returns the pixel located at (x, y)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":523159,"byte_end":523198,"line_start":637,"line_end":637,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":523203,"byte_end":523206,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ This function can be implemented in a way that ignores bounds checking.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":523211,"byte_end":523286,"line_start":639,"line_end":639,"column_start":5,"column_end":80}},{"value":"/ # Safety","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":523291,"byte_end":523303,"line_start":640,"line_end":640,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":523308,"byte_end":523311,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ The coordinates must be [`in_bounds`] of the image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":523316,"byte_end":523371,"line_start":642,"line_end":642,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":523376,"byte_end":523379,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ [`in_bounds`]: #method.in_bounds","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":523384,"byte_end":523420,"line_start":644,"line_end":644,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2277},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":523683,"byte_end":523689,"line_start":652,"line_end":652,"column_start":8,"column_end":14},"name":"pixels","qualname":"::image::GenericImageView::pixels","value":"pub fn pixels(&Self) -> Pixels<, Self>","parent":{"krate":0,"index":2267},"children":[],"decl_id":null,"docs":" Returns an Iterator over the pixels of this image.\n The iterator yields the coordinates of each pixel\n along with their value\n","sig":null,"attributes":[{"value":"/ Returns an Iterator over the pixels of this image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":523532,"byte_end":523586,"line_start":649,"line_end":649,"column_start":5,"column_end":59}},{"value":"/ The iterator yields the coordinates of each pixel","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":523591,"byte_end":523644,"line_start":650,"line_end":650,"column_start":5,"column_end":58}},{"value":"/ along with their value","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":523649,"byte_end":523675,"line_start":651,"line_end":651,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2278},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":523959,"byte_end":523964,"line_start":665,"line_end":665,"column_start":8,"column_end":13},"name":"inner","qualname":"::image::GenericImageView::inner","value":"pub fn inner(&Self) -> &Self::InnerImageView","parent":{"krate":0,"index":2267},"children":[],"decl_id":null,"docs":" Returns a reference to the underlying image.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":523903,"byte_end":523951,"line_start":664,"line_end":664,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2279},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":524161,"byte_end":524165,"line_start":669,"line_end":669,"column_start":8,"column_end":12},"name":"view","qualname":"::image::GenericImageView::view","value":"pub fn view(&Self, u32, u32, u32, u32) -> SubImage<&Self::InnerImageView>","parent":{"krate":0,"index":2267},"children":[],"decl_id":null,"docs":" Returns an subimage that is an immutable view into this image.\n You can use [`GenericImage::sub_image`] if you need a mutable view instead.\n","sig":null,"attributes":[{"value":"/ Returns an subimage that is an immutable view into this image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":524003,"byte_end":524069,"line_start":667,"line_end":667,"column_start":5,"column_end":71}},{"value":"/ You can use [`GenericImage::sub_image`] if you need a mutable view instead.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":524074,"byte_end":524153,"line_start":668,"line_end":668,"column_start":5,"column_end":84}}]},{"kind":"Trait","id":{"krate":0,"index":2280},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":524364,"byte_end":524376,"line_start":675,"line_end":675,"column_start":11,"column_end":23},"name":"GenericImage","qualname":"::image::GenericImage","value":"GenericImage: GenericImageView","parent":null,"children":[{"krate":0,"index":2281},{"krate":0,"index":2282},{"krate":0,"index":2283},{"krate":0,"index":2284},{"krate":0,"index":2285},{"krate":0,"index":2286},{"krate":0,"index":2288},{"krate":0,"index":2290},{"krate":0,"index":2291}],"decl_id":null,"docs":" A trait for manipulating images.\n","sig":null,"attributes":[{"value":"/ A trait for manipulating images.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":524317,"byte_end":524353,"line_start":674,"line_end":674,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":2281},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":524621,"byte_end":524631,"line_start":679,"line_end":679,"column_start":10,"column_end":20},"name":"InnerImage","qualname":"::image::GenericImage::InnerImage","value":"type InnerImage: GenericImage<Pixel = Self::Pixel>;","parent":{"krate":0,"index":2280},"children":[],"decl_id":null,"docs":" Underlying image type. This is mainly used by SubImages in order to\n always have a reference to the original image. This allows for less\n indirections and it eases the use of nested SubImages.\n","sig":null,"attributes":[{"value":"/ Underlying image type. This is mainly used by SubImages in order to","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":524401,"byte_end":524472,"line_start":676,"line_end":676,"column_start":5,"column_end":76}},{"value":"/ always have a reference to the original image. This allows for less","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":524477,"byte_end":524548,"line_start":677,"line_end":677,"column_start":5,"column_end":76}},{"value":"/ indirections and it eases the use of nested SubImages.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":524553,"byte_end":524611,"line_start":678,"line_end":678,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2282},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":524821,"byte_end":524834,"line_start":686,"line_end":686,"column_start":8,"column_end":21},"name":"get_pixel_mut","qualname":"::image::GenericImage::get_pixel_mut","value":"pub fn get_pixel_mut(&mut Self, u32, u32) -> &mut Self::Pixel","parent":{"krate":0,"index":2280},"children":[],"decl_id":null,"docs":" Gets a reference to the mutable pixel at location `(x, y)`","sig":null,"attributes":[{"value":"/ Gets a reference to the mutable pixel at location `(x, y)`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":524673,"byte_end":524735,"line_start":681,"line_end":681,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":524740,"byte_end":524743,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":524748,"byte_end":524760,"line_start":683,"line_end":683,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":524765,"byte_end":524768,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of bounds.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":524773,"byte_end":524813,"line_start":685,"line_end":685,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2283},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":525008,"byte_end":525017,"line_start":693,"line_end":693,"column_start":8,"column_end":17},"name":"put_pixel","qualname":"::image::GenericImage::put_pixel","value":"pub fn put_pixel(&mut Self, u32, u32, Self::Pixel)","parent":{"krate":0,"index":2280},"children":[],"decl_id":null,"docs":" Put a pixel at location (x, y)","sig":null,"attributes":[{"value":"/ Put a pixel at location (x, y)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":524888,"byte_end":524922,"line_start":688,"line_end":688,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":524927,"byte_end":524930,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":524935,"byte_end":524947,"line_start":690,"line_end":690,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":524952,"byte_end":524955,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of bounds.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":524960,"byte_end":525000,"line_start":692,"line_end":692,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2284},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":525371,"byte_end":525387,"line_start":703,"line_end":703,"column_start":15,"column_end":31},"name":"unsafe_put_pixel","qualname":"::image::GenericImage::unsafe_put_pixel","value":"pub unsafe fn unsafe_put_pixel(&mut Self, u32, u32, Self::Pixel)","parent":{"krate":0,"index":2280},"children":[],"decl_id":null,"docs":" Puts a pixel at location (x, y)","sig":null,"attributes":[{"value":"/ Puts a pixel at location (x, y)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":525071,"byte_end":525106,"line_start":695,"line_end":695,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":525111,"byte_end":525114,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ This function can be implemented in a way that ignores bounds checking.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":525119,"byte_end":525194,"line_start":697,"line_end":697,"column_start":5,"column_end":80}},{"value":"/ # Safety","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":525199,"byte_end":525211,"line_start":698,"line_end":698,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":525216,"byte_end":525219,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ The coordinates must be [`in_bounds`] of the image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":525224,"byte_end":525279,"line_start":700,"line_end":700,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":525284,"byte_end":525287,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ [`in_bounds`]: traits.GenericImageView.html#method.in_bounds","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":525292,"byte_end":525356,"line_start":702,"line_end":702,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2285},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":525654,"byte_end":525665,"line_start":710,"line_end":710,"column_start":8,"column_end":19},"name":"blend_pixel","qualname":"::image::GenericImage::blend_pixel","value":"pub fn blend_pixel(&mut Self, u32, u32, Self::Pixel)","parent":{"krate":0,"index":2280},"children":[],"decl_id":null,"docs":" Put a pixel at location (x, y), taking into account alpha channels","sig":null,"attributes":[{"value":"/ Put a pixel at location (x, y), taking into account alpha channels","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":525485,"byte_end":525555,"line_start":707,"line_end":707,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":525560,"byte_end":525563,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ DEPRECATED: This method will be removed. Blend the pixel directly instead.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":525568,"byte_end":525646,"line_start":709,"line_end":709,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2286},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":526427,"byte_end":526436,"line_start":727,"line_end":727,"column_start":8,"column_end":17},"name":"copy_from","qualname":"::image::GenericImage::copy_from","value":"pub fn copy_from<O>(&mut Self, &O, u32, u32) -> ImageResult<()> where\nO: GenericImageView<Pixel = Self::Pixel>","parent":{"krate":0,"index":2280},"children":[],"decl_id":null,"docs":" Copies all of the pixels from another image into this image.","sig":null,"attributes":[{"value":"/ Copies all of the pixels from another image into this image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":525719,"byte_end":525783,"line_start":712,"line_end":712,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":525788,"byte_end":525791,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ The other image is copied with the top-left corner of the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":525796,"byte_end":525857,"line_start":714,"line_end":714,"column_start":5,"column_end":66}},{"value":"/ other image placed at (x, y).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":525862,"byte_end":525895,"line_start":715,"line_end":715,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":525900,"byte_end":525903,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ In order to copy only a piece of the other image, use [`GenericImageView::view`].","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":525908,"byte_end":525993,"line_start":717,"line_end":717,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":525998,"byte_end":526001,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ You can use [`FlatSamples`] to source pixels from an arbitrary regular raster of channel","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":526006,"byte_end":526098,"line_start":719,"line_end":719,"column_start":5,"column_end":97}},{"value":"/ values, for example from a foreign interface or a fixed image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":526103,"byte_end":526169,"line_start":720,"line_end":720,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":526174,"byte_end":526177,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":526182,"byte_end":526195,"line_start":722,"line_end":722,"column_start":5,"column_end":18}},{"value":"/ Returns an error if the image is too large to be copied at the given position","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":526200,"byte_end":526281,"line_start":723,"line_end":723,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":526286,"byte_end":526289,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ [`GenericImageView::view`]: trait.GenericImageView.html#method.view","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":526294,"byte_end":526365,"line_start":725,"line_end":725,"column_start":5,"column_end":76}},{"value":"/ [`FlatSamples`]: flat/struct.FlatSamples.html","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":526370,"byte_end":526419,"line_start":726,"line_end":726,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2288},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":527483,"byte_end":527494,"line_start":755,"line_end":755,"column_start":8,"column_end":19},"name":"copy_within","qualname":"::image::GenericImage::copy_within","value":"pub fn copy_within(&mut Self, Rect, u32, u32) -> bool","parent":{"krate":0,"index":2280},"children":[],"decl_id":null,"docs":" Copies all of the pixels from one part of this image to another part of this image.","sig":null,"attributes":[{"value":"/ Copies all of the pixels from one part of this image to another part of this image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":527135,"byte_end":527222,"line_start":748,"line_end":748,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":527227,"byte_end":527230,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ The destination rectangle of the copy is specified with the top-left corner placed at (x, y).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":527235,"byte_end":527332,"line_start":750,"line_end":750,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":527337,"byte_end":527340,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":527345,"byte_end":527358,"line_start":752,"line_end":752,"column_start":5,"column_end":18}},{"value":"/ `true` if the copy was successful, `false` if the image could not","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":527363,"byte_end":527432,"line_start":753,"line_end":753,"column_start":5,"column_end":74}},{"value":"/ be copied due to size constraints.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":527437,"byte_end":527475,"line_start":754,"line_end":754,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2290},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":529152,"byte_end":529161,"line_start":791,"line_end":791,"column_start":8,"column_end":17},"name":"inner_mut","qualname":"::image::GenericImage::inner_mut","value":"pub fn inner_mut(&mut Self) -> &mut Self::InnerImage","parent":{"krate":0,"index":2280},"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying image.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":529088,"byte_end":529144,"line_start":790,"line_end":790,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2291},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":529356,"byte_end":529365,"line_start":795,"line_end":795,"column_start":8,"column_end":17},"name":"sub_image","qualname":"::image::GenericImage::sub_image","value":"pub fn sub_image(&mut Self, u32, u32, u32, u32)\n-> SubImage<&mut Self::InnerImage>","parent":{"krate":0,"index":2280},"children":[],"decl_id":null,"docs":" Returns a mutable subimage that is a view into this image.\n If you want an immutable subimage instead, use [`GenericImageView::view`]\n","sig":null,"attributes":[{"value":"/ Returns a mutable subimage that is a view into this image.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":529204,"byte_end":529266,"line_start":793,"line_end":793,"column_start":5,"column_end":67}},{"value":"/ If you want an immutable subimage instead, use [`GenericImageView::view`]","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":529271,"byte_end":529348,"line_start":794,"line_end":794,"column_start":5,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":2292},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":529856,"byte_end":529864,"line_start":812,"line_end":812,"column_start":12,"column_end":20},"name":"SubImage","qualname":"::image::SubImage","value":"SubImage {  }","parent":null,"children":[{"krate":0,"index":2294},{"krate":0,"index":2295},{"krate":0,"index":2296},{"krate":0,"index":2297},{"krate":0,"index":2298}],"decl_id":null,"docs":" A View into another image","sig":null,"attributes":[{"value":"/ A View into another image","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":529572,"byte_end":529601,"line_start":806,"line_end":806,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":529602,"byte_end":529605,"line_start":807,"line_end":807,"column_start":1,"column_end":4}},{"value":"/ Instances of this struct can be created using:","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":529606,"byte_end":529656,"line_start":808,"line_end":808,"column_start":1,"column_end":51}},{"value":"/   - [`GenericImage::sub_image`] to create a mutable view,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":529657,"byte_end":529718,"line_start":809,"line_end":809,"column_start":1,"column_end":62}},{"value":"/   - [`GenericImageView::view`] to create an immutable view,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":529719,"byte_end":529782,"line_start":810,"line_end":810,"column_start":1,"column_end":64}},{"value":"/   - [`SubImage::new`] to instantiate the struct directly.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":529783,"byte_end":529844,"line_start":811,"line_end":811,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2305},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":530252,"byte_end":530255,"line_start":828,"line_end":828,"column_start":12,"column_end":15},"name":"new","qualname":"<SubImage<I>>::new","value":"pub fn new(I, u32, u32, u32, u32) -> SubImage<I>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new subimage\n","sig":null,"attributes":[{"value":"/ Construct a new subimage","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":530212,"byte_end":530240,"line_start":827,"line_end":827,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2306},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":530544,"byte_end":530557,"line_start":839,"line_end":839,"column_start":12,"column_end":25},"name":"change_bounds","qualname":"<SubImage<I>>::change_bounds","value":"pub fn change_bounds(&mut Self, u32, u32, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Change the coordinates of this subimage.\n","sig":null,"attributes":[{"value":"/ Change the coordinates of this subimage.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":530488,"byte_end":530532,"line_start":838,"line_end":838,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2307},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":530791,"byte_end":530799,"line_start":847,"line_end":847,"column_start":12,"column_end":20},"name":"to_image","qualname":"<SubImage<I>>::to_image","value":"pub fn to_image(&Self) -> ImageBuffer<DerefPixel<I>, Vec<DerefSubpixel<I>>>\nwhere I: Deref, I::Target: GenericImage + 'static","parent":null,"children":[],"decl_id":null,"docs":" Convert this subimage to an ImageBuffer\n","sig":null,"attributes":[{"value":"/ Convert this subimage to an ImageBuffer","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":530736,"byte_end":530779,"line_start":846,"line_end":846,"column_start":5,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":2340},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":544179,"byte_end":544194,"line_start":12,"line_end":12,"column_start":11,"column_end":26},"name":"EncodableLayout","qualname":"::traits::EncodableLayout","value":"EncodableLayout: seals::EncodableLayout","parent":null,"children":[{"krate":0,"index":2341}],"decl_id":null,"docs":" Types which are safe to treat as an immutable byte slice in a pixel layout\n for image encoding.\n","sig":null,"attributes":[{"value":"/ Types which are safe to treat as an immutable byte slice in a pixel layout","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":544066,"byte_end":544144,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/ for image encoding.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":544145,"byte_end":544168,"line_start":11,"line_end":11,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2341},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":544265,"byte_end":544273,"line_start":14,"line_end":14,"column_start":8,"column_end":16},"name":"as_bytes","qualname":"::traits::EncodableLayout::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":{"krate":0,"index":2340},"children":[],"decl_id":null,"docs":" Get the bytes of this value.\n","sig":null,"attributes":[{"value":"/ Get the bytes of this value.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":544225,"byte_end":544257,"line_start":13,"line_end":13,"column_start":5,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":2346},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":544561,"byte_end":544570,"line_start":30,"line_end":30,"column_start":11,"column_end":20},"name":"Primitive","qualname":"::traits::Primitive","value":"Primitive: Copy + NumCast + Num + PartialOrd<Self> + Clone + Bounded","parent":null,"children":[],"decl_id":null,"docs":" Primitive trait from old stdlib\n","sig":null,"attributes":[{"value":"/ Primitive trait from old stdlib","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":544515,"byte_end":544550,"line_start":29,"line_end":29,"column_start":1,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":2359},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":545092,"byte_end":545103,"line_start":47,"line_end":47,"column_start":11,"column_end":22},"name":"Enlargeable","qualname":"::traits::Enlargeable","value":"Enlargeable: Sized + Bounded + NumCast","parent":null,"children":[{"krate":0,"index":2360},{"krate":0,"index":2361}],"decl_id":null,"docs":" An Enlargable::Larger value should be enough to calculate\n the sum (average) of a few hundred or thousand Enlargeable values.\n","sig":null,"attributes":[{"value":"/ An Enlargable::Larger value should be enough to calculate","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":544949,"byte_end":545010,"line_start":45,"line_end":45,"column_start":1,"column_end":62}},{"value":"/ the sum (average) of a few hundred or thousand Enlargeable values.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":545011,"byte_end":545081,"line_start":46,"line_end":46,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":2360},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":545142,"byte_end":545148,"line_start":48,"line_end":48,"column_start":10,"column_end":16},"name":"Larger","qualname":"::traits::Enlargeable::Larger","value":"type Larger: Primitive + AddAssign + 'static;","parent":{"krate":0,"index":2359},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2361},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":545191,"byte_end":545201,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"clamp_from","qualname":"::traits::Enlargeable::clamp_from","value":"pub fn clamp_from(Self::Larger) -> Self","parent":{"krate":0,"index":2359},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2368},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":545673,"byte_end":545677,"line_start":71,"line_end":71,"column_start":11,"column_end":15},"name":"Lerp","qualname":"::traits::Lerp","value":"Lerp: Bounded + NumCast","parent":null,"children":[{"krate":0,"index":2369},{"krate":0,"index":2370}],"decl_id":null,"docs":" Linear interpolation without involving floating numbers.\n","sig":null,"attributes":[{"value":"/ Linear interpolation without involving floating numbers.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":545602,"byte_end":545662,"line_start":70,"line_end":70,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":2369},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":545708,"byte_end":545713,"line_start":72,"line_end":72,"column_start":10,"column_end":15},"name":"Ratio","qualname":"::traits::Lerp::Ratio","value":"type Ratio: Primitive;","parent":{"krate":0,"index":2368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2370},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":545734,"byte_end":545738,"line_start":74,"line_end":74,"column_start":8,"column_end":12},"name":"lerp","qualname":"::traits::Lerp::lerp","value":"pub fn lerp(Self, Self, Self::Ratio) -> Self","parent":{"krate":0,"index":2368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2377},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":546464,"byte_end":546469,"line_start":105,"line_end":105,"column_start":11,"column_end":16},"name":"Pixel","qualname":"::traits::Pixel","value":"Pixel: Copy + Clone","parent":null,"children":[{"krate":0,"index":2378},{"krate":0,"index":2379},{"krate":0,"index":2380},{"krate":0,"index":2381},{"krate":0,"index":2382},{"krate":0,"index":2383},{"krate":0,"index":2384},{"krate":0,"index":2385},{"krate":0,"index":2386},{"krate":0,"index":2387},{"krate":0,"index":2388},{"krate":0,"index":2389},{"krate":0,"index":2390},{"krate":0,"index":2391},{"krate":0,"index":2392},{"krate":0,"index":2393},{"krate":0,"index":2394},{"krate":0,"index":2395},{"krate":0,"index":2396},{"krate":0,"index":2397},{"krate":0,"index":2399},{"krate":0,"index":2401},{"krate":0,"index":2404},{"krate":0,"index":2407},{"krate":0,"index":2410},{"krate":0,"index":2413},{"krate":0,"index":2415},{"krate":0,"index":2417},{"krate":0,"index":2418}],"decl_id":null,"docs":" A generalized pixel.","sig":null,"attributes":[{"value":"/ A generalized pixel.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":546339,"byte_end":546363,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":546364,"byte_end":546367,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ A pixel object is usually not used standalone but as a view into an image buffer.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":546368,"byte_end":546453,"line_start":104,"line_end":104,"column_start":1,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":2378},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":546533,"byte_end":546541,"line_start":107,"line_end":107,"column_start":10,"column_end":18},"name":"Subpixel","qualname":"::traits::Pixel::Subpixel","value":"type Subpixel: Primitive;","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" The underlying subpixel type.\n","sig":null,"attributes":[{"value":"/ The underlying subpixel type.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":546490,"byte_end":546523,"line_start":106,"line_end":106,"column_start":5,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":2379},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":546616,"byte_end":546629,"line_start":110,"line_end":110,"column_start":11,"column_end":24},"name":"CHANNEL_COUNT","qualname":"::traits::Pixel::CHANNEL_COUNT","value":"u8","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" The number of channels of this pixel type.\n","sig":null,"attributes":[{"value":"/ The number of channels of this pixel type.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":546559,"byte_end":546605,"line_start":109,"line_end":109,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2380},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":546772,"byte_end":546785,"line_start":113,"line_end":113,"column_start":8,"column_end":21},"name":"channel_count","qualname":"::traits::Pixel::channel_count","value":"pub fn channel_count() -> u8","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" Returns the number of channels of this pixel type.\n","sig":null,"attributes":[{"value":"/ Returns the number of channels of this pixel type.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":546639,"byte_end":546693,"line_start":111,"line_end":111,"column_start":5,"column_end":59}},{"value":"deprecated(note = \"please use CHANNEL_COUNT associated constant\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":546698,"byte_end":546764,"line_start":112,"line_end":112,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2381},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":546881,"byte_end":546889,"line_start":118,"line_end":118,"column_start":8,"column_end":16},"name":"channels","qualname":"::traits::Pixel::channels","value":"pub fn channels(&Self) -> &[Self::Subpixel]","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" Returns the components as a slice.\n","sig":null,"attributes":[{"value":"/ Returns the components as a slice.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":546835,"byte_end":546873,"line_start":117,"line_end":117,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2382},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":546977,"byte_end":546989,"line_start":121,"line_end":121,"column_start":8,"column_end":20},"name":"channels_mut","qualname":"::traits::Pixel::channels_mut","value":"pub fn channels_mut(&mut Self) -> &mut [Self::Subpixel]","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" Returns the components as a mutable slice\n","sig":null,"attributes":[{"value":"/ Returns the components as a mutable slice","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":546924,"byte_end":546969,"line_start":120,"line_end":120,"column_start":5,"column_end":50}}]},{"kind":"Const","id":{"krate":0,"index":2383},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":547155,"byte_end":547166,"line_start":125,"line_end":125,"column_start":11,"column_end":22},"name":"COLOR_MODEL","qualname":"::traits::Pixel::COLOR_MODEL","value":"&'static str","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" A string that can help to interpret the meaning each channel\n See [gimp babl](http://gegl.org/babl/).\n","sig":null,"attributes":[{"value":"/ A string that can help to interpret the meaning each channel","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":547032,"byte_end":547096,"line_start":123,"line_end":123,"column_start":5,"column_end":69}},{"value":"/ See [gimp babl](http://gegl.org/babl/).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":547101,"byte_end":547144,"line_start":124,"line_end":124,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2384},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":547383,"byte_end":547394,"line_start":129,"line_end":129,"column_start":8,"column_end":19},"name":"color_model","qualname":"::traits::Pixel::color_model","value":"pub fn color_model() -> &'static str","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" Returns a string that can help to interpret the meaning each channel\n See [gimp babl](http://gegl.org/babl/).\n","sig":null,"attributes":[{"value":"/ Returns a string that can help to interpret the meaning each channel","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":547186,"byte_end":547258,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ See [gimp babl](http://gegl.org/babl/).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":547263,"byte_end":547306,"line_start":127,"line_end":127,"column_start":5,"column_end":48}},{"value":"deprecated(note = \"please use COLOR_MODEL associated constant\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":547311,"byte_end":547375,"line_start":128,"line_end":128,"column_start":5,"column_end":69}}]},{"kind":"Const","id":{"krate":0,"index":2385},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":547498,"byte_end":547508,"line_start":134,"line_end":134,"column_start":11,"column_end":21},"name":"COLOR_TYPE","qualname":"::traits::Pixel::COLOR_TYPE","value":"ColorType","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" ColorType for this pixel format\n","sig":null,"attributes":[{"value":"/ ColorType for this pixel format","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":547452,"byte_end":547487,"line_start":133,"line_end":133,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2386},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":547648,"byte_end":547658,"line_start":137,"line_end":137,"column_start":8,"column_end":18},"name":"color_type","qualname":"::traits::Pixel::color_type","value":"pub fn color_type() -> ColorType","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" Returns the ColorType for this pixel format\n","sig":null,"attributes":[{"value":"/ Returns the ColorType for this pixel format","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":547525,"byte_end":547572,"line_start":135,"line_end":135,"column_start":5,"column_end":52}},{"value":"deprecated(note = \"please use COLOR_TYPE associated constant\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":547577,"byte_end":547640,"line_start":136,"line_end":136,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2387},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":547896,"byte_end":547905,"line_start":145,"line_end":145,"column_start":8,"column_end":17},"name":"channels4","qualname":"::traits::Pixel::channels4","value":"pub fn channels4(&Self)\n-> (Self::Subpixel, Self::Subpixel, Self::Subpixel, Self::Subpixel)","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" Returns the channels of this pixel as a 4 tuple. If the pixel\n has less than 4 channels the remainder is filled with the maximum value","sig":null,"attributes":[{"value":"/ Returns the channels of this pixel as a 4 tuple. If the pixel","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":547712,"byte_end":547777,"line_start":141,"line_end":141,"column_start":5,"column_end":70}},{"value":"/ has less than 4 channels the remainder is filled with the maximum value","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":547782,"byte_end":547857,"line_start":142,"line_end":142,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":547862,"byte_end":547865,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ TODO deprecate","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":547870,"byte_end":547888,"line_start":144,"line_end":144,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":2388},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":548208,"byte_end":548221,"line_start":158,"line_end":158,"column_start":8,"column_end":21},"name":"from_channels","qualname":"::traits::Pixel::from_channels","value":"pub fn from_channels(Self::Subpixel, Self::Subpixel, Self::Subpixel,\n                     Self::Subpixel) -> Self","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" Construct a pixel from the 4 channels a, b, c and d.\n If the pixel does not contain 4 channels the extra are ignored.","sig":null,"attributes":[{"value":"/ Construct a pixel from the 4 channels a, b, c and d.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":548041,"byte_end":548097,"line_start":154,"line_end":154,"column_start":5,"column_end":61}},{"value":"/ If the pixel does not contain 4 channels the extra are ignored.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":548102,"byte_end":548169,"line_start":155,"line_end":155,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":548174,"byte_end":548177,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ TODO deprecate","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":548182,"byte_end":548200,"line_start":157,"line_end":157,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":2389},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":548575,"byte_end":548585,"line_start":169,"line_end":169,"column_start":8,"column_end":18},"name":"from_slice","qualname":"::traits::Pixel::from_slice","value":"pub fn from_slice(&[Self::Subpixel]) -> &Self","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" Returns a view into a slice.","sig":null,"attributes":[{"value":"/ Returns a view into a slice.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":548351,"byte_end":548383,"line_start":165,"line_end":165,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":548388,"byte_end":548391,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Note: The slice length is not checked on creation. Thus the caller has to ensure","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":548396,"byte_end":548480,"line_start":167,"line_end":167,"column_start":5,"column_end":89}},{"value":"/ that the slice is long enough to prevent panics if the pixel is used later on.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":548485,"byte_end":548567,"line_start":168,"line_end":168,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":2390},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":548865,"byte_end":548879,"line_start":175,"line_end":175,"column_start":8,"column_end":22},"name":"from_slice_mut","qualname":"::traits::Pixel::from_slice_mut","value":"pub fn from_slice_mut(&mut [Self::Subpixel]) -> &mut Self","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" Returns mutable view into a mutable slice.","sig":null,"attributes":[{"value":"/ Returns mutable view into a mutable slice.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":548627,"byte_end":548673,"line_start":171,"line_end":171,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":548678,"byte_end":548681,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Note: The slice length is not checked on creation. Thus the caller has to ensure","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":548686,"byte_end":548770,"line_start":173,"line_end":173,"column_start":5,"column_end":89}},{"value":"/ that the slice is long enough to prevent panics if the pixel is used later on.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":548775,"byte_end":548857,"line_start":174,"line_end":174,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":2391},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":548966,"byte_end":548972,"line_start":178,"line_end":178,"column_start":8,"column_end":14},"name":"to_rgb","qualname":"::traits::Pixel::to_rgb","value":"pub fn to_rgb(&Self) -> Rgb<Self::Subpixel>","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" Convert this pixel to RGB\n","sig":null,"attributes":[{"value":"/ Convert this pixel to RGB","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":548929,"byte_end":548958,"line_start":177,"line_end":177,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2392},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":549068,"byte_end":549075,"line_start":181,"line_end":181,"column_start":8,"column_end":15},"name":"to_rgba","qualname":"::traits::Pixel::to_rgba","value":"pub fn to_rgba(&Self) -> Rgba<Self::Subpixel>","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" Convert this pixel to RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Convert this pixel to RGB with an alpha channel","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":549009,"byte_end":549060,"line_start":180,"line_end":180,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2393},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":549151,"byte_end":549158,"line_start":184,"line_end":184,"column_start":8,"column_end":15},"name":"to_luma","qualname":"::traits::Pixel::to_luma","value":"pub fn to_luma(&Self) -> Luma<Self::Subpixel>","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" Convert this pixel to luma\n","sig":null,"attributes":[{"value":"/ Convert this pixel to luma","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":549113,"byte_end":549143,"line_start":183,"line_end":183,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2394},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":549256,"byte_end":549269,"line_start":187,"line_end":187,"column_start":8,"column_end":21},"name":"to_luma_alpha","qualname":"::traits::Pixel::to_luma_alpha","value":"pub fn to_luma_alpha(&Self) -> LumaA<Self::Subpixel>","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" Convert this pixel to luma with an alpha channel\n","sig":null,"attributes":[{"value":"/ Convert this pixel to luma with an alpha channel","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":549196,"byte_end":549248,"line_start":186,"line_end":186,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2395},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":549345,"byte_end":549351,"line_start":190,"line_end":190,"column_start":8,"column_end":14},"name":"to_bgr","qualname":"::traits::Pixel::to_bgr","value":"pub fn to_bgr(&Self) -> Bgr<Self::Subpixel>","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" Convert this pixel to BGR\n","sig":null,"attributes":[{"value":"/ Convert this pixel to BGR","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":549308,"byte_end":549337,"line_start":189,"line_end":189,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2396},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":549447,"byte_end":549454,"line_start":193,"line_end":193,"column_start":8,"column_end":15},"name":"to_bgra","qualname":"::traits::Pixel::to_bgra","value":"pub fn to_bgra(&Self) -> Bgra<Self::Subpixel>","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" Convert this pixel to BGR with an alpha channel\n","sig":null,"attributes":[{"value":"/ Convert this pixel to BGR with an alpha channel","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":549388,"byte_end":549439,"line_start":192,"line_end":192,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2397},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":549561,"byte_end":549564,"line_start":196,"line_end":196,"column_start":8,"column_end":11},"name":"map","qualname":"::traits::Pixel::map","value":"pub fn map<F>(&Self, F) -> Self where F: FnMut(Self::Subpixel) ->\nSelf::Subpixel","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":549492,"byte_end":549553,"line_start":195,"line_end":195,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2399},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":549725,"byte_end":549730,"line_start":201,"line_end":201,"column_start":8,"column_end":13},"name":"apply","qualname":"::traits::Pixel::apply","value":"pub fn apply<F>(&mut Self, F) where F: FnMut(Self::Subpixel) -> Self::Subpixel","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":549656,"byte_end":549717,"line_start":200,"line_end":200,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2401},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":549955,"byte_end":549969,"line_start":207,"line_end":207,"column_start":8,"column_end":22},"name":"map_with_alpha","qualname":"::traits::Pixel::map_with_alpha","value":"pub fn map_with_alpha<F, G>(&Self, F, G) -> Self where\nF: FnMut(Self::Subpixel) -> Self::Subpixel, G: FnMut(Self::Subpixel) ->\nSelf::Subpixel","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Apply the function ```g``` to the alpha channel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel except the alpha channel.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":549818,"byte_end":549890,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ Apply the function ```g``` to the alpha channel.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":549895,"byte_end":549947,"line_start":206,"line_end":206,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2404},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":550275,"byte_end":550291,"line_start":214,"line_end":214,"column_start":8,"column_end":24},"name":"apply_with_alpha","qualname":"::traits::Pixel::apply_with_alpha","value":"pub fn apply_with_alpha<F, G>(&mut Self, F, G) where F: FnMut(Self::Subpixel)\n-> Self::Subpixel, G: FnMut(Self::Subpixel) -> Self::Subpixel","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Apply the function ```g``` to the alpha channel. Works in-place.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel except the alpha channel.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":550122,"byte_end":550194,"line_start":212,"line_end":212,"column_start":5,"column_end":77}},{"value":"/ Apply the function ```g``` to the alpha channel. Works in-place.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":550199,"byte_end":550267,"line_start":213,"line_end":213,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2407},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":550520,"byte_end":550537,"line_start":220,"line_end":220,"column_start":8,"column_end":25},"name":"map_without_alpha","qualname":"::traits::Pixel::map_without_alpha","value":"pub fn map_without_alpha<F>(&Self, F) -> Self where F: FnMut(Self::Subpixel)\n-> Self::Subpixel","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel except the alpha channel.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":550440,"byte_end":550512,"line_start":219,"line_end":219,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2410},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":550829,"byte_end":550848,"line_start":231,"line_end":231,"column_start":8,"column_end":27},"name":"apply_without_alpha","qualname":"::traits::Pixel::apply_without_alpha","value":"pub fn apply_without_alpha<F>(&mut Self, F) where F: FnMut(Self::Subpixel) ->\nSelf::Subpixel","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Works in place.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel except the alpha channel.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":550725,"byte_end":550797,"line_start":229,"line_end":229,"column_start":5,"column_end":77}},{"value":"/ Works in place.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":550802,"byte_end":550821,"line_start":230,"line_end":230,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2413},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":551091,"byte_end":551095,"line_start":240,"line_end":240,"column_start":8,"column_end":12},"name":"map2","qualname":"::traits::Pixel::map2","value":"pub fn map2<F>(&Self, &Self, F) -> Self where\nF: FnMut(Self::Subpixel, Self::Subpixel) -> Self::Subpixel","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel and\n ```other``` pairwise.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel and","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":550989,"byte_end":551053,"line_start":238,"line_end":238,"column_start":5,"column_end":69}},{"value":"/ ```other``` pairwise.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":551058,"byte_end":551083,"line_start":239,"line_end":239,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2415},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":551335,"byte_end":551341,"line_start":246,"line_end":246,"column_start":8,"column_end":14},"name":"apply2","qualname":"::traits::Pixel::apply2","value":"pub fn apply2<F>(&mut Self, &Self, F) where\nF: FnMut(Self::Subpixel, Self::Subpixel) -> Self::Subpixel","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel and\n ```other``` pairwise. Works in-place.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel and","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":551217,"byte_end":551281,"line_start":244,"line_end":244,"column_start":5,"column_end":69}},{"value":"/ ```other``` pairwise. Works in-place.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":551286,"byte_end":551327,"line_start":245,"line_end":245,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2417},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":551488,"byte_end":551494,"line_start":251,"line_end":251,"column_start":8,"column_end":14},"name":"invert","qualname":"::traits::Pixel::invert","value":"pub fn invert(&mut Self)","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" Invert this pixel\n","sig":null,"attributes":[{"value":"/ Invert this pixel","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":551459,"byte_end":551480,"line_start":250,"line_end":250,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2418},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":551605,"byte_end":551610,"line_start":254,"line_end":254,"column_start":8,"column_end":13},"name":"blend","qualname":"::traits::Pixel::blend","value":"pub fn blend(&mut Self, &Self)","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" Blend the color of a given pixel into ourself, taking into account alpha channels\n","sig":null,"attributes":[{"value":"/ Blend the color of a given pixel into ourself, taking into account alpha channels","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":551512,"byte_end":551597,"line_start":253,"line_end":253,"column_start":5,"column_end":90}}]},{"kind":"Trait","id":{"krate":0,"index":2420},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":551719,"byte_end":551734,"line_start":259,"line_end":259,"column_start":15,"column_end":30},"name":"EncodableLayout","qualname":"::traits::seals::EncodableLayout","value":"EncodableLayout","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3870},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/utils/mod.rs","byte_start":555744,"byte_end":555763,"line_start":108,"line_end":108,"column_start":12,"column_end":31},"name":"NonExhaustiveMarker","qualname":"::utils::NonExhaustiveMarker","value":"NonExhaustiveMarker {  }","parent":null,"children":[{"krate":0,"index":3871}],"decl_id":null,"docs":" A marker struct for __NonExhaustive enums.","sig":null,"attributes":[{"value":"/ A marker struct for __NonExhaustive enums.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/utils/mod.rs","byte_start":555021,"byte_end":555067,"line_start":97,"line_end":97,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/utils/mod.rs","byte_start":555068,"byte_end":555071,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ This is an empty type that can not be constructed. When an enum contains a tuple variant that","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/utils/mod.rs","byte_start":555072,"byte_end":555169,"line_start":99,"line_end":99,"column_start":1,"column_end":98}},{"value":"/ includes this type the optimizer can statically determined tha the branch is never taken while","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/utils/mod.rs","byte_start":555170,"byte_end":555268,"line_start":100,"line_end":100,"column_start":1,"column_end":99}},{"value":"/ at the same time the matching of the branch is required.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/utils/mod.rs","byte_start":555269,"byte_end":555329,"line_start":101,"line_end":101,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/utils/mod.rs","byte_start":555330,"byte_end":555333,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ The effect is thus very similar to the actual `#[non_exhaustive]` attribute with no runtime","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/utils/mod.rs","byte_start":555334,"byte_end":555429,"line_start":103,"line_end":103,"column_start":1,"column_end":96}},{"value":"/ costs. Also note that we use a dirty trick to not only hide this type from the doc but make it","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/utils/mod.rs","byte_start":555430,"byte_end":555528,"line_start":104,"line_end":104,"column_start":1,"column_end":99}},{"value":"/ inaccessible. The visibility in this module is pub but the module itself is not and the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/utils/mod.rs","byte_start":555529,"byte_end":555620,"line_start":105,"line_end":105,"column_start":1,"column_end":92}},{"value":"/ top-level crate never exports the type.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/utils/mod.rs","byte_start":555621,"byte_end":555664,"line_start":106,"line_end":106,"column_start":1,"column_end":44}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":19853,"byte_end":19869,"line_start":194,"line_end":194,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":20567,"byte_end":20580,"line_start":217,"line_end":217,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":21356,"byte_end":21369,"line_start":245,"line_end":245,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":75},{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":22146,"byte_end":22160,"line_start":273,"line_end":273,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":22539,"byte_end":22549,"line_start":288,"line_end":288,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":22906,"byte_end":22916,"line_start":302,"line_end":302,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":23032,"byte_end":23047,"line_start":308,"line_end":308,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":23176,"byte_end":23191,"line_start":314,"line_end":314,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":23441,"byte_end":23457,"line_start":323,"line_end":323,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":23760,"byte_end":23770,"line_start":335,"line_end":335,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":24231,"byte_end":24241,"line_start":348,"line_end":348,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":24694,"byte_end":24710,"line_start":361,"line_end":361,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":26332,"byte_end":26348,"line_start":404,"line_end":404,"column_start":16,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":26376,"byte_end":26390,"line_start":406,"line_end":406,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":27425,"byte_end":27439,"line_start":438,"line_end":438,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":27644,"byte_end":27657,"line_start":447,"line_end":447,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":28118,"byte_end":28131,"line_start":465,"line_end":465,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":28336,"byte_end":28349,"line_start":474,"line_end":474,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":28796,"byte_end":28809,"line_start":486,"line_end":486,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":29014,"byte_end":29024,"line_start":495,"line_end":495,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":29407,"byte_end":29417,"line_start":505,"line_end":505,"column_start":16,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":29445,"byte_end":29460,"line_start":507,"line_end":507,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":34254,"byte_end":34262,"line_start":86,"line_end":86,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":34832,"byte_end":34840,"line_start":105,"line_end":105,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":34989,"byte_end":34997,"line_start":112,"line_end":112,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":67151,"byte_end":67158,"line_start":232,"line_end":232,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":67937,"byte_end":67945,"line_start":268,"line_end":268,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":294},{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":68484,"byte_end":68492,"line_start":292,"line_end":292,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":83706,"byte_end":83718,"line_start":363,"line_end":363,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":102604,"byte_end":102610,"line_start":68,"line_end":68,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":103992,"byte_end":103998,"line_start":115,"line_end":115,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":104784,"byte_end":104790,"line_start":137,"line_end":137,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/free_functions.rs","byte_start":119911,"byte_end":119921,"line_start":302,"line_end":302,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":124924,"byte_end":124936,"line_start":124,"line_end":124,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":559},{"krate":0,"index":561},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":572},{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":137531,"byte_end":137534,"line_start":437,"line_end":437,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":137792,"byte_end":137803,"line_start":452,"line_end":452,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":585},{"krate":0,"index":587},{"krate":0,"index":589},{"krate":0,"index":592},{"krate":0,"index":594},{"krate":0,"index":596},{"krate":0,"index":598},{"krate":0,"index":600},{"krate":0,"index":602},{"krate":0,"index":604},{"krate":0,"index":606},{"krate":0,"index":608},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":154958,"byte_end":154969,"line_start":873,"line_end":873,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":623}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":160821,"byte_end":160825,"line_start":1028,"line_end":1028,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":166410,"byte_end":166417,"line_start":1161,"line_end":1161,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":170793,"byte_end":170804,"line_start":1275,"line_end":1275,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":654},{"krate":0,"index":655}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":171413,"byte_end":171424,"line_start":1294,"line_end":1294,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":172028,"byte_end":172032,"line_start":1312,"line_end":1312,"column_start":45,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":173279,"byte_end":173286,"line_start":1357,"line_end":1357,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":174553,"byte_end":174560,"line_start":1402,"line_end":1402,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":175455,"byte_end":175465,"line_start":1431,"line_end":1431,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":694}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":175617,"byte_end":175640,"line_start":1435,"line_end":1435,"column_start":31,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":175848,"byte_end":175871,"line_start":1440,"line_end":1440,"column_start":31,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":176445,"byte_end":176450,"line_start":1454,"line_end":1454,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":177385,"byte_end":177390,"line_start":1478,"line_end":1478,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":177415,"byte_end":177425,"line_start":1480,"line_end":1480,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/decoder.rs","byte_start":186319,"byte_end":186330,"line_start":100,"line_end":100,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":780},{"krate":0,"index":781}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/decoder.rs","byte_start":188253,"byte_end":188265,"line_start":158,"line_end":158,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/decoder.rs","byte_start":190336,"byte_end":190346,"line_start":195,"line_end":195,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":785}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/decoder.rs","byte_start":190502,"byte_end":190514,"line_start":201,"line_end":201,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/decoder.rs","byte_start":190861,"byte_end":190878,"line_start":216,"line_end":216,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/decoder.rs","byte_start":199535,"byte_end":199543,"line_start":479,"line_end":479,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":811},{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/decoder.rs","byte_start":200929,"byte_end":200938,"line_start":523,"line_end":523,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/decoder.rs","byte_start":202203,"byte_end":202218,"line_start":578,"line_end":578,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":856},{"krate":0,"index":857}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/decoder.rs","byte_start":204074,"byte_end":204084,"line_start":630,"line_end":630,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":876},{"krate":0,"index":878},{"krate":0,"index":881},{"krate":0,"index":883},{"krate":0,"index":886},{"krate":0,"index":888},{"krate":0,"index":889}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/decoder.rs","byte_start":235988,"byte_end":235997,"line_start":1420,"line_end":1420,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":897},{"krate":0,"index":898}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/decoder.rs","byte_start":236417,"byte_end":236427,"line_start":1434,"line_end":1434,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":906}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/decoder.rs","byte_start":237102,"byte_end":237112,"line_start":1459,"line_end":1459,"column_start":55,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":910}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/encoder.rs","byte_start":238871,"byte_end":238881,"line_start":28,"line_end":28,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/encoder.rs","byte_start":245996,"byte_end":246006,"line_start":225,"line_end":225,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":953}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":251717,"byte_end":251727,"line_start":51,"line_end":51,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":996}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":252203,"byte_end":252212,"line_start":65,"line_end":65,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1004},{"krate":0,"index":1005}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":252625,"byte_end":252635,"line_start":79,"line_end":79,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":255589,"byte_end":255605,"line_start":156,"line_end":156,"column_start":15,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1024}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":256217,"byte_end":256233,"line_start":178,"line_end":178,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1027},{"krate":0,"index":1028}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":260949,"byte_end":260959,"line_start":286,"line_end":286,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1034}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":261452,"byte_end":261462,"line_start":309,"line_end":309,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1048},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1054}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":265616,"byte_end":265626,"line_start":421,"line_end":421,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1056},{"krate":0,"index":1058}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","byte_start":267184,"byte_end":267195,"line_start":18,"line_end":18,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1091},{"krate":0,"index":1092}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","byte_start":268873,"byte_end":268883,"line_start":67,"line_end":67,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1100},{"krate":0,"index":1101}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","byte_start":269296,"byte_end":269307,"line_start":81,"line_end":81,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1109}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","byte_start":271053,"byte_end":271062,"line_start":141,"line_end":141,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","byte_start":271320,"byte_end":271330,"line_start":152,"line_end":152,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1115}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":297553,"byte_end":297562,"line_start":169,"line_end":169,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1186},{"krate":0,"index":1187},{"krate":0,"index":1188},{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1192},{"krate":0,"index":1193}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":301026,"byte_end":301038,"line_start":301,"line_end":301,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1195}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":301376,"byte_end":301388,"line_start":313,"line_end":313,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1197}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":302215,"byte_end":302226,"line_start":349,"line_end":349,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1220},{"krate":0,"index":1221},{"krate":0,"index":1222},{"krate":0,"index":1226},{"krate":0,"index":1230}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":313522,"byte_end":313533,"line_start":677,"line_end":677,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1241}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":336065,"byte_end":336074,"line_start":45,"line_end":45,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1339}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":336832,"byte_end":336841,"line_start":69,"line_end":69,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1342},{"krate":0,"index":1343}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":338206,"byte_end":338216,"line_start":120,"line_end":120,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1350},{"krate":0,"index":1351},{"krate":0,"index":1352}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":342830,"byte_end":342840,"line_start":209,"line_end":209,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1357},{"krate":0,"index":1358},{"krate":0,"index":1359},{"krate":0,"index":1360},{"krate":0,"index":1361},{"krate":0,"index":1367}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":344901,"byte_end":344912,"line_start":272,"line_end":272,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1378},{"krate":0,"index":1379},{"krate":0,"index":1381}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":350460,"byte_end":350471,"line_start":412,"line_end":412,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1385}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":350609,"byte_end":350622,"line_start":416,"line_end":416,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1392},{"krate":0,"index":1393}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":353231,"byte_end":353241,"line_start":502,"line_end":502,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1405}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":357076,"byte_end":357086,"line_start":577,"line_end":577,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1410}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":358321,"byte_end":358331,"line_start":609,"line_end":609,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1417}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":359348,"byte_end":359363,"line_start":637,"line_end":637,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1420}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":359449,"byte_end":359459,"line_start":643,"line_end":643,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1422}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":361092,"byte_end":361098,"line_start":14,"line_end":14,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1460},{"krate":0,"index":1461}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":361688,"byte_end":361694,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1464},{"krate":0,"index":1465}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":362213,"byte_end":362218,"line_start":55,"line_end":55,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1467},{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1470},{"krate":0,"index":1471},{"krate":0,"index":1472},{"krate":0,"index":1473}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":363167,"byte_end":363172,"line_start":102,"line_end":102,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1478},{"krate":0,"index":1479},{"krate":0,"index":1480},{"krate":0,"index":1481}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":369208,"byte_end":369216,"line_start":258,"line_end":258,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1488}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":372677,"byte_end":372683,"line_start":26,"line_end":26,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1534},{"krate":0,"index":1535}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":372927,"byte_end":372933,"line_start":38,"line_end":38,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1540}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":373082,"byte_end":373088,"line_start":47,"line_end":47,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1544}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":373297,"byte_end":373303,"line_start":57,"line_end":57,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1548}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":373429,"byte_end":373435,"line_start":63,"line_end":63,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1551}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":373850,"byte_end":373859,"line_start":83,"line_end":83,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1559},{"krate":0,"index":1560}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":374115,"byte_end":374124,"line_start":95,"line_end":95,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1565}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":374273,"byte_end":374282,"line_start":104,"line_end":104,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1569}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":374530,"byte_end":374539,"line_start":116,"line_end":116,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1573}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":375105,"byte_end":375109,"line_start":140,"line_end":140,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1581}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":376008,"byte_end":376012,"line_start":161,"line_end":161,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1585},{"krate":0,"index":1586}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":376422,"byte_end":376426,"line_start":177,"line_end":177,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1590}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":376575,"byte_end":376579,"line_start":186,"line_end":186,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1594}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":376946,"byte_end":376950,"line_start":200,"line_end":200,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1597}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":377074,"byte_end":377078,"line_start":206,"line_end":206,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1600}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":377665,"byte_end":377672,"line_start":230,"line_end":230,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1608}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":378593,"byte_end":378600,"line_start":251,"line_end":251,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1612},{"krate":0,"index":1613}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":379023,"byte_end":379030,"line_start":267,"line_end":267,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1617}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":379179,"byte_end":379186,"line_start":276,"line_end":276,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1621}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":379568,"byte_end":379575,"line_start":290,"line_end":290,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1624}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":380031,"byte_end":380046,"line_start":313,"line_end":313,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1635},{"krate":0,"index":1636}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":380449,"byte_end":380464,"line_start":331,"line_end":331,"column_start":47,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1641}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":380590,"byte_end":380605,"line_start":340,"line_end":340,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1644}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":380781,"byte_end":380796,"line_start":349,"line_end":349,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1647}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":381335,"byte_end":381348,"line_start":374,"line_end":374,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1657},{"krate":0,"index":1658}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":381886,"byte_end":381899,"line_start":398,"line_end":398,"column_start":47,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1663}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":382023,"byte_end":382036,"line_start":407,"line_end":407,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1666}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":382206,"byte_end":382219,"line_start":416,"line_end":416,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1669}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":382747,"byte_end":382765,"line_start":441,"line_end":441,"column_start":38,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1680},{"krate":0,"index":1681}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":383176,"byte_end":383194,"line_start":459,"line_end":459,"column_start":47,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1686}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":383325,"byte_end":383343,"line_start":468,"line_end":468,"column_start":31,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1689}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":383891,"byte_end":383907,"line_start":493,"line_end":493,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1699},{"krate":0,"index":1700}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":384454,"byte_end":384470,"line_start":517,"line_end":517,"column_start":47,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1705}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":384599,"byte_end":384615,"line_start":526,"line_end":526,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1708}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":387637,"byte_end":387648,"line_start":620,"line_end":620,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1712},{"krate":0,"index":1713},{"krate":0,"index":1714},{"krate":0,"index":1715},{"krate":0,"index":1716},{"krate":0,"index":1717},{"krate":0,"index":1718},{"krate":0,"index":1719},{"krate":0,"index":1720},{"krate":0,"index":1721},{"krate":0,"index":1722},{"krate":0,"index":1723},{"krate":0,"index":1724},{"krate":0,"index":1726},{"krate":0,"index":1729},{"krate":0,"index":1730},{"krate":0,"index":1731},{"krate":0,"index":1732},{"krate":0,"index":1733},{"krate":0,"index":1734}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":394437,"byte_end":394448,"line_start":814,"line_end":814,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1738},{"krate":0,"index":1739},{"krate":0,"index":1740},{"krate":0,"index":1741},{"krate":0,"index":1742},{"krate":0,"index":1743},{"krate":0,"index":1744}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":397046,"byte_end":397057,"line_start":889,"line_end":889,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1748}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":397709,"byte_end":397720,"line_start":914,"line_end":914,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1753}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":398463,"byte_end":398474,"line_start":941,"line_end":941,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1758},{"krate":0,"index":1759}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":398738,"byte_end":398749,"line_start":954,"line_end":954,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1763}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":399015,"byte_end":399026,"line_start":965,"line_end":965,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1767},{"krate":0,"index":1768}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":399297,"byte_end":399308,"line_start":978,"line_end":978,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1772}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":399569,"byte_end":399580,"line_start":989,"line_end":989,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1776}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":399939,"byte_end":399950,"line_start":1004,"line_end":1004,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1780},{"krate":0,"index":1781},{"krate":0,"index":1782},{"krate":0,"index":1783},{"krate":0,"index":1784},{"krate":0,"index":1785},{"krate":0,"index":1786}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":400774,"byte_end":400785,"line_start":1037,"line_end":1037,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1790},{"krate":0,"index":1791},{"krate":0,"index":1792},{"krate":0,"index":1793},{"krate":0,"index":1794},{"krate":0,"index":1795},{"krate":0,"index":1796}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":404370,"byte_end":404381,"line_start":1129,"line_end":1129,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1801},{"krate":0,"index":1802},{"krate":0,"index":1803},{"krate":0,"index":1805},{"krate":0,"index":1806}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":406815,"byte_end":406824,"line_start":1207,"line_end":1207,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1811}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":408222,"byte_end":408233,"line_start":1245,"line_end":1245,"column_start":67,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":1819}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":418669,"byte_end":418678,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1842},{"krate":0,"index":1843},{"krate":0,"index":1845},{"krate":0,"index":1847},{"krate":0,"index":1848}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":422387,"byte_end":422404,"line_start":148,"line_end":148,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1850}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":423692,"byte_end":423709,"line_start":182,"line_end":182,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1852}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":429805,"byte_end":429806,"line_start":388,"line_end":388,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1859}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":430244,"byte_end":430245,"line_start":402,"line_end":402,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1866}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":431501,"byte_end":431505,"line_start":446,"line_end":446,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1877}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":431734,"byte_end":431738,"line_start":454,"line_end":454,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1880}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":431966,"byte_end":431970,"line_start":462,"line_end":462,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1883}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":432195,"byte_end":432199,"line_start":470,"line_end":470,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1886}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":432426,"byte_end":432430,"line_start":478,"line_end":478,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1889}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":432578,"byte_end":432582,"line_start":485,"line_end":485,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1891}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":432826,"byte_end":432830,"line_start":494,"line_end":494,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1893}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":433074,"byte_end":433078,"line_start":503,"line_end":503,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1895}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":433264,"byte_end":433268,"line_start":510,"line_end":510,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1897}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":433454,"byte_end":433458,"line_start":517,"line_end":517,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1899}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":433695,"byte_end":433700,"line_start":527,"line_end":527,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1902}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":433962,"byte_end":433967,"line_start":536,"line_end":536,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1905}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":434228,"byte_end":434233,"line_start":545,"line_end":545,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1908}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":434498,"byte_end":434503,"line_start":554,"line_end":554,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1911}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":434769,"byte_end":434774,"line_start":563,"line_end":563,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1914}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":434987,"byte_end":434992,"line_start":571,"line_end":571,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1916}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":435292,"byte_end":435297,"line_start":581,"line_end":581,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1918}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":435640,"byte_end":435644,"line_start":594,"line_end":594,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1921}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":435945,"byte_end":435949,"line_start":605,"line_end":605,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1924}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":436251,"byte_end":436255,"line_start":616,"line_end":616,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1927}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":436556,"byte_end":436560,"line_start":627,"line_end":627,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1930}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":436861,"byte_end":436865,"line_start":638,"line_end":638,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1933}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":437142,"byte_end":437146,"line_start":649,"line_end":649,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1935}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":437508,"byte_end":437512,"line_start":660,"line_end":660,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1937}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":437909,"byte_end":437913,"line_start":674,"line_end":674,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1940}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":438214,"byte_end":438218,"line_start":685,"line_end":685,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1943}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":438520,"byte_end":438524,"line_start":696,"line_end":696,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1946}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":438825,"byte_end":438829,"line_start":707,"line_end":707,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1949}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":439130,"byte_end":439134,"line_start":718,"line_end":718,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1952}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":439458,"byte_end":439461,"line_start":732,"line_end":732,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1955}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":439730,"byte_end":439733,"line_start":742,"line_end":742,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1958}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":440001,"byte_end":440004,"line_start":752,"line_end":752,"column_start":52,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1961}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":440269,"byte_end":440272,"line_start":762,"line_end":762,"column_start":54,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1964}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":440536,"byte_end":440539,"line_start":772,"line_end":772,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1967}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":440777,"byte_end":440780,"line_start":782,"line_end":782,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1969}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":441005,"byte_end":441008,"line_start":790,"line_end":790,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1971}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":441281,"byte_end":441284,"line_start":801,"line_end":801,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1974}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":441552,"byte_end":441555,"line_start":811,"line_end":811,"column_start":52,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1977}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":441820,"byte_end":441823,"line_start":822,"line_end":822,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1980}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":442093,"byte_end":442096,"line_start":832,"line_end":832,"column_start":54,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1983}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":442360,"byte_end":442363,"line_start":842,"line_end":842,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1986}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":444029,"byte_end":444034,"line_start":896,"line_end":896,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1992}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":445039,"byte_end":445043,"line_start":929,"line_end":929,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1995}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":445153,"byte_end":445157,"line_start":935,"line_end":935,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1998}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":447365,"byte_end":447369,"line_start":993,"line_end":993,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2001}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":449575,"byte_end":449578,"line_start":1049,"line_end":1049,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2004}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":449687,"byte_end":449690,"line_start":1055,"line_end":1055,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2007}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":449909,"byte_end":449914,"line_start":1068,"line_end":1068,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2012}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":450087,"byte_end":450091,"line_start":1077,"line_end":1077,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2015}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":450279,"byte_end":450283,"line_start":1088,"line_end":1088,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2018}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":450496,"byte_end":450500,"line_start":1099,"line_end":1099,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2021}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":450713,"byte_end":450716,"line_start":1110,"line_end":1110,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2024}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":450978,"byte_end":450981,"line_start":1124,"line_end":1124,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2027}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":462631,"byte_end":462643,"line_start":136,"line_end":136,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2075},{"krate":0,"index":2076},{"krate":0,"index":2077},{"krate":0,"index":2078},{"krate":0,"index":2079},{"krate":0,"index":2080},{"krate":0,"index":2081},{"krate":0,"index":2082},{"krate":0,"index":2083},{"krate":0,"index":2084},{"krate":0,"index":2085},{"krate":0,"index":2088},{"krate":0,"index":2089},{"krate":0,"index":2090},{"krate":0,"index":2091},{"krate":0,"index":2092},{"krate":0,"index":2093},{"krate":0,"index":2094},{"krate":0,"index":2095},{"krate":0,"index":2096},{"krate":0,"index":2097},{"krate":0,"index":2098},{"krate":0,"index":2099},{"krate":0,"index":2100},{"krate":0,"index":2101},{"krate":0,"index":2102},{"krate":0,"index":2103},{"krate":0,"index":2104},{"krate":0,"index":2105},{"krate":0,"index":2106},{"krate":0,"index":2107},{"krate":0,"index":2108},{"krate":0,"index":2109},{"krate":0,"index":2110},{"krate":0,"index":2111},{"krate":0,"index":2112},{"krate":0,"index":2113},{"krate":0,"index":2114},{"krate":0,"index":2115},{"krate":0,"index":2116},{"krate":0,"index":2117},{"krate":0,"index":2118},{"krate":0,"index":2119},{"krate":0,"index":2120},{"krate":0,"index":2121},{"krate":0,"index":2122},{"krate":0,"index":2123},{"krate":0,"index":2124},{"krate":0,"index":2125},{"krate":0,"index":2126},{"krate":0,"index":2127},{"krate":0,"index":2128},{"krate":0,"index":2129},{"krate":0,"index":2130},{"krate":0,"index":2131},{"krate":0,"index":2132},{"krate":0,"index":2133},{"krate":0,"index":2134},{"krate":0,"index":2135},{"krate":0,"index":2136},{"krate":0,"index":2137},{"krate":0,"index":2138},{"krate":0,"index":2139},{"krate":0,"index":2140},{"krate":0,"index":2141},{"krate":0,"index":2142},{"krate":0,"index":2143},{"krate":0,"index":2144},{"krate":0,"index":2147},{"krate":0,"index":2149}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":487467,"byte_end":487479,"line_start":824,"line_end":824,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2152},{"krate":0,"index":2153},{"krate":0,"index":2154},{"krate":0,"index":2155},{"krate":0,"index":2156},{"krate":0,"index":2157}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":488012,"byte_end":488024,"line_start":846,"line_end":846,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2159},{"krate":0,"index":2160},{"krate":0,"index":2161},{"krate":0,"index":2162},{"krate":0,"index":2163}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":502345,"byte_end":502356,"line_start":67,"line_end":67,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2204},{"krate":0,"index":2206}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":505372,"byte_end":505389,"line_start":153,"line_end":153,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2208}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":506784,"byte_end":506799,"line_start":192,"line_end":192,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2216},{"krate":0,"index":2217}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":514669,"byte_end":514677,"line_start":376,"line_end":376,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2232},{"krate":0,"index":2233},{"krate":0,"index":2234}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":521325,"byte_end":521331,"line_start":566,"line_end":566,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2262},{"krate":0,"index":2263}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":521799,"byte_end":521805,"line_start":588,"line_end":588,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2266}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":530194,"byte_end":530202,"line_start":826,"line_end":826,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2305},{"krate":0,"index":2306},{"krate":0,"index":2307}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":531339,"byte_end":531347,"line_start":867,"line_end":867,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2310},{"krate":0,"index":2311},{"krate":0,"index":2312},{"krate":0,"index":2313},{"krate":0,"index":2314},{"krate":0,"index":2315},{"krate":0,"index":2316}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":532168,"byte_end":532176,"line_start":899,"line_end":899,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2319},{"krate":0,"index":2320},{"krate":0,"index":2321},{"krate":0,"index":2322},{"krate":0,"index":2323},{"krate":0,"index":2324}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":5037,"byte_end":5042,"line_start":146,"line_end":146,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":55}},{"kind":"Mod","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":5435,"byte_end":5439,"line_start":165,"line_end":165,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":128}},{"kind":"Mod","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/mod.rs","byte_start":30394,"byte_end":30396,"line_start":2,"line_end":2,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":129}},{"kind":"Mod","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/mod.rs","byte_start":30406,"byte_end":30411,"line_start":3,"line_end":3,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":143}},{"kind":"Mod","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":5480,"byte_end":5488,"line_start":168,"line_end":168,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":148}},{"kind":"Mod","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/mod.rs","byte_start":36838,"byte_end":36846,"line_start":29,"line_end":29,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":238}},{"kind":"Mod","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":5514,"byte_end":5516,"line_start":171,"line_end":171,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":426}},{"kind":"Mod","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":5562,"byte_end":5566,"line_start":174,"line_end":174,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":524}},{"kind":"Mod","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":7707,"byte_end":7710,"line_start":219,"line_end":219,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":704}},{"kind":"Mod","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":7897,"byte_end":7900,"line_start":227,"line_end":227,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":956}},{"kind":"Mod","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":8033,"byte_end":8037,"line_start":233,"line_end":233,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":1060}},{"kind":"Mod","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/lib.rs","byte_start":8079,"byte_end":8082,"line_start":235,"line_end":235,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":1288}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":19853,"byte_end":19869,"line_start":194,"line_end":194,"column_start":6,"column_end":22},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":2460},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":20567,"byte_end":20580,"line_start":217,"line_end":217,"column_start":6,"column_end":19},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":2523},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":21356,"byte_end":21369,"line_start":245,"line_end":245,"column_start":6,"column_end":19},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2489},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":22146,"byte_end":22160,"line_start":273,"line_end":273,"column_start":6,"column_end":20},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":2494},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":22539,"byte_end":22549,"line_start":288,"line_end":288,"column_start":6,"column_end":16},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":2528},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":22906,"byte_end":22916,"line_start":302,"line_end":302,"column_start":26,"column_end":36},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2439},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":23032,"byte_end":23047,"line_start":308,"line_end":308,"column_start":28,"column_end":43},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2554},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":23176,"byte_end":23191,"line_start":314,"line_end":314,"column_start":36,"column_end":51},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2554},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":23441,"byte_end":23457,"line_start":323,"line_end":323,"column_start":32,"column_end":48},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2460},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":23760,"byte_end":23770,"line_start":335,"line_end":335,"column_start":23,"column_end":33},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2439},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":24231,"byte_end":24241,"line_start":348,"line_end":348,"column_start":16,"column_end":26},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2439},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":24694,"byte_end":24710,"line_start":361,"line_end":361,"column_start":23,"column_end":39},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2460},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":26332,"byte_end":26348,"line_start":404,"line_end":404,"column_start":16,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2460},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":26376,"byte_end":26390,"line_start":406,"line_end":406,"column_start":23,"column_end":37},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":2494},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":27425,"byte_end":27439,"line_start":438,"line_end":438,"column_start":16,"column_end":30},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":2494},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":27644,"byte_end":27657,"line_start":447,"line_end":447,"column_start":23,"column_end":36},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2489},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":28118,"byte_end":28131,"line_start":465,"line_end":465,"column_start":16,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2489},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":28336,"byte_end":28349,"line_start":474,"line_end":474,"column_start":23,"column_end":36},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2523},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":28796,"byte_end":28809,"line_start":486,"line_end":486,"column_start":16,"column_end":29},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2523},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":29014,"byte_end":29024,"line_start":495,"line_end":495,"column_start":23,"column_end":33},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":2528},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":29407,"byte_end":29417,"line_start":505,"line_end":505,"column_start":16,"column_end":26},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":2528},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/error.rs","byte_start":29445,"byte_end":29460,"line_start":507,"line_end":507,"column_start":23,"column_end":38},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":2554},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":34254,"byte_end":34262,"line_start":86,"line_end":86,"column_start":6,"column_end":14},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":34832,"byte_end":34840,"line_start":105,"line_end":105,"column_start":38,"column_end":46},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":130},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/math/nq.rs","byte_start":34989,"byte_end":34997,"line_start":112,"line_end":112,"column_start":38,"column_end":46},"kind":{"Impl":{"id":24}},"from":{"krate":19,"index":20},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":67151,"byte_end":67158,"line_start":232,"line_end":232,"column_start":19,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":2600},"to":{"krate":0,"index":277}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":67937,"byte_end":67945,"line_start":268,"line_end":268,"column_start":23,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":130},"to":{"krate":0,"index":277}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/colorops.rs","byte_start":68484,"byte_end":68492,"line_start":292,"line_end":292,"column_start":32,"column_end":40},"kind":{"Impl":{"id":27}},"from":{"krate":19,"index":20},"to":{"krate":0,"index":277}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/imageops/sample.rs","byte_start":83706,"byte_end":83718,"line_start":363,"line_end":363,"column_start":34,"column_end":46},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":349},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":102604,"byte_end":102610,"line_start":68,"line_end":68,"column_start":15,"column_end":21},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":448},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":103992,"byte_end":103998,"line_start":115,"line_end":115,"column_start":6,"column_end":12},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":448},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/reader.rs","byte_start":104784,"byte_end":104790,"line_start":137,"line_end":137,"column_start":25,"column_end":31},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":448},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/io/free_functions.rs","byte_start":119911,"byte_end":119921,"line_start":302,"line_end":302,"column_start":26,"column_end":36},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":2439},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":124924,"byte_end":124936,"line_start":124,"line_end":124,"column_start":6,"column_end":18},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":2635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":137531,"byte_end":137534,"line_start":437,"line_end":437,"column_start":6,"column_end":9},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":2657},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":137792,"byte_end":137803,"line_start":452,"line_end":452,"column_start":14,"column_end":25},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":2624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":154958,"byte_end":154969,"line_start":873,"line_end":873,"column_start":22,"column_end":33},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":2624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":160821,"byte_end":160825,"line_start":1028,"line_end":1028,"column_start":24,"column_end":28},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":2685},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":166410,"byte_end":166417,"line_start":1161,"line_end":1161,"column_start":24,"column_end":31},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":2698},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":170793,"byte_end":170804,"line_start":1275,"line_end":1275,"column_start":40,"column_end":51},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":2624},"to":{"krate":2,"index":2223}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":171413,"byte_end":171424,"line_start":1294,"line_end":1294,"column_start":43,"column_end":54},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":2624},"to":{"krate":2,"index":2227}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":172028,"byte_end":172032,"line_start":1312,"line_end":1312,"column_start":45,"column_end":49},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":2685},"to":{"krate":0,"index":2267}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":173279,"byte_end":173286,"line_start":1357,"line_end":1357,"column_start":45,"column_end":52},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":2698},"to":{"krate":0,"index":2267}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":174553,"byte_end":174560,"line_start":1402,"line_end":1402,"column_start":41,"column_end":48},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":2698},"to":{"krate":0,"index":2280}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":175455,"byte_end":175465,"line_start":1431,"line_end":1431,"column_start":22,"column_end":32},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":2439},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":175617,"byte_end":175640,"line_start":1435,"line_end":1435,"column_start":31,"column_end":54},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":2760},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":175848,"byte_end":175871,"line_start":1440,"line_end":1440,"column_start":31,"column_end":54},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":2760},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":176445,"byte_end":176450,"line_start":1454,"line_end":1454,"column_start":23,"column_end":28},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":2711},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":177385,"byte_end":177390,"line_start":1478,"line_end":1478,"column_start":23,"column_end":28},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":2711},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/flat.rs","byte_start":177415,"byte_end":177425,"line_start":1480,"line_end":1480,"column_start":21,"column_end":31},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":2735},"to":{"krate":2,"index":1734}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/decoder.rs","byte_start":186319,"byte_end":186330,"line_start":100,"line_end":100,"column_start":23,"column_end":34},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":775},"to":{"krate":2,"index":5040}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/decoder.rs","byte_start":188253,"byte_end":188265,"line_start":158,"line_end":158,"column_start":23,"column_end":35},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":2818},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/decoder.rs","byte_start":190336,"byte_end":190346,"line_start":195,"line_end":195,"column_start":29,"column_end":39},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":2439},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/decoder.rs","byte_start":190502,"byte_end":190514,"line_start":201,"line_end":201,"column_start":23,"column_end":35},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":2818},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/decoder.rs","byte_start":190861,"byte_end":190878,"line_start":216,"line_end":216,"column_start":23,"column_end":40},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":2895},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/decoder.rs","byte_start":199535,"byte_end":199543,"line_start":479,"line_end":479,"column_start":6,"column_end":14},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2926},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/decoder.rs","byte_start":200929,"byte_end":200938,"line_start":523,"line_end":523,"column_start":6,"column_end":15},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":2936},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/decoder.rs","byte_start":202203,"byte_end":202218,"line_start":578,"line_end":578,"column_start":32,"column_end":47},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":848},"to":{"krate":2,"index":5040}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/decoder.rs","byte_start":204074,"byte_end":204084,"line_start":630,"line_end":630,"column_start":22,"column_end":32},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":815},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/decoder.rs","byte_start":235988,"byte_end":235997,"line_start":1420,"line_end":1420,"column_start":18,"column_end":27},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":890},"to":{"krate":1,"index":2993}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/decoder.rs","byte_start":236417,"byte_end":236427,"line_start":1434,"line_end":1434,"column_start":52,"column_end":62},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":815},"to":{"krate":0,"index":2235}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/decoder.rs","byte_start":237102,"byte_end":237112,"line_start":1459,"line_end":1459,"column_start":55,"column_end":65},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":815},"to":{"krate":0,"index":2248}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/encoder.rs","byte_start":238871,"byte_end":238881,"line_start":28,"line_end":28,"column_start":25,"column_end":35},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":931},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/bmp/encoder.rs","byte_start":245996,"byte_end":246006,"line_start":225,"line_end":225,"column_start":37,"column_end":47},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":931},"to":{"krate":0,"index":2257}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":251717,"byte_end":251727,"line_start":51,"line_end":51,"column_start":15,"column_end":25},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":991},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":252203,"byte_end":252212,"line_start":65,"line_end":65,"column_start":18,"column_end":27},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":997},"to":{"krate":1,"index":2993}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":252625,"byte_end":252635,"line_start":79,"line_end":79,"column_start":45,"column_end":55},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":991},"to":{"krate":0,"index":2235}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":255589,"byte_end":255605,"line_start":156,"line_end":156,"column_start":15,"column_end":31},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1016},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":256217,"byte_end":256233,"line_start":178,"line_end":178,"column_start":28,"column_end":44},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1016},"to":{"krate":2,"index":5040}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":260949,"byte_end":260959,"line_start":286,"line_end":286,"column_start":49,"column_end":59},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":991},"to":{"krate":0,"index":2254}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":261452,"byte_end":261462,"line_start":309,"line_end":309,"column_start":16,"column_end":26},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1035},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/gif.rs","byte_start":265616,"byte_end":265626,"line_start":421,"line_end":421,"column_start":6,"column_end":16},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2439},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","byte_start":267184,"byte_end":267195,"line_start":18,"line_end":18,"column_start":15,"column_end":26},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1085},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","byte_start":268873,"byte_end":268883,"line_start":67,"line_end":67,"column_start":18,"column_end":28},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1093},"to":{"krate":1,"index":2993}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","byte_start":269296,"byte_end":269307,"line_start":81,"line_end":81,"column_start":45,"column_end":56},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1085},"to":{"krate":0,"index":2235}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","byte_start":271053,"byte_end":271062,"line_start":141,"line_end":141,"column_start":6,"column_end":15},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":3108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/decoder.rs","byte_start":271320,"byte_end":271330,"line_start":152,"line_end":152,"column_start":6,"column_end":16},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":2439},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":297553,"byte_end":297562,"line_start":169,"line_end":169,"column_start":25,"column_end":34},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1177},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":301026,"byte_end":301038,"line_start":301,"line_end":301,"column_start":6,"column_end":18},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2983},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":301376,"byte_end":301388,"line_start":313,"line_end":313,"column_start":18,"column_end":30},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2983},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":302215,"byte_end":302226,"line_start":349,"line_end":349,"column_start":20,"column_end":31},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1198},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/jpeg/encoder.rs","byte_start":313522,"byte_end":313533,"line_start":677,"line_end":677,"column_start":37,"column_end":48},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1198},"to":{"krate":0,"index":2257}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":336065,"byte_end":336074,"line_start":45,"line_end":45,"column_start":15,"column_end":24},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":336832,"byte_end":336841,"line_start":69,"line_end":69,"column_start":24,"column_end":33},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1330},"to":{"krate":1,"index":2993}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":338206,"byte_end":338216,"line_start":120,"line_end":120,"column_start":15,"column_end":25},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1344},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":342830,"byte_end":342840,"line_start":209,"line_end":209,"column_start":45,"column_end":55},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1344},"to":{"krate":0,"index":2235}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":344901,"byte_end":344912,"line_start":272,"line_end":272,"column_start":15,"column_end":26},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1368},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":350460,"byte_end":350471,"line_start":412,"line_end":412,"column_start":49,"column_end":60},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1368},"to":{"krate":0,"index":2254}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":350609,"byte_end":350622,"line_start":416,"line_end":416,"column_start":36,"column_end":49},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1386},"to":{"krate":2,"index":5040}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":353231,"byte_end":353241,"line_start":502,"line_end":502,"column_start":16,"column_end":26},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1394},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":357076,"byte_end":357086,"line_start":577,"line_end":577,"column_start":33,"column_end":43},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1394},"to":{"krate":0,"index":2257}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":358321,"byte_end":358331,"line_start":609,"line_end":609,"column_start":6,"column_end":16},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2439},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":359348,"byte_end":359363,"line_start":637,"line_end":637,"column_start":18,"column_end":33},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2998},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/codecs/png.rs","byte_start":359449,"byte_end":359459,"line_start":643,"line_end":643,"column_start":18,"column_end":28},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":3024},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":361092,"byte_end":361098,"line_start":14,"line_end":14,"column_start":10,"column_end":16},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":361688,"byte_end":361694,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1455},"to":{"krate":2,"index":5040}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":362213,"byte_end":362218,"line_start":55,"line_end":55,"column_start":6,"column_end":11},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":3050},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":363167,"byte_end":363172,"line_start":102,"line_end":102,"column_start":6,"column_end":11},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":3057},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/animation.rs","byte_start":369208,"byte_end":369216,"line_start":258,"line_end":258,"column_start":22,"column_end":30},"kind":{"Impl":{"id":98}},"from":{"krate":2,"index":32764},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":372677,"byte_end":372683,"line_start":26,"line_end":26,"column_start":38,"column_end":44},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1527},"to":{"krate":2,"index":5040}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":372927,"byte_end":372933,"line_start":38,"line_end":38,"column_start":47,"column_end":53},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1527},"to":{"krate":2,"index":4994}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":373082,"byte_end":373088,"line_start":47,"line_end":47,"column_start":49,"column_end":55},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1527},"to":{"krate":2,"index":4971}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":373297,"byte_end":373303,"line_start":57,"line_end":57,"column_start":26,"column_end":32},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1527},"to":{"krate":2,"index":1669}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":373429,"byte_end":373435,"line_start":63,"line_end":63,"column_start":31,"column_end":37},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1527},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":373850,"byte_end":373859,"line_start":83,"line_end":83,"column_start":38,"column_end":47},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1552},"to":{"krate":2,"index":5040}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":374115,"byte_end":374124,"line_start":95,"line_end":95,"column_start":47,"column_end":56},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1552},"to":{"krate":2,"index":4994}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":374273,"byte_end":374282,"line_start":104,"line_end":104,"column_start":49,"column_end":58},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1552},"to":{"krate":2,"index":4971}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":374530,"byte_end":374539,"line_start":116,"line_end":116,"column_start":31,"column_end":40},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1552},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":375105,"byte_end":375109,"line_start":140,"line_end":140,"column_start":25,"column_end":29},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1574},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":376008,"byte_end":376012,"line_start":161,"line_end":161,"column_start":38,"column_end":42},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1574},"to":{"krate":2,"index":5040}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":376422,"byte_end":376426,"line_start":177,"line_end":177,"column_start":47,"column_end":51},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1574},"to":{"krate":2,"index":4994}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":376575,"byte_end":376579,"line_start":186,"line_end":186,"column_start":49,"column_end":53},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1574},"to":{"krate":2,"index":4971}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":376946,"byte_end":376950,"line_start":200,"line_end":200,"column_start":26,"column_end":30},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1574},"to":{"krate":2,"index":1669}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":377074,"byte_end":377078,"line_start":206,"line_end":206,"column_start":31,"column_end":35},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1574},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":377665,"byte_end":377672,"line_start":230,"line_end":230,"column_start":25,"column_end":32},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1601},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":378593,"byte_end":378600,"line_start":251,"line_end":251,"column_start":38,"column_end":45},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1601},"to":{"krate":2,"index":5040}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":379023,"byte_end":379030,"line_start":267,"line_end":267,"column_start":47,"column_end":54},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1601},"to":{"krate":2,"index":4994}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":379179,"byte_end":379186,"line_start":276,"line_end":276,"column_start":49,"column_end":56},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1601},"to":{"krate":2,"index":4971}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":379568,"byte_end":379575,"line_start":290,"line_end":290,"column_start":31,"column_end":38},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1601},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":380031,"byte_end":380046,"line_start":313,"line_end":313,"column_start":38,"column_end":53},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1625},"to":{"krate":2,"index":5040}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":380449,"byte_end":380464,"line_start":331,"line_end":331,"column_start":47,"column_end":62},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1625},"to":{"krate":2,"index":4994}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":380590,"byte_end":380605,"line_start":340,"line_end":340,"column_start":26,"column_end":41},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1625},"to":{"krate":2,"index":1669}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":380781,"byte_end":380796,"line_start":349,"line_end":349,"column_start":31,"column_end":46},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1625},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":381335,"byte_end":381348,"line_start":374,"line_end":374,"column_start":38,"column_end":51},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1648},"to":{"krate":2,"index":5040}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":381886,"byte_end":381899,"line_start":398,"line_end":398,"column_start":47,"column_end":60},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1648},"to":{"krate":2,"index":4994}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":382023,"byte_end":382036,"line_start":407,"line_end":407,"column_start":26,"column_end":39},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1648},"to":{"krate":2,"index":1669}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":382206,"byte_end":382219,"line_start":416,"line_end":416,"column_start":31,"column_end":44},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1648},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":382747,"byte_end":382765,"line_start":441,"line_end":441,"column_start":38,"column_end":56},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1670},"to":{"krate":2,"index":5040}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":383176,"byte_end":383194,"line_start":459,"line_end":459,"column_start":47,"column_end":65},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1670},"to":{"krate":2,"index":4994}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":383325,"byte_end":383343,"line_start":468,"line_end":468,"column_start":31,"column_end":49},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1670},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":383891,"byte_end":383907,"line_start":493,"line_end":493,"column_start":38,"column_end":54},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1690},"to":{"krate":2,"index":5040}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":384454,"byte_end":384470,"line_start":517,"line_end":517,"column_start":47,"column_end":63},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1690},"to":{"krate":2,"index":4994}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":384599,"byte_end":384615,"line_start":526,"line_end":526,"column_start":31,"column_end":47},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1690},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":387637,"byte_end":387648,"line_start":620,"line_end":620,"column_start":20,"column_end":31},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":3077},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":394437,"byte_end":394448,"line_start":814,"line_end":814,"column_start":20,"column_end":31},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":3077},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":397046,"byte_end":397057,"line_start":889,"line_end":889,"column_start":20,"column_end":31},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":3077},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":397709,"byte_end":397720,"line_start":914,"line_end":914,"column_start":20,"column_end":31},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":3077},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":398463,"byte_end":398474,"line_start":941,"line_end":941,"column_start":30,"column_end":41},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":3077},"to":{"krate":2,"index":2142}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":398738,"byte_end":398749,"line_start":954,"line_end":954,"column_start":33,"column_end":44},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":3077},"to":{"krate":2,"index":2155}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":399015,"byte_end":399026,"line_start":965,"line_end":965,"column_start":42,"column_end":53},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":3077},"to":{"krate":2,"index":2223}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":399297,"byte_end":399308,"line_start":978,"line_end":978,"column_start":45,"column_end":56},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":3077},"to":{"krate":2,"index":2227}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":399569,"byte_end":399580,"line_start":989,"line_end":989,"column_start":30,"column_end":41},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":3077},"to":{"krate":2,"index":1669}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":399939,"byte_end":399950,"line_start":1004,"line_end":1004,"column_start":41,"column_end":52},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":3077},"to":{"krate":0,"index":2267}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":400774,"byte_end":400785,"line_start":1037,"line_end":1037,"column_start":37,"column_end":48},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":3077},"to":{"krate":0,"index":2280}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":404370,"byte_end":404381,"line_start":1129,"line_end":1129,"column_start":26,"column_end":37},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":3077},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":406815,"byte_end":406824,"line_start":1207,"line_end":1207,"column_start":6,"column_end":15},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1822},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/buffer.rs","byte_start":408222,"byte_end":408233,"line_start":1245,"line_end":1245,"column_start":67,"column_end":78},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":3077},"to":{"krate":0,"index":1807}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":418669,"byte_end":418678,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":3108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":422387,"byte_end":422404,"line_start":148,"line_end":148,"column_start":6,"column_end":23},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":3147},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":423692,"byte_end":423709,"line_start":182,"line_end":182,"column_start":26,"column_end":43},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":3147},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":429805,"byte_end":429806,"line_start":388,"line_end":388,"column_start":32,"column_end":33},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1858},"to":{"krate":0,"index":1854}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":430244,"byte_end":430245,"line_start":402,"line_end":402,"column_start":29,"column_end":30},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1865},"to":{"krate":0,"index":1860}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":431501,"byte_end":431505,"line_start":446,"line_end":446,"column_start":53,"column_end":57},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":3571},"to":{"krate":0,"index":1854}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":431734,"byte_end":431738,"line_start":454,"line_end":454,"column_start":53,"column_end":57},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":3571},"to":{"krate":0,"index":1854}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":431966,"byte_end":431970,"line_start":462,"line_end":462,"column_start":52,"column_end":56},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":3571},"to":{"krate":0,"index":1854}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":432195,"byte_end":432199,"line_start":470,"line_end":470,"column_start":52,"column_end":56},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":3571},"to":{"krate":0,"index":1854}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":432426,"byte_end":432430,"line_start":478,"line_end":478,"column_start":54,"column_end":58},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":3571},"to":{"krate":0,"index":1854}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":432578,"byte_end":432582,"line_start":485,"line_end":485,"column_start":31,"column_end":35},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":3571},"to":{"krate":0,"index":1854}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":432826,"byte_end":432830,"line_start":494,"line_end":494,"column_start":30,"column_end":34},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":3571},"to":{"krate":0,"index":1854}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":433074,"byte_end":433078,"line_start":503,"line_end":503,"column_start":31,"column_end":35},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":3571},"to":{"krate":0,"index":1854}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":433264,"byte_end":433268,"line_start":510,"line_end":510,"column_start":30,"column_end":34},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":3571},"to":{"krate":0,"index":1854}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":433454,"byte_end":433458,"line_start":517,"line_end":517,"column_start":32,"column_end":36},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":3571},"to":{"krate":0,"index":1854}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":433695,"byte_end":433700,"line_start":527,"line_end":527,"column_start":53,"column_end":58},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":3658},"to":{"krate":0,"index":1854}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":433962,"byte_end":433967,"line_start":536,"line_end":536,"column_start":53,"column_end":58},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":3658},"to":{"krate":0,"index":1854}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":434228,"byte_end":434233,"line_start":545,"line_end":545,"column_start":52,"column_end":57},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":3658},"to":{"krate":0,"index":1854}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":434498,"byte_end":434503,"line_start":554,"line_end":554,"column_start":52,"column_end":57},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":3658},"to":{"krate":0,"index":1854}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":434769,"byte_end":434774,"line_start":563,"line_end":563,"column_start":53,"column_end":58},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":3658},"to":{"krate":0,"index":1854}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":434987,"byte_end":434992,"line_start":571,"line_end":571,"column_start":32,"column_end":37},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":3658},"to":{"krate":0,"index":1854}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":435292,"byte_end":435297,"line_start":581,"line_end":581,"column_start":31,"column_end":36},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3658},"to":{"krate":0,"index":1854}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":435640,"byte_end":435644,"line_start":594,"line_end":594,"column_start":52,"column_end":56},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3600},"to":{"krate":0,"index":1854}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":435945,"byte_end":435949,"line_start":605,"line_end":605,"column_start":52,"column_end":56},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":3600},"to":{"krate":0,"index":1854}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":436251,"byte_end":436255,"line_start":616,"line_end":616,"column_start":53,"column_end":57},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":3600},"to":{"krate":0,"index":1854}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":436556,"byte_end":436560,"line_start":627,"line_end":627,"column_start":54,"column_end":58},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3600},"to":{"krate":0,"index":1854}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":436861,"byte_end":436865,"line_start":638,"line_end":638,"column_start":53,"column_end":57},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":3600},"to":{"krate":0,"index":1854}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":437142,"byte_end":437146,"line_start":649,"line_end":649,"column_start":31,"column_end":35},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":3600},"to":{"krate":0,"index":1854}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":437508,"byte_end":437512,"line_start":660,"line_end":660,"column_start":30,"column_end":34},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":3600},"to":{"krate":0,"index":1854}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":437909,"byte_end":437913,"line_start":674,"line_end":674,"column_start":52,"column_end":56},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":3629},"to":{"krate":0,"index":1854}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":438214,"byte_end":438218,"line_start":685,"line_end":685,"column_start":52,"column_end":56},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":3629},"to":{"krate":0,"index":1854}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":438520,"byte_end":438524,"line_start":696,"line_end":696,"column_start":53,"column_end":57},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3629},"to":{"krate":0,"index":1854}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":438825,"byte_end":438829,"line_start":707,"line_end":707,"column_start":54,"column_end":58},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3629},"to":{"krate":0,"index":1854}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":439130,"byte_end":439134,"line_start":718,"line_end":718,"column_start":53,"column_end":57},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3629},"to":{"krate":0,"index":1854}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":439458,"byte_end":439461,"line_start":732,"line_end":732,"column_start":53,"column_end":56},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3513},"to":{"krate":0,"index":1854}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":439730,"byte_end":439733,"line_start":742,"line_end":742,"column_start":53,"column_end":56},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":3513},"to":{"krate":0,"index":1854}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":440001,"byte_end":440004,"line_start":752,"line_end":752,"column_start":52,"column_end":55},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":3513},"to":{"krate":0,"index":1854}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":440269,"byte_end":440272,"line_start":762,"line_end":762,"column_start":54,"column_end":57},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":3513},"to":{"krate":0,"index":1854}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":440536,"byte_end":440539,"line_start":772,"line_end":772,"column_start":53,"column_end":56},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":3513},"to":{"krate":0,"index":1854}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":440777,"byte_end":440780,"line_start":782,"line_end":782,"column_start":30,"column_end":33},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":3513},"to":{"krate":0,"index":1854}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":441005,"byte_end":441008,"line_start":790,"line_end":790,"column_start":29,"column_end":32},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":3513},"to":{"krate":0,"index":1854}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":441281,"byte_end":441284,"line_start":801,"line_end":801,"column_start":53,"column_end":56},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":3542},"to":{"krate":0,"index":1854}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":441552,"byte_end":441555,"line_start":811,"line_end":811,"column_start":52,"column_end":55},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":3542},"to":{"krate":0,"index":1854}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":441820,"byte_end":441823,"line_start":822,"line_end":822,"column_start":53,"column_end":56},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":3542},"to":{"krate":0,"index":1854}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":442093,"byte_end":442096,"line_start":832,"line_end":832,"column_start":54,"column_end":57},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":3542},"to":{"krate":0,"index":1854}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":442360,"byte_end":442363,"line_start":842,"line_end":842,"column_start":53,"column_end":56},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":3542},"to":{"krate":0,"index":1854}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":444029,"byte_end":444034,"line_start":896,"line_end":896,"column_start":30,"column_end":35},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":3658},"to":{"krate":0,"index":1988}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":445039,"byte_end":445043,"line_start":929,"line_end":929,"column_start":30,"column_end":34},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":3571},"to":{"krate":0,"index":1988}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":445153,"byte_end":445157,"line_start":935,"line_end":935,"column_start":30,"column_end":34},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":3600},"to":{"krate":0,"index":1988}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":447365,"byte_end":447369,"line_start":993,"line_end":993,"column_start":30,"column_end":34},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":3629},"to":{"krate":0,"index":1988}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":449575,"byte_end":449578,"line_start":1049,"line_end":1049,"column_start":30,"column_end":33},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":3513},"to":{"krate":0,"index":1988}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":449687,"byte_end":449690,"line_start":1055,"line_end":1055,"column_start":30,"column_end":33},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":3542},"to":{"krate":0,"index":1988}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":449909,"byte_end":449914,"line_start":1068,"line_end":1068,"column_start":31,"column_end":36},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":3658},"to":{"krate":0,"index":2008}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":450087,"byte_end":450091,"line_start":1077,"line_end":1077,"column_start":31,"column_end":35},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":3571},"to":{"krate":0,"index":2008}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":450279,"byte_end":450283,"line_start":1088,"line_end":1088,"column_start":31,"column_end":35},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":3600},"to":{"krate":0,"index":2008}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":450496,"byte_end":450500,"line_start":1099,"line_end":1099,"column_start":31,"column_end":35},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":3629},"to":{"krate":0,"index":2008}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":450713,"byte_end":450716,"line_start":1110,"line_end":1110,"column_start":31,"column_end":34},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":3513},"to":{"krate":0,"index":2008}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/color.rs","byte_start":450978,"byte_end":450981,"line_start":1124,"line_end":1124,"column_start":31,"column_end":34},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":3542},"to":{"krate":0,"index":2008}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":462631,"byte_end":462643,"line_start":136,"line_end":136,"column_start":6,"column_end":18},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":3738},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":487467,"byte_end":487479,"line_start":824,"line_end":824,"column_start":27,"column_end":39},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":3738},"to":{"krate":0,"index":2267}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/dynimage.rs","byte_start":488012,"byte_end":488024,"line_start":846,"line_end":846,"column_start":23,"column_end":35},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":3738},"to":{"krate":0,"index":2280}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":502345,"byte_end":502356,"line_start":67,"line_end":67,"column_start":6,"column_end":17},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":3771},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":505372,"byte_end":505389,"line_start":153,"line_end":153,"column_start":28,"column_end":45},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":3816},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":506784,"byte_end":506799,"line_start":192,"line_end":192,"column_start":6,"column_end":21},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":2209},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":514669,"byte_end":514677,"line_start":376,"line_end":376,"column_start":6,"column_end":14},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":3843},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":515183,"byte_end":515188,"line_start":396,"line_end":396,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":1976},"to":{"krate":0,"index":2235}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":518884,"byte_end":518896,"line_start":493,"line_end":493,"column_start":32,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":2235},"to":{"krate":0,"index":2248}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":518903,"byte_end":518908,"line_start":493,"line_end":493,"column_start":51,"column_end":56},"kind":"SuperTrait","from":{"krate":2,"index":1976},"to":{"krate":0,"index":2248}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":521325,"byte_end":521331,"line_start":566,"line_end":566,"column_start":44,"column_end":50},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":3858},"to":{"krate":2,"index":5040}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":521799,"byte_end":521805,"line_start":588,"line_end":588,"column_start":27,"column_end":33},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":3858},"to":{"krate":2,"index":1669}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":524378,"byte_end":524394,"line_start":675,"line_end":675,"column_start":25,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":2267},"to":{"krate":0,"index":2280}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":530194,"byte_end":530202,"line_start":826,"line_end":826,"column_start":9,"column_end":17},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":2292},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":531339,"byte_end":531347,"line_start":867,"line_end":867,"column_start":30,"column_end":38},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":2292},"to":{"krate":0,"index":2267}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/image.rs","byte_start":532168,"byte_end":532176,"line_start":899,"line_end":899,"column_start":26,"column_end":34},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":2292},"to":{"krate":0,"index":2280}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":544203,"byte_end":544218,"line_start":12,"line_end":12,"column_start":35,"column_end":50},"kind":"SuperTrait","from":{"krate":0,"index":2420},"to":{"krate":0,"index":2340}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":544572,"byte_end":544576,"line_start":30,"line_end":30,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":1981},"to":{"krate":0,"index":2346}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":544579,"byte_end":544586,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"kind":"SuperTrait","from":{"krate":16,"index":175},"to":{"krate":0,"index":2346}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":544589,"byte_end":544592,"line_start":30,"line_end":30,"column_start":39,"column_end":42},"kind":"SuperTrait","from":{"krate":16,"index":615},"to":{"krate":0,"index":2346}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":544595,"byte_end":544605,"line_start":30,"line_end":30,"column_start":45,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":1734},"to":{"krate":0,"index":2346}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":544614,"byte_end":544619,"line_start":30,"line_end":30,"column_start":64,"column_end":69},"kind":"SuperTrait","from":{"krate":2,"index":1669},"to":{"krate":0,"index":2346}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":544622,"byte_end":544629,"line_start":30,"line_end":30,"column_start":72,"column_end":79},"kind":"SuperTrait","from":{"krate":16,"index":92},"to":{"krate":0,"index":2346}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":545105,"byte_end":545110,"line_start":47,"line_end":47,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":1976},"to":{"krate":0,"index":2359}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":545113,"byte_end":545120,"line_start":47,"line_end":47,"column_start":32,"column_end":39},"kind":"SuperTrait","from":{"krate":16,"index":92},"to":{"krate":0,"index":2359}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":545123,"byte_end":545130,"line_start":47,"line_end":47,"column_start":42,"column_end":49},"kind":"SuperTrait","from":{"krate":16,"index":175},"to":{"krate":0,"index":2359}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":545679,"byte_end":545686,"line_start":71,"line_end":71,"column_start":17,"column_end":24},"kind":"SuperTrait","from":{"krate":16,"index":92},"to":{"krate":0,"index":2368}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":545689,"byte_end":545696,"line_start":71,"line_end":71,"column_start":27,"column_end":34},"kind":"SuperTrait","from":{"krate":16,"index":175},"to":{"krate":0,"index":2368}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":546471,"byte_end":546475,"line_start":105,"line_end":105,"column_start":18,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":1981},"to":{"krate":0,"index":2377}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.11/./src/traits.rs","byte_start":546478,"byte_end":546483,"line_start":105,"line_end":105,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1669},"to":{"krate":0,"index":2377}}]}