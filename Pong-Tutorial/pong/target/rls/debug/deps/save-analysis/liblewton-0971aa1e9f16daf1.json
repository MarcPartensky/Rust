{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1","program":"/Users/marcpartensky/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","lewton","/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--crate-type","staticlib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"ogg\"","-C","metadata=0971aa1e9f16daf1","-C","extra-filename=-0971aa1e9f16daf1","--out-dir","/Users/marcpartensky/Programs/Rust/Pong-Tutorial/pong/target/rls/debug/deps","-L","dependency=/Users/marcpartensky/Programs/Rust/Pong-Tutorial/pong/target/rls/debug/deps","--extern","byteorder=/Users/marcpartensky/Programs/Rust/Pong-Tutorial/pong/target/rls/debug/deps/libbyteorder-1a76cad529fec8b0.rmeta","--extern","ogg=/Users/marcpartensky/Programs/Rust/Pong-Tutorial/pong/target/rls/debug/deps/libogg-08242ced49c23f0f.rmeta","--extern","tinyvec=/Users/marcpartensky/Programs/Rust/Pong-Tutorial/pong/target/rls/debug/deps/libtinyvec-b3afd74bfbc050af.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/marcpartensky/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/marcpartensky/Programs/Rust/Pong-Tutorial/pong/target/rls/debug/deps/liblewton-0971aa1e9f16daf1.rmeta"},"prelude":{"crate_id":{"name":"lewton","disambiguator":[7898743655279528073,12846968060753692466]},"crate_root":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src","external_crates":[{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9176452395873514981,10525323411957323785]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[15010738070622620763,9605760616786660431]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8211843569075862794,5370502913999467694]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5168977417888994485,12129851499920233632]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9254821246596336482,1562696929571001984]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4867494102928472883,16549916413327868340]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12208796569805280475,9421298070223625802]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[16776259526442764164,2692171601035033462]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[8506315589905780113,7752550639658555424]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6004073670142137807,10055010459345902388]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[13812981793209371227,10465105188798852626]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[12279896640040761358,16819944754252654372]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[502125910674001101,4874613814734389117]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[6964077277237141888,7151316435171244180]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[5505266058476155326,9550778519957076375]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","num":16,"id":{"name":"byteorder","disambiguator":[8100689518988960638,1706710057921452686]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","num":17,"id":{"name":"tinyvec","disambiguator":[12697859640485865258,6749729496889433697]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","num":18,"id":{"name":"ogg","disambiguator":[5784952443384711612,12802741172354209416]}}],"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","byte_start":282,"byte_end":6413,"line_start":9,"line_end":264,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":18,"index":201},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","byte_start":2339,"byte_end":2351,"line_start":109,"line_end":109,"column_start":14,"column_end":26},"alias_span":null,"name":"OggReadError","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","byte_start":282,"byte_end":6413,"line_start":9,"line_end":264,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":11},{"krate":0,"index":150},{"krate":0,"index":167},{"krate":0,"index":209},{"krate":0,"index":252},{"krate":0,"index":357},{"krate":0,"index":385},{"krate":0,"index":427},{"krate":0,"index":453},{"krate":0,"index":570},{"krate":0,"index":580},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":457},{"krate":0,"index":459},{"krate":0,"index":461},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467}],"decl_id":null,"docs":"A `vorbis` decoder, written in Rust.","sig":null,"attributes":[{"value":"forbid(unsafe_code)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","byte_start":308,"byte_end":327,"line_start":9,"line_end":9,"column_start":27,"column_end":46}},{"value":"*\nA `vorbis` decoder, written in Rust.\n\nIf you \"just\" want to decode `ogg/vorbis` files, take a look into\nthe `inside_ogg` module (make sure you haven't disabled the `ogg` feature).\n\nFor lower level, per-packet usage, you can have a look at the `audio` and `header`\nmodules.\n*/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","byte_start":366,"byte_end":645,"line_start":12,"line_end":20,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":11},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"header","qualname":"::header","value":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","parent":null,"children":[{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":468},{"krate":0,"index":490},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":56},{"krate":0,"index":492},{"krate":0,"index":507},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":497},{"krate":0,"index":495},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":63},{"krate":0,"index":71},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":88},{"krate":0,"index":98},{"krate":0,"index":107},{"krate":0,"index":111},{"krate":0,"index":116},{"krate":0,"index":122},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":134},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149}],"decl_id":null,"docs":"Header decoding","sig":null,"attributes":[{"value":"*\nHeader decoding\n\nThis module takes care of decoding of the three vorbis headers:\n\n1. Identification\n2. Comment\n3. Setup\n\nIt builds only on the internal bitpacking layer and the internal\nhuffman tree handling mod. Everything else about the headers is\ndecoded in this mod.\n*/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":6697,"byte_end":6974,"line_start":9,"line_end":21,"column_start":1,"column_end":3}}]},{"kind":"TupleVariant","id":{"krate":0,"index":469},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":7407,"byte_end":7418,"line_start":36,"line_end":36,"column_start":2,"column_end":13},"name":"EndOfPacket","qualname":"::header::HeaderReadError::EndOfPacket","value":"HeaderReadError::EndOfPacket","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":471},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":7521,"byte_end":7536,"line_start":39,"line_end":39,"column_start":2,"column_end":17},"name":"NotVorbisHeader","qualname":"::header::HeaderReadError::NotVorbisHeader","value":"HeaderReadError::NotVorbisHeader","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" If the passed data don't start with the \"vorbis\"\n capture pattern, this error is returned.\n","sig":null,"attributes":[{"value":"/ If the passed data don't start with the \"vorbis\"","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":7421,"byte_end":7473,"line_start":37,"line_end":37,"column_start":2,"column_end":54}},{"value":"/ capture pattern, this error is returned.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":7475,"byte_end":7519,"line_start":38,"line_end":38,"column_start":2,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":473},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":7539,"byte_end":7563,"line_start":40,"line_end":40,"column_start":2,"column_end":26},"name":"UnsupportedVorbisVersion","qualname":"::header::HeaderReadError::UnsupportedVorbisVersion","value":"HeaderReadError::UnsupportedVorbisVersion","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":475},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":7610,"byte_end":7625,"line_start":42,"line_end":42,"column_start":2,"column_end":17},"name":"HeaderBadFormat","qualname":"::header::HeaderReadError::HeaderBadFormat","value":"HeaderReadError::HeaderBadFormat","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" If the header violates the vorbis spec\n","sig":null,"attributes":[{"value":"/ If the header violates the vorbis spec","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":7566,"byte_end":7608,"line_start":41,"line_end":41,"column_start":2,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":477},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":7849,"byte_end":7862,"line_start":48,"line_end":48,"column_start":2,"column_end":15},"name":"HeaderBadType","qualname":"::header::HeaderReadError::HeaderBadType","value":"HeaderReadError::HeaderBadType(u8)","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" The given packet indeed seems to be a vorbis header,\n but it looks like it is a different header type than\n the function it was passed to.","sig":null,"attributes":[{"value":"/ The given packet indeed seems to be a vorbis header,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":7628,"byte_end":7684,"line_start":43,"line_end":43,"column_start":2,"column_end":58}},{"value":"/ but it looks like it is a different header type than","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":7686,"byte_end":7742,"line_start":44,"line_end":44,"column_start":2,"column_end":58}},{"value":"/ the function it was passed to.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":7744,"byte_end":7778,"line_start":45,"line_end":45,"column_start":2,"column_end":36}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":7780,"byte_end":7783,"line_start":46,"line_end":46,"column_start":2,"column_end":5}},{"value":"/ It is not guaranteed that the type is a valid header type.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":7785,"byte_end":7847,"line_start":47,"line_end":47,"column_start":2,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":480},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":7985,"byte_end":7998,"line_start":51,"line_end":51,"column_start":2,"column_end":15},"name":"HeaderIsAudio","qualname":"::header::HeaderReadError::HeaderIsAudio","value":"HeaderReadError::HeaderIsAudio","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" The given packet does not seem to be a header as per vorbis spec,\n instead it seems to be an audio packet.\n","sig":null,"attributes":[{"value":"/ The given packet does not seem to be a header as per vorbis spec,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":7869,"byte_end":7938,"line_start":49,"line_end":49,"column_start":2,"column_end":71}},{"value":"/ instead it seems to be an audio packet.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":7940,"byte_end":7983,"line_start":50,"line_end":50,"column_start":2,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":482},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":8001,"byte_end":8016,"line_start":52,"line_end":52,"column_start":2,"column_end":17},"name":"Utf8DecodeError","qualname":"::header::HeaderReadError::Utf8DecodeError","value":"HeaderReadError::Utf8DecodeError","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":484},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":8480,"byte_end":8500,"line_start":62,"line_end":62,"column_start":2,"column_end":22},"name":"BufferNotAddressable","qualname":"::header::HeaderReadError::BufferNotAddressable","value":"HeaderReadError::BufferNotAddressable","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" If the needed memory isn't addressable by us","sig":null,"attributes":[{"value":"/ If the needed memory isn't addressable by us","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":8019,"byte_end":8067,"line_start":53,"line_end":53,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":8069,"byte_end":8072,"line_start":54,"line_end":54,"column_start":2,"column_end":5}},{"value":"/ This error is returned if a calculation yielded a higher value for","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":8074,"byte_end":8144,"line_start":55,"line_end":55,"column_start":2,"column_end":72}},{"value":"/ an internal buffer size that doesn't fit into the platform's address range.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":8146,"byte_end":8225,"line_start":56,"line_end":56,"column_start":2,"column_end":81}},{"value":"/ Note that if we \"simply\" encounter an allocation failure (OOM, etc),","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":8227,"byte_end":8299,"line_start":57,"line_end":57,"column_start":2,"column_end":74}},{"value":"/ we do what libstd does in these cases: crash.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":8301,"byte_end":8350,"line_start":58,"line_end":58,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":8352,"byte_end":8355,"line_start":59,"line_end":59,"column_start":2,"column_end":5}},{"value":"/ This error is not automatically an error of the passed data,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":8357,"byte_end":8421,"line_start":60,"line_end":60,"column_start":2,"column_end":66}},{"value":"/ but rather is due to insufficient decoder hardware.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":8423,"byte_end":8478,"line_start":61,"line_end":61,"column_start":2,"column_end":57}}]},{"kind":"Enum","id":{"krate":0,"index":468},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":7388,"byte_end":7403,"line_start":35,"line_end":35,"column_start":10,"column_end":25},"name":"HeaderReadError","qualname":"::header::HeaderReadError","value":"pub enum HeaderReadError {\n    EndOfPacket,\n\n    /// If the passed data don't start with the \"vorbis\"\n    /// capture pattern, this error is returned.\n    NotVorbisHeader,\n    UnsupportedVorbisVersion,\n\n    /// If the header violates the vorbis spec\n    HeaderBadFormat,\n\n    /// The given packet indeed seems to be a vorbis header,\n    /// but it looks like it is a different header type than\n    /// the function it was passed to.\n    ///\n    /// It is not guaranteed that the type is a valid header type.\n    HeaderBadType(u8),\n\n    /// The given packet does not seem to be a header as per vorbis spec,\n    /// instead it seems to be an audio packet.\n    HeaderIsAudio,\n    Utf8DecodeError,\n\n    /// If the needed memory isn't addressable by us\n    ///\n    /// This error is returned if a calculation yielded a higher value for\n    /// an internal buffer size that doesn't fit into the platform's address range.\n    /// Note that if we \"simply\" encounter an allocation failure (OOM, etc),\n    /// we do what libstd does in these cases: crash.\n    ///\n    /// This error is not automatically an error of the passed data,\n    /// but rather is due to insufficient decoder hardware.\n    BufferNotAddressable,\n}","parent":null,"children":[{"krate":0,"index":469},{"krate":0,"index":471},{"krate":0,"index":473},{"krate":0,"index":475},{"krate":0,"index":477},{"krate":0,"index":480},{"krate":0,"index":482},{"krate":0,"index":484}],"decl_id":null,"docs":" Errors that can occur during Header decoding\n","sig":null,"attributes":[{"value":"/ Errors that can occur during Header decoding","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":7292,"byte_end":7340,"line_start":32,"line_end":32,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":45},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":12214,"byte_end":12223,"line_start":177,"line_end":177,"column_start":10,"column_end":19},"name":"HeaderSet","qualname":"::header::HeaderSet","value":"(IdentHeader, CommentHeader, SetupHeader)","parent":null,"children":[],"decl_id":null,"docs":" The set of the three Vorbis headers\n","sig":null,"attributes":[{"value":"/ The set of the three Vorbis headers","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":12165,"byte_end":12204,"line_start":176,"line_end":176,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":46},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":12468,"byte_end":12479,"line_start":187,"line_end":187,"column_start":12,"column_end":23},"name":"IdentHeader","qualname":"::header::IdentHeader","value":"IdentHeader { audio_channels, audio_sample_rate, bitrate_maximum, bitrate_nominal, bitrate_minimum, blocksize_0, blocksize_1 }","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54}],"decl_id":null,"docs":"Representation for the identification header","sig":null,"attributes":[{"value":"*\nRepresentation for the identification header\n\nThe identification header is the first of the three\nheaders inside each vorbis stream.\n\nIt covers basic information about the stream.\n*/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":12270,"byte_end":12456,"line_start":179,"line_end":186,"column_start":1,"column_end":3}}]},{"kind":"Field","id":{"krate":0,"index":47},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":12535,"byte_end":12549,"line_start":189,"line_end":189,"column_start":6,"column_end":20},"name":"audio_channels","qualname":"::header::IdentHeader::audio_channels","value":"u8","parent":{"krate":0,"index":46},"children":[],"decl_id":null,"docs":" The number of audio channels in the stream\n","sig":null,"attributes":[{"value":"/ The number of audio channels in the stream","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":12483,"byte_end":12529,"line_start":188,"line_end":188,"column_start":2,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":48},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":12595,"byte_end":12612,"line_start":191,"line_end":191,"column_start":6,"column_end":23},"name":"audio_sample_rate","qualname":"::header::IdentHeader::audio_sample_rate","value":"u32","parent":{"krate":0,"index":46},"children":[],"decl_id":null,"docs":" The sample rate of the stream\n","sig":null,"attributes":[{"value":"/ The sample rate of the stream","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":12556,"byte_end":12589,"line_start":190,"line_end":190,"column_start":2,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":49},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":12749,"byte_end":12764,"line_start":196,"line_end":196,"column_start":6,"column_end":21},"name":"bitrate_maximum","qualname":"::header::IdentHeader::bitrate_maximum","value":"i32","parent":{"krate":0,"index":46},"children":[],"decl_id":null,"docs":" The maximum bit rate of the stream","sig":null,"attributes":[{"value":"/ The maximum bit rate of the stream","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":12620,"byte_end":12658,"line_start":192,"line_end":192,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":12660,"byte_end":12663,"line_start":193,"line_end":193,"column_start":2,"column_end":5}},{"value":"/ Note that this value is only a hint","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":12665,"byte_end":12704,"line_start":194,"line_end":194,"column_start":2,"column_end":41}},{"value":"/ and may be off by a large amount.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":12706,"byte_end":12743,"line_start":195,"line_end":195,"column_start":2,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":50},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":12901,"byte_end":12916,"line_start":201,"line_end":201,"column_start":6,"column_end":21},"name":"bitrate_nominal","qualname":"::header::IdentHeader::bitrate_nominal","value":"i32","parent":{"krate":0,"index":46},"children":[],"decl_id":null,"docs":" The nominal bit rate of the stream","sig":null,"attributes":[{"value":"/ The nominal bit rate of the stream","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":12772,"byte_end":12810,"line_start":197,"line_end":197,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":12812,"byte_end":12815,"line_start":198,"line_end":198,"column_start":2,"column_end":5}},{"value":"/ Note that this value is only a hint","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":12817,"byte_end":12856,"line_start":199,"line_end":199,"column_start":2,"column_end":41}},{"value":"/ and may be off by a large amount.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":12858,"byte_end":12895,"line_start":200,"line_end":200,"column_start":2,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":51},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":13053,"byte_end":13068,"line_start":206,"line_end":206,"column_start":6,"column_end":21},"name":"bitrate_minimum","qualname":"::header::IdentHeader::bitrate_minimum","value":"i32","parent":{"krate":0,"index":46},"children":[],"decl_id":null,"docs":" The minimum bit rate of the stream","sig":null,"attributes":[{"value":"/ The minimum bit rate of the stream","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":12924,"byte_end":12962,"line_start":202,"line_end":202,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":12964,"byte_end":12967,"line_start":203,"line_end":203,"column_start":2,"column_end":5}},{"value":"/ Note that this value is only a hint","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":12969,"byte_end":13008,"line_start":204,"line_end":204,"column_start":2,"column_end":41}},{"value":"/ and may be off by a large amount.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":13010,"byte_end":13047,"line_start":205,"line_end":205,"column_start":2,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":52},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":13080,"byte_end":13091,"line_start":207,"line_end":207,"column_start":6,"column_end":17},"name":"blocksize_0","qualname":"::header::IdentHeader::blocksize_0","value":"u8","parent":{"krate":0,"index":46},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":53},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":13102,"byte_end":13113,"line_start":208,"line_end":208,"column_start":6,"column_end":17},"name":"blocksize_1","qualname":"::header::IdentHeader::blocksize_1","value":"u8","parent":{"krate":0,"index":46},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":56},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":13490,"byte_end":13507,"line_start":220,"line_end":220,"column_start":8,"column_end":25},"name":"read_header_ident","qualname":"::header::read_header_ident","value":"pub fn read_header_ident(&[u8]) -> Result<IdentHeader, HeaderReadError>","parent":null,"children":[],"decl_id":null,"docs":"Reading the Identification header","sig":null,"attributes":[{"value":"*\nReading the Identification header\n\nIf it returns Err(sth) when being called with the first packet in a stream,\nthe whole stream is to be considered undecodable as per the Vorbis spec.\nThe function returns Err(`HeaderReadError::HeaderBadType`) if the header type\ndoesn't match the ident header.\n*/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":13182,"byte_end":13482,"line_start":212,"line_end":219,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":492},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":15634,"byte_end":15647,"line_start":289,"line_end":289,"column_start":12,"column_end":25},"name":"CommentHeader","qualname":"::header::CommentHeader","value":"CommentHeader { vendor, comment_list }","parent":null,"children":[{"krate":0,"index":493},{"krate":0,"index":494}],"decl_id":null,"docs":"Representation of the comment header","sig":null,"attributes":[{"value":"*\nRepresentation of the comment header\n\nThe comment header is the second of the three\nheaders inside each vorbis stream.\n\nIt contains text comment metadata\nabout the stream, encoded as key-value pairs,\nand the vendor name.\n*/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":15350,"byte_end":15577,"line_start":278,"line_end":287,"column_start":1,"column_end":3}}]},{"kind":"Field","id":{"krate":0,"index":493},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":15744,"byte_end":15750,"line_start":293,"line_end":293,"column_start":6,"column_end":12},"name":"vendor","qualname":"::header::CommentHeader::vendor","value":"std::string::String","parent":{"krate":0,"index":492},"children":[],"decl_id":null,"docs":" An identification string of the\n software/library that encoded\n the stream.\n","sig":null,"attributes":[{"value":"/ An identification string of the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":15651,"byte_end":15686,"line_start":290,"line_end":290,"column_start":2,"column_end":37}},{"value":"/ software/library that encoded","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":15688,"byte_end":15721,"line_start":291,"line_end":291,"column_start":2,"column_end":35}},{"value":"/ the stream.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":15723,"byte_end":15738,"line_start":292,"line_end":292,"column_start":2,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":494},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":15832,"byte_end":15844,"line_start":296,"line_end":296,"column_start":6,"column_end":18},"name":"comment_list","qualname":"::header::CommentHeader::comment_list","value":"std::vec::Vec<(std::string::String, std::string::String)>","parent":{"krate":0,"index":492},"children":[],"decl_id":null,"docs":" A key-value list of the comments\n attached to the stream.\n","sig":null,"attributes":[{"value":"/ A key-value list of the comments","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":15761,"byte_end":15797,"line_start":294,"line_end":294,"column_start":2,"column_end":38}},{"value":"/ attached to the stream.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":15799,"byte_end":15826,"line_start":295,"line_end":295,"column_start":2,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":57},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":16135,"byte_end":16154,"line_start":308,"line_end":308,"column_start":8,"column_end":27},"name":"read_header_comment","qualname":"::header::read_header_comment","value":"pub fn read_header_comment(&[u8]) -> Result<CommentHeader, HeaderReadError>","parent":null,"children":[],"decl_id":null,"docs":"Reading the Comment header","sig":null,"attributes":[{"value":"*\nReading the Comment header\n\nYou should call this function with the second packet in the stream.\n\nThe function does not check whether the comment field names consist\nof characters `0x20` through `0x7D` (`0x3D` excluded), as the vorbis\nspec requires.\n*/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":15872,"byte_end":16127,"line_start":299,"line_end":307,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":116},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":20975,"byte_end":20986,"line_start":465,"line_end":465,"column_start":12,"column_end":23},"name":"SetupHeader","qualname":"::header::SetupHeader","value":"SetupHeader {  }","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":149},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":42335,"byte_end":42352,"line_start":1080,"line_end":1080,"column_start":8,"column_end":25},"name":"read_header_setup","qualname":"::header::read_header_setup","value":"pub fn read_header_setup(&[u8], u8, (u8, u8))\n-> Result<SetupHeader, HeaderReadError>","parent":null,"children":[],"decl_id":null,"docs":" Reading the setup header.","sig":null,"attributes":[{"value":"/ Reading the setup header.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":42187,"byte_end":42216,"line_start":1076,"line_end":1076,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":42217,"byte_end":42220,"line_start":1077,"line_end":1077,"column_start":1,"column_end":4}},{"value":"/ The audio channel and blocksize info needed by the function","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":42221,"byte_end":42284,"line_start":1078,"line_end":1078,"column_start":1,"column_end":64}},{"value":"/ can be obtained from the ident header.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":42285,"byte_end":42327,"line_start":1079,"line_end":1079,"column_start":1,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":510},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/huffman_tree.rs","byte_start":52762,"byte_end":52775,"line_start":128,"line_end":128,"column_start":2,"column_end":15},"name":"Overspecified","qualname":"::huffman_tree::HuffmanError::Overspecified","value":"HuffmanError::Overspecified","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":512},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/huffman_tree.rs","byte_start":52778,"byte_end":52792,"line_start":129,"line_end":129,"column_start":2,"column_end":16},"name":"Underpopulated","qualname":"::huffman_tree::HuffmanError::Underpopulated","value":"HuffmanError::Underpopulated","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":514},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/huffman_tree.rs","byte_start":52795,"byte_end":52813,"line_start":130,"line_end":130,"column_start":2,"column_end":20},"name":"InvalidSingleEntry","qualname":"::huffman_tree::HuffmanError::InvalidSingleEntry","value":"HuffmanError::InvalidSingleEntry","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":509},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/huffman_tree.rs","byte_start":52746,"byte_end":52758,"line_start":127,"line_end":127,"column_start":10,"column_end":22},"name":"HuffmanError","qualname":"::huffman_tree::HuffmanError","value":"pub enum HuffmanError { Overspecified, Underpopulated, InvalidSingleEntry, }","parent":null,"children":[{"krate":0,"index":510},{"krate":0,"index":512},{"krate":0,"index":514}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":252},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/audio.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"audio","qualname":"::audio","value":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/audio.rs","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":531},{"krate":0,"index":546},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":272},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":277},{"krate":0,"index":290},{"krate":0,"index":293},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":315},{"krate":0,"index":317},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":328},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":335},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":340},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":345},{"krate":0,"index":347},{"krate":0,"index":350},{"krate":0,"index":356}],"decl_id":null,"docs":"Audio packet decoding","sig":null,"attributes":[{"value":"*\nAudio packet decoding\n\nThis module decodes the audio packets given to it.\n*/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/audio.rs","byte_start":86587,"byte_end":86667,"line_start":9,"line_end":13,"column_start":1,"column_end":3}}]},{"kind":"TupleVariant","id":{"krate":0,"index":532},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/audio.rs","byte_start":87043,"byte_end":87054,"line_start":30,"line_end":30,"column_start":2,"column_end":13},"name":"EndOfPacket","qualname":"::audio::AudioReadError::EndOfPacket","value":"AudioReadError::EndOfPacket","parent":{"krate":0,"index":531},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":534},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/audio.rs","byte_start":87057,"byte_end":87071,"line_start":31,"line_end":31,"column_start":2,"column_end":16},"name":"AudioBadFormat","qualname":"::audio::AudioReadError::AudioBadFormat","value":"AudioReadError::AudioBadFormat","parent":{"krate":0,"index":531},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":536},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/audio.rs","byte_start":87074,"byte_end":87087,"line_start":32,"line_end":32,"column_start":2,"column_end":15},"name":"AudioIsHeader","qualname":"::audio::AudioReadError::AudioIsHeader","value":"AudioReadError::AudioIsHeader","parent":{"krate":0,"index":531},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":538},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/audio.rs","byte_start":87546,"byte_end":87566,"line_start":42,"line_end":42,"column_start":2,"column_end":22},"name":"BufferNotAddressable","qualname":"::audio::AudioReadError::BufferNotAddressable","value":"AudioReadError::BufferNotAddressable","parent":{"krate":0,"index":531},"children":[],"decl_id":null,"docs":" If the needed memory isn't addressable by us","sig":null,"attributes":[{"value":"/ If the needed memory isn't addressable by us","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/audio.rs","byte_start":87090,"byte_end":87138,"line_start":33,"line_end":33,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/audio.rs","byte_start":87140,"byte_end":87143,"line_start":34,"line_end":34,"column_start":2,"column_end":5}},{"value":"/ This error is returned if a calculation yielded a higher value for","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/audio.rs","byte_start":87145,"byte_end":87215,"line_start":35,"line_end":35,"column_start":2,"column_end":72}},{"value":"/ an internal buffer size that doesn't fit into the platform's address range.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/audio.rs","byte_start":87217,"byte_end":87296,"line_start":36,"line_end":36,"column_start":2,"column_end":81}},{"value":"/ Note that if we \"simply\" encounter an allocation failure (OOM, etc),","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/audio.rs","byte_start":87298,"byte_end":87370,"line_start":37,"line_end":37,"column_start":2,"column_end":74}},{"value":"/ we do what libstd does in these cases: crash.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/audio.rs","byte_start":87372,"byte_end":87421,"line_start":38,"line_end":38,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/audio.rs","byte_start":87423,"byte_end":87426,"line_start":39,"line_end":39,"column_start":2,"column_end":5}},{"value":"/ This error is not automatically an error of the format,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/audio.rs","byte_start":87428,"byte_end":87487,"line_start":40,"line_end":40,"column_start":2,"column_end":61}},{"value":"/ but rather is due to insufficient decoder hardware.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/audio.rs","byte_start":87489,"byte_end":87544,"line_start":41,"line_end":41,"column_start":2,"column_end":57}}]},{"kind":"Enum","id":{"krate":0,"index":531},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/audio.rs","byte_start":87025,"byte_end":87039,"line_start":29,"line_end":29,"column_start":10,"column_end":24},"name":"AudioReadError","qualname":"::audio::AudioReadError","value":"pub enum AudioReadError {\n    EndOfPacket,\n    AudioBadFormat,\n    AudioIsHeader,\n\n    /// If the needed memory isn't addressable by us\n    ///\n    /// This error is returned if a calculation yielded a higher value for\n    /// an internal buffer size that doesn't fit into the platform's address range.\n    /// Note that if we \"simply\" encounter an allocation failure (OOM, etc),\n    /// we do what libstd does in these cases: crash.\n    ///\n    /// This error is not automatically an error of the format,\n    /// but rather is due to insufficient decoder hardware.\n    BufferNotAddressable,\n}","parent":null,"children":[{"krate":0,"index":532},{"krate":0,"index":534},{"krate":0,"index":536},{"krate":0,"index":538}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":343},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/audio.rs","byte_start":113984,"byte_end":114003,"line_start":848,"line_end":848,"column_start":12,"column_end":31},"name":"PreviousWindowRight","qualname":"::audio::PreviousWindowRight","value":"PreviousWindowRight {  }","parent":null,"children":[{"krate":0,"index":344}],"decl_id":null,"docs":" The right part of the previous window","sig":null,"attributes":[{"value":"/ The right part of the previous window","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/audio.rs","byte_start":113844,"byte_end":113885,"line_start":844,"line_end":844,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/audio.rs","byte_start":113886,"byte_end":113889,"line_start":845,"line_end":845,"column_start":1,"column_end":4}},{"value":"/ This is the only state that needs to be changed","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/audio.rs","byte_start":113890,"byte_end":113941,"line_start":846,"line_end":846,"column_start":1,"column_end":52}},{"value":"/ once the headers are read.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/audio.rs","byte_start":113942,"byte_end":113972,"line_start":847,"line_end":847,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/audio.rs","byte_start":114109,"byte_end":114112,"line_start":854,"line_end":854,"column_start":9,"column_end":12},"name":"new","qualname":"<PreviousWindowRight>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":347},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/audio.rs","byte_start":114340,"byte_end":114364,"line_start":864,"line_end":864,"column_start":8,"column_end":32},"name":"get_decoded_sample_count","qualname":"::audio::get_decoded_sample_count","value":"pub fn get_decoded_sample_count(&IdentHeader, &SetupHeader, &[u8])\n-> Result<usize, AudioReadError>","parent":null,"children":[],"decl_id":null,"docs":"Returns the per-channel sample count of a packet if it were decoded.","sig":null,"attributes":[{"value":"*\nReturns the per-channel sample count of a packet if it were decoded.\n\nThis operation is very cheap and doesn't involve actual decoding of the packet.\n*/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/audio.rs","byte_start":114176,"byte_end":114332,"line_start":859,"line_end":863,"column_start":1,"column_end":3}}]},{"kind":"Function","id":{"krate":0,"index":350},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/audio.rs","byte_start":115948,"byte_end":115973,"line_start":910,"line_end":910,"column_start":8,"column_end":33},"name":"read_audio_packet_generic","qualname":"::audio::read_audio_packet_generic","value":"pub fn read_audio_packet_generic<S: Samples>(&IdentHeader, &SetupHeader,\n                                             &[u8], &mut PreviousWindowRight)\n-> Result<S, AudioReadError>","parent":null,"children":[],"decl_id":null,"docs":"Main audio packet decoding function","sig":null,"attributes":[{"value":"allow(unused_variables)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/audio.rs","byte_start":115706,"byte_end":115732,"line_start":901,"line_end":901,"column_start":1,"column_end":27}},{"value":"*\nMain audio packet decoding function\n\nPass your info to this function to get your raw packet data decoded.\n\nPanics if the passed PreviousWindowRight struct doesn't match the info\nfrom the ident header.\n*/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/audio.rs","byte_start":115733,"byte_end":115940,"line_start":902,"line_end":909,"column_start":1,"column_end":3}}]},{"kind":"Function","id":{"krate":0,"index":356},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/audio.rs","byte_start":124597,"byte_end":124614,"line_start":1161,"line_end":1161,"column_start":8,"column_end":25},"name":"read_audio_packet","qualname":"::audio::read_audio_packet","value":"pub fn read_audio_packet(&IdentHeader, &SetupHeader, &[u8],\n                         &mut PreviousWindowRight)\n-> Result<Vec<Vec<i16>>, AudioReadError>","parent":null,"children":[],"decl_id":null,"docs":"Main audio packet decoding function","sig":null,"attributes":[{"value":"*\nMain audio packet decoding function\n\nPass your info to this function to get your raw packet data decoded.\n\nPanics if the passed PreviousWindowRight struct doesn't match the info\nfrom the ident header.\n*/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/audio.rs","byte_start":124382,"byte_end":124589,"line_start":1153,"line_end":1160,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":385},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"inside_ogg","qualname":"::inside_ogg","value":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":405},{"krate":0,"index":414}],"decl_id":null,"docs":"Higher-level utilities for Ogg streams and files","sig":null,"attributes":[{"value":"cfg(feature = \"ogg\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","byte_start":2222,"byte_end":2245,"line_start":103,"line_end":103,"column_start":1,"column_end":24}},{"value":"*\nHigher-level utilities for Ogg streams and files\n\nThis module provides higher level access to the library functionality,\nand useful helper methods for the Ogg `PacketReader` struct.\n*/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":145718,"byte_end":145906,"line_start":9,"line_end":14,"column_start":1,"column_end":3}}]},{"kind":"Function","id":{"krate":0,"index":402},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":146445,"byte_end":146457,"line_start":30,"line_end":30,"column_start":8,"column_end":20},"name":"read_headers","qualname":"::inside_ogg::read_headers","value":"pub fn read_headers<'a, T: Read + Seek + 'a>(&mut PacketReader<T>)\n-> Result<(HeaderSet, u32), VorbisError>","parent":null,"children":[],"decl_id":null,"docs":" Reads the three vorbis headers from an ogg stream as well as stream serial information","sig":null,"attributes":[{"value":"/ Reads the three vorbis headers from an ogg stream as well as stream serial information","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":146155,"byte_end":146245,"line_start":25,"line_end":25,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":146246,"byte_end":146249,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Please note that this function doesn't work well with async","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":146250,"byte_end":146313,"line_start":27,"line_end":27,"column_start":1,"column_end":64}},{"value":"/ I/O. In order to support this use case, enable the `async_ogg` feature,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":146314,"byte_end":146389,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ and use the `HeadersReader` struct instead.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":146390,"byte_end":146437,"line_start":29,"line_end":29,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":405},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":147691,"byte_end":147706,"line_start":66,"line_end":66,"column_start":12,"column_end":27},"name":"OggStreamReader","qualname":"::inside_ogg::OggStreamReader","value":"OggStreamReader { ident_hdr, comment_hdr, setup_hdr }","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413}],"decl_id":null,"docs":"Reading ogg/vorbis files or streams","sig":null,"attributes":[{"value":"*\nReading ogg/vorbis files or streams\n\nThis is a small helper struct to help reading ogg/vorbis files\nor streams in that format.\n\nIt only supports the main use case of pure audio ogg files streams.\nReading a file where vorbis is only one of multiple streams, like\nin the case of ogv, is not supported.\n\nIf you need support for this, you need to use the lower level methods\ninstead.\n*/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":147293,"byte_end":147679,"line_start":53,"line_end":65,"column_start":1,"column_end":3}}]},{"kind":"Field","id":{"krate":0,"index":410},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":147803,"byte_end":147812,"line_start":72,"line_end":72,"column_start":6,"column_end":15},"name":"ident_hdr","qualname":"::inside_ogg::OggStreamReader::ident_hdr","value":"header::IdentHeader","parent":{"krate":0,"index":405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":411},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":147832,"byte_end":147843,"line_start":73,"line_end":73,"column_start":6,"column_end":17},"name":"comment_hdr","qualname":"::inside_ogg::OggStreamReader::comment_hdr","value":"header::CommentHeader","parent":{"krate":0,"index":405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":412},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":147865,"byte_end":147874,"line_start":74,"line_end":74,"column_start":6,"column_end":15},"name":"setup_hdr","qualname":"::inside_ogg::OggStreamReader::setup_hdr","value":"header::SetupHeader","parent":{"krate":0,"index":405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":148248,"byte_end":148251,"line_start":85,"line_end":85,"column_start":9,"column_end":12},"name":"new","qualname":"<OggStreamReader<T>>::new","value":"pub fn new(T) -> Result<Self, VorbisError>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new OggStreamReader from a given implementation of `Read + Seek`.","sig":null,"attributes":[{"value":"/ Constructs a new OggStreamReader from a given implementation of `Read + Seek`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":147961,"byte_end":148043,"line_start":80,"line_end":80,"column_start":2,"column_end":84}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":148045,"byte_end":148048,"line_start":81,"line_end":81,"column_start":2,"column_end":5}},{"value":"/ Please note that this function doesn't work well with async","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":148050,"byte_end":148113,"line_start":82,"line_end":82,"column_start":2,"column_end":65}},{"value":"/ I/O. In order to support this use case, enable the `async_ogg` feature,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":148115,"byte_end":148190,"line_start":83,"line_end":83,"column_start":2,"column_end":77}},{"value":"/ and use the `HeadersReader` struct instead.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":148192,"byte_end":148239,"line_start":84,"line_end":84,"column_start":2,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":148736,"byte_end":148751,"line_start":97,"line_end":97,"column_start":9,"column_end":24},"name":"from_ogg_reader","qualname":"<OggStreamReader<T>>::from_ogg_reader","value":"pub fn from_ogg_reader(PacketReader<T>) -> Result<Self, VorbisError>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new OggStreamReader from a given Ogg PacketReader.","sig":null,"attributes":[{"value":"/ Constructs a new OggStreamReader from a given Ogg PacketReader.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":148357,"byte_end":148424,"line_start":89,"line_end":89,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":148426,"byte_end":148429,"line_start":90,"line_end":90,"column_start":2,"column_end":5}},{"value":"/ The `new` function is a nice wrapper around this function that","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":148431,"byte_end":148497,"line_start":91,"line_end":91,"column_start":2,"column_end":68}},{"value":"/ also creates the ogg reader.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":148499,"byte_end":148531,"line_start":92,"line_end":92,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":148533,"byte_end":148536,"line_start":93,"line_end":93,"column_start":2,"column_end":5}},{"value":"/ Please note that this function doesn't work well with async","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":148538,"byte_end":148601,"line_start":94,"line_end":94,"column_start":2,"column_end":65}},{"value":"/ I/O. In order to support this use case, enable the `async_ogg` feature,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":148603,"byte_end":148678,"line_start":95,"line_end":95,"column_start":2,"column_end":77}},{"value":"/ and use the `HeadersReader` struct instead.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":148680,"byte_end":148727,"line_start":96,"line_end":96,"column_start":2,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":149081,"byte_end":149091,"line_start":111,"line_end":111,"column_start":9,"column_end":19},"name":"into_inner","qualname":"<OggStreamReader<T>>::into_inner","value":"pub fn into_inner(Self) -> PacketReader<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":150976,"byte_end":150991,"line_start":167,"line_end":167,"column_start":9,"column_end":24},"name":"read_dec_packet","qualname":"<OggStreamReader<T>>::read_dec_packet","value":"pub fn read_dec_packet(&mut Self)\n-> Result<Option<Vec<Vec<i16>>>, VorbisError>","parent":null,"children":[],"decl_id":null,"docs":" Reads and decompresses an audio packet from the stream.","sig":null,"attributes":[{"value":"/ Reads and decompresses an audio packet from the stream.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":150683,"byte_end":150742,"line_start":160,"line_end":160,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":150744,"byte_end":150747,"line_start":161,"line_end":161,"column_start":2,"column_end":5}},{"value":"/ On read errors, it returns Err(e) with the error.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":150749,"byte_end":150802,"line_start":162,"line_end":162,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":150804,"byte_end":150807,"line_start":163,"line_end":163,"column_start":2,"column_end":5}},{"value":"/ On success, it either returns None, when the end of the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":150809,"byte_end":150868,"line_start":164,"line_end":164,"column_start":2,"column_end":61}},{"value":"/ stream has been reached, or Some(packet_data),","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":150870,"byte_end":150920,"line_start":165,"line_end":165,"column_start":2,"column_end":52}},{"value":"/ with the data of the decompressed packet.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":150922,"byte_end":150967,"line_start":166,"line_end":166,"column_start":2,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":151421,"byte_end":151444,"line_start":179,"line_end":179,"column_start":9,"column_end":32},"name":"read_dec_packet_generic","qualname":"<OggStreamReader<T>>::read_dec_packet_generic","value":"pub fn read_dec_packet_generic<S: Samples>(&mut Self)\n-> Result<Option<S>, VorbisError>","parent":null,"children":[],"decl_id":null,"docs":" Reads and decompresses an audio packet from the stream (generic).","sig":null,"attributes":[{"value":"/ Reads and decompresses an audio packet from the stream (generic).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":151118,"byte_end":151187,"line_start":172,"line_end":172,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":151189,"byte_end":151192,"line_start":173,"line_end":173,"column_start":2,"column_end":5}},{"value":"/ On read errors, it returns Err(e) with the error.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":151194,"byte_end":151247,"line_start":174,"line_end":174,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":151249,"byte_end":151252,"line_start":175,"line_end":175,"column_start":2,"column_end":5}},{"value":"/ On success, it either returns None, when the end of the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":151254,"byte_end":151313,"line_start":176,"line_end":176,"column_start":2,"column_end":61}},{"value":"/ stream has been reached, or Some(packet_data),","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":151315,"byte_end":151365,"line_start":177,"line_end":177,"column_start":2,"column_end":52}},{"value":"/ with the data of the decompressed packet.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":151367,"byte_end":151412,"line_start":178,"line_end":178,"column_start":2,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":152770,"byte_end":152789,"line_start":215,"line_end":215,"column_start":9,"column_end":28},"name":"read_dec_packet_itl","qualname":"<OggStreamReader<T>>::read_dec_packet_itl","value":"pub fn read_dec_packet_itl(&mut Self) -> Result<Option<Vec<i16>>, VorbisError>","parent":null,"children":[],"decl_id":null,"docs":" Reads and decompresses an audio packet from the stream (interleaved).","sig":null,"attributes":[{"value":"/ Reads and decompresses an audio packet from the stream (interleaved).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":152375,"byte_end":152448,"line_start":205,"line_end":205,"column_start":2,"column_end":75}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":152450,"byte_end":152453,"line_start":206,"line_end":206,"column_start":2,"column_end":5}},{"value":"/ On read errors, it returns Err(e) with the error.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":152455,"byte_end":152508,"line_start":207,"line_end":207,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":152510,"byte_end":152513,"line_start":208,"line_end":208,"column_start":2,"column_end":5}},{"value":"/ On success, it either returns None, when the end of the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":152515,"byte_end":152574,"line_start":209,"line_end":209,"column_start":2,"column_end":61}},{"value":"/ stream has been reached, or Some(packet_data),","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":152576,"byte_end":152626,"line_start":210,"line_end":210,"column_start":2,"column_end":52}},{"value":"/ with the data of the decompressed packet.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":152628,"byte_end":152673,"line_start":211,"line_end":211,"column_start":2,"column_end":47}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":152675,"byte_end":152678,"line_start":212,"line_end":212,"column_start":2,"column_end":5}},{"value":"/ Unlike `read_dec_packet`, this function returns the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":152680,"byte_end":152735,"line_start":213,"line_end":213,"column_start":2,"column_end":57}},{"value":"/ interleaved samples.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":152737,"byte_end":152761,"line_start":214,"line_end":214,"column_start":2,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":153151,"byte_end":153164,"line_start":227,"line_end":227,"column_start":9,"column_end":22},"name":"stream_serial","qualname":"<OggStreamReader<T>>::stream_serial","value":"pub fn stream_serial(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the stream serial of the current stream","sig":null,"attributes":[{"value":"/ Returns the stream serial of the current stream","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":153030,"byte_end":153081,"line_start":224,"line_end":224,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":153083,"byte_end":153086,"line_start":225,"line_end":225,"column_start":2,"column_end":5}},{"value":"/ The stream serial can change in chained ogg files.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":153088,"byte_end":153142,"line_start":226,"line_end":226,"column_start":2,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":153411,"byte_end":153425,"line_start":235,"line_end":235,"column_start":9,"column_end":23},"name":"get_last_absgp","qualname":"<OggStreamReader<T>>::get_last_absgp","value":"pub fn get_last_absgp(&Self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Returns the absolute granule position of the last read page.","sig":null,"attributes":[{"value":"/ Returns the absolute granule position of the last read page.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":153207,"byte_end":153271,"line_start":231,"line_end":231,"column_start":2,"column_end":66}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":153273,"byte_end":153276,"line_start":232,"line_end":232,"column_start":2,"column_end":5}},{"value":"/ In the case of ogg/vorbis, the absolute granule position is given","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":153278,"byte_end":153347,"line_start":233,"line_end":233,"column_start":2,"column_end":71}},{"value":"/ as number of PCM samples, on a per channel basis.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":153349,"byte_end":153402,"line_start":234,"line_end":234,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":153789,"byte_end":153802,"line_start":246,"line_end":246,"column_start":9,"column_end":22},"name":"seek_absgp_pg","qualname":"<OggStreamReader<T>>::seek_absgp_pg","value":"pub fn seek_absgp_pg(&mut Self, u64) -> Result<(), VorbisError>","parent":null,"children":[],"decl_id":null,"docs":" Seeks to the specified absolute granule position, with a page granularity.","sig":null,"attributes":[{"value":"/ Seeks to the specified absolute granule position, with a page granularity.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":153472,"byte_end":153550,"line_start":239,"line_end":239,"column_start":2,"column_end":80}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":153552,"byte_end":153555,"line_start":240,"line_end":240,"column_start":2,"column_end":5}},{"value":"/ The granularity is per-page, and the obtained position is","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":153557,"byte_end":153618,"line_start":241,"line_end":241,"column_start":2,"column_end":63}},{"value":"/ then <= the seeked absgp.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":153620,"byte_end":153649,"line_start":242,"line_end":242,"column_start":2,"column_end":31}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":153651,"byte_end":153654,"line_start":243,"line_end":243,"column_start":2,"column_end":5}},{"value":"/ In the case of ogg/vorbis, the absolute granule position is given","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":153656,"byte_end":153725,"line_start":244,"line_end":244,"column_start":2,"column_end":71}},{"value":"/ as number of PCM samples, on a per channel basis.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":153727,"byte_end":153780,"line_start":245,"line_end":245,"column_start":2,"column_end":55}}]},{"kind":"Mod","id":{"krate":0,"index":427},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/samples.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"samples","qualname":"::samples","value":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/samples.rs","parent":null,"children":[{"krate":0,"index":428},{"krate":0,"index":432},{"krate":0,"index":438},{"krate":0,"index":442},{"krate":0,"index":447},{"krate":0,"index":449},{"krate":0,"index":451}],"decl_id":null,"docs":"Traits for sample formats\n","sig":null,"attributes":[{"value":"*\nTraits for sample formats\n*/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/samples.rs","byte_start":158445,"byte_end":158477,"line_start":9,"line_end":11,"column_start":1,"column_end":3}}]},{"kind":"Trait","id":{"krate":0,"index":428},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/samples.rs","byte_start":158532,"byte_end":158539,"line_start":14,"line_end":14,"column_start":11,"column_end":18},"name":"Samples","qualname":"::samples::Samples","value":"Samples","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431}],"decl_id":null,"docs":" Trait for a packet of multiple samples\n","sig":null,"attributes":[{"value":"/ Trait for a packet of multiple samples","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/samples.rs","byte_start":158479,"byte_end":158521,"line_start":13,"line_end":13,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/samples.rs","byte_start":158546,"byte_end":158557,"line_start":15,"line_end":15,"column_start":5,"column_end":16},"name":"num_samples","qualname":"::samples::Samples::num_samples","value":"pub fn num_samples(&Self) -> usize","parent":{"krate":0,"index":428},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/samples.rs","byte_start":158579,"byte_end":158587,"line_start":16,"line_end":16,"column_start":5,"column_end":13},"name":"truncate","qualname":"::samples::Samples::truncate","value":"pub fn truncate(&mut Self, usize)","parent":{"krate":0,"index":428},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/samples.rs","byte_start":158618,"byte_end":158629,"line_start":17,"line_end":17,"column_start":5,"column_end":16},"name":"from_floats","qualname":"::samples::Samples::from_floats","value":"pub fn from_floats(Vec<Vec<f32>>) -> Self","parent":{"krate":0,"index":428},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":438},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/samples.rs","byte_start":159130,"byte_end":159148,"line_start":43,"line_end":43,"column_start":12,"column_end":30},"name":"InterleavedSamples","qualname":"::samples::InterleavedSamples","value":"InterleavedSamples { samples, channel_count }","parent":null,"children":[{"krate":0,"index":440},{"krate":0,"index":441}],"decl_id":null,"docs":" A packet of multi-channel interleaved samples\n","sig":null,"attributes":[{"value":"/ A packet of multi-channel interleaved samples","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/samples.rs","byte_start":159069,"byte_end":159118,"line_start":42,"line_end":42,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":440},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/samples.rs","byte_start":159167,"byte_end":159174,"line_start":44,"line_end":44,"column_start":6,"column_end":13},"name":"samples","qualname":"::samples::InterleavedSamples::samples","value":"std::vec::Vec<S>","parent":{"krate":0,"index":438},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":441},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/samples.rs","byte_start":159189,"byte_end":159202,"line_start":45,"line_end":45,"column_start":6,"column_end":19},"name":"channel_count","qualname":"::samples::InterleavedSamples::channel_count","value":"usize","parent":{"krate":0,"index":438},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":447},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/samples.rs","byte_start":160206,"byte_end":160212,"line_start":82,"line_end":82,"column_start":11,"column_end":17},"name":"Sample","qualname":"::samples::Sample","value":"Sample","parent":null,"children":[{"krate":0,"index":448}],"decl_id":null,"docs":" Trait representing a single sample\n","sig":null,"attributes":[{"value":"/ Trait representing a single sample","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/samples.rs","byte_start":160157,"byte_end":160195,"line_start":81,"line_end":81,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/samples.rs","byte_start":160219,"byte_end":160229,"line_start":83,"line_end":83,"column_start":5,"column_end":15},"name":"from_float","qualname":"::samples::Sample::from_float","value":"pub fn from_float(f32) -> Self","parent":{"krate":0,"index":447},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":571},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","byte_start":2498,"byte_end":2506,"line_start":120,"line_end":120,"column_start":2,"column_end":10},"name":"BadAudio","qualname":"::VorbisError::BadAudio","value":"VorbisError::BadAudio(audio::AudioReadError)","parent":{"krate":0,"index":570},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":574},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","byte_start":2532,"byte_end":2541,"line_start":121,"line_end":121,"column_start":2,"column_end":11},"name":"BadHeader","qualname":"::VorbisError::BadHeader","value":"VorbisError::BadHeader(header::HeaderReadError)","parent":{"krate":0,"index":570},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":577},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","byte_start":2594,"byte_end":2602,"line_start":123,"line_end":123,"column_start":2,"column_end":10},"name":"OggError","qualname":"::VorbisError::OggError","value":"VorbisError::OggError(OggReadError)","parent":{"krate":0,"index":570},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"ogg\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","byte_start":2569,"byte_end":2592,"line_start":122,"line_end":122,"column_start":2,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":570},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","byte_start":2483,"byte_end":2494,"line_start":119,"line_end":119,"column_start":10,"column_end":21},"name":"VorbisError","qualname":"::VorbisError","value":"pub enum VorbisError {\n    BadAudio(audio::AudioReadError),\n    BadHeader(header::HeaderReadError),\n\n    #[cfg(feature = \"ogg\")]\n    OggError(OggReadError),\n}","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":574},{"krate":0,"index":577}],"decl_id":null,"docs":" Errors that can occur during decoding\n","sig":null,"attributes":[{"value":"/ Errors that can occur during decoding","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","byte_start":2415,"byte_end":2456,"line_start":117,"line_end":117,"column_start":1,"column_end":42}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":8657,"byte_end":8672,"line_start":68,"line_end":68,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":8777,"byte_end":8792,"line_start":74,"line_end":74,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":8904,"byte_end":8919,"line_start":80,"line_end":80,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":9167,"byte_end":9182,"line_start":89,"line_end":89,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":9296,"byte_end":9311,"line_start":95,"line_end":95,"column_start":23,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":9338,"byte_end":9353,"line_start":97,"line_end":97,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":19966,"byte_end":19977,"line_start":427,"line_end":427,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":23393,"byte_end":23406,"line_start":540,"line_end":540,"column_start":11,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header_cached.rs","byte_start":45341,"byte_end":45363,"line_start":31,"line_end":31,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/huffman_tree.rs","byte_start":50820,"byte_end":50828,"line_start":64,"line_end":64,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/huffman_tree.rs","byte_start":54301,"byte_end":54318,"line_start":176,"line_end":176,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":190},{"krate":0,"index":196},{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/huffman_tree.rs","byte_start":60311,"byte_end":60328,"line_start":346,"line_end":346,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/audio.rs","byte_start":87723,"byte_end":87737,"line_start":48,"line_end":48,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/audio.rs","byte_start":87834,"byte_end":87848,"line_start":54,"line_end":54,"column_start":23,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/audio.rs","byte_start":87875,"byte_end":87889,"line_start":56,"line_end":56,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/audio.rs","byte_start":88460,"byte_end":88472,"line_start":74,"line_end":74,"column_start":11,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/audio.rs","byte_start":88658,"byte_end":88674,"line_start":88,"line_end":88,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/audio.rs","byte_start":88864,"byte_end":88880,"line_start":96,"line_end":96,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/audio.rs","byte_start":114044,"byte_end":114063,"line_start":852,"line_end":852,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/bitpacking.rs","byte_start":138135,"byte_end":138148,"line_start":361,"line_end":361,"column_start":11,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":379},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":380},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":147939,"byte_end":147954,"line_start":79,"line_end":79,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/samples.rs","byte_start":158693,"byte_end":158696,"line_start":20,"line_end":20,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/samples.rs","byte_start":159242,"byte_end":159260,"line_start":48,"line_end":48,"column_start":29,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","byte_start":2648,"byte_end":2659,"line_start":126,"line_end":126,"column_start":28,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","byte_start":2691,"byte_end":2702,"line_start":128,"line_end":128,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","byte_start":3091,"byte_end":3102,"line_start":139,"line_end":139,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","byte_start":3233,"byte_end":3244,"line_start":145,"line_end":145,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","byte_start":3391,"byte_end":3402,"line_start":152,"line_end":152,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","byte_start":2106,"byte_end":2112,"line_start":95,"line_end":95,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":11}},{"kind":"Mod","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","byte_start":2199,"byte_end":2204,"line_start":101,"line_end":101,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":252}},{"kind":"Mod","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","byte_start":2254,"byte_end":2264,"line_start":104,"line_end":104,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":385}},{"kind":"Mod","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","byte_start":2274,"byte_end":2281,"line_start":105,"line_end":105,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":427}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":8657,"byte_end":8672,"line_start":68,"line_end":68,"column_start":19,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":468},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":8777,"byte_end":8792,"line_start":74,"line_end":74,"column_start":29,"column_end":44},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":468},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":8904,"byte_end":8919,"line_start":80,"line_end":80,"column_start":22,"column_end":37},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":468},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":9167,"byte_end":9182,"line_start":89,"line_end":89,"column_start":30,"column_end":45},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":468},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":9296,"byte_end":9311,"line_start":95,"line_end":95,"column_start":23,"column_end":38},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":468},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":9338,"byte_end":9353,"line_start":97,"line_end":97,"column_start":23,"column_end":38},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":468},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":19966,"byte_end":19977,"line_start":427,"line_end":427,"column_start":6,"column_end":17},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header.rs","byte_start":23393,"byte_end":23406,"line_start":540,"line_end":540,"column_start":11,"column_end":24},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":361},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/header_cached.rs","byte_start":45341,"byte_end":45363,"line_start":31,"line_end":31,"column_start":6,"column_end":28},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":155},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/huffman_tree.rs","byte_start":50820,"byte_end":50828,"line_start":64,"line_end":64,"column_start":6,"column_end":14},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/huffman_tree.rs","byte_start":54301,"byte_end":54318,"line_start":176,"line_end":176,"column_start":6,"column_end":23},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/huffman_tree.rs","byte_start":60311,"byte_end":60328,"line_start":346,"line_end":346,"column_start":10,"column_end":27},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/audio.rs","byte_start":87723,"byte_end":87737,"line_start":48,"line_end":48,"column_start":19,"column_end":33},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":531},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/audio.rs","byte_start":87834,"byte_end":87848,"line_start":54,"line_end":54,"column_start":23,"column_end":37},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":531},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/audio.rs","byte_start":87875,"byte_end":87889,"line_start":56,"line_end":56,"column_start":23,"column_end":37},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":531},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/audio.rs","byte_start":88460,"byte_end":88472,"line_start":74,"line_end":74,"column_start":11,"column_end":23},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":277},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/audio.rs","byte_start":88658,"byte_end":88674,"line_start":88,"line_end":88,"column_start":19,"column_end":35},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":293},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/audio.rs","byte_start":88864,"byte_end":88880,"line_start":96,"line_end":96,"column_start":33,"column_end":49},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":293},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/audio.rs","byte_start":114044,"byte_end":114063,"line_start":852,"line_end":852,"column_start":6,"column_end":25},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/bitpacking.rs","byte_start":138135,"byte_end":138148,"line_start":361,"line_end":361,"column_start":11,"column_end":24},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":361},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/inside_ogg.rs","byte_start":147939,"byte_end":147954,"line_start":79,"line_end":79,"column_start":22,"column_end":37},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":405},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/samples.rs","byte_start":158693,"byte_end":158696,"line_start":20,"line_end":20,"column_start":29,"column_end":32},"kind":{"Impl":{"id":21}},"from":{"krate":5,"index":4366},"to":{"krate":0,"index":428}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/samples.rs","byte_start":159242,"byte_end":159260,"line_start":48,"line_end":48,"column_start":29,"column_end":47},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":438},"to":{"krate":0,"index":428}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","byte_start":2648,"byte_end":2659,"line_start":126,"line_end":126,"column_start":28,"column_end":39},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":570},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","byte_start":2691,"byte_end":2702,"line_start":128,"line_end":128,"column_start":28,"column_end":39},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":570},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","byte_start":3091,"byte_end":3102,"line_start":139,"line_end":139,"column_start":38,"column_end":49},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":570},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","byte_start":3233,"byte_end":3244,"line_start":145,"line_end":145,"column_start":40,"column_end":51},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":570},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.10.1/src/lib.rs","byte_start":3391,"byte_end":3402,"line_start":152,"line_end":152,"column_start":29,"column_end":40},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":570},"to":{"krate":2,"index":1889}}]}