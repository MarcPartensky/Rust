{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0","program":"/Users/marcpartensky/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","cpal","/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=8ce7597558280cf0","-C","extra-filename=-8ce7597558280cf0","--out-dir","/Users/marcpartensky/Programs/Rust/Pong-Tutorial/pong/target/rls/debug/deps","-L","dependency=/Users/marcpartensky/Programs/Rust/Pong-Tutorial/pong/target/rls/debug/deps","--extern","core_foundation_sys=/Users/marcpartensky/Programs/Rust/Pong-Tutorial/pong/target/rls/debug/deps/libcore_foundation_sys-96d0e1bfa58cc329.rmeta","--extern","coreaudio=/Users/marcpartensky/Programs/Rust/Pong-Tutorial/pong/target/rls/debug/deps/libcoreaudio-ca9c572b8e75fc73.rmeta","--extern","lazy_static=/Users/marcpartensky/Programs/Rust/Pong-Tutorial/pong/target/rls/debug/deps/liblazy_static-3f6d84c026aa0c21.rmeta","--extern","num_traits=/Users/marcpartensky/Programs/Rust/Pong-Tutorial/pong/target/rls/debug/deps/libnum_traits-38066099c85918d8.rmeta","--extern","thiserror=/Users/marcpartensky/Programs/Rust/Pong-Tutorial/pong/target/rls/debug/deps/libthiserror-0941d510f8fdadca.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/marcpartensky/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/marcpartensky/Programs/Rust/Pong-Tutorial/pong/target/rls/debug/deps/libcpal-8ce7597558280cf0.rmeta"},"prelude":{"crate_id":{"name":"cpal","disambiguator":[15073414673846913054,1353645007706376034]},"crate_root":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src","external_crates":[{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9176452395873514981,10525323411957323785]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[15010738070622620763,9605760616786660431]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8211843569075862794,5370502913999467694]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5168977417888994485,12129851499920233632]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9254821246596336482,1562696929571001984]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4867494102928472883,16549916413327868340]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12208796569805280475,9421298070223625802]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[16776259526442764164,2692171601035033462]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[8506315589905780113,7752550639658555424]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6004073670142137807,10055010459345902388]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[13812981793209371227,10465105188798852626]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[12279896640040761358,16819944754252654372]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[502125910674001101,4874613814734389117]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[6964077277237141888,7151316435171244180]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[5505266058476155326,9550778519957076375]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","num":16,"id":{"name":"thiserror","disambiguator":[12975265161977704930,6816541863109932205]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","num":17,"id":{"name":"thiserror_impl","disambiguator":[6796221752730650830,16960093605678427307]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/coreaudio/mod.rs","num":18,"id":{"name":"coreaudio","disambiguator":[17664367931519541577,10056485891202083877]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/coreaudio/mod.rs","num":19,"id":{"name":"bitflags","disambiguator":[16116468340896408149,12780401407780675886]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/coreaudio/mod.rs","num":20,"id":{"name":"coreaudio_sys","disambiguator":[8011611833854510411,9243060703284945529]}},{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/coreaudio/mod.rs","num":21,"id":{"name":"core_foundation_sys","disambiguator":[16865125840248483238,1688087439248186473]}}],"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":0,"byte_end":15155,"line_start":1,"line_end":435,"column_start":1,"column_end":3}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":6510,"byte_end":6511,"line_start":152,"line_end":152,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"DefaultFormatError, DevicesError, PauseStreamError, SupportedFormatsError, HostUnavailable, BuildStreamError, DeviceNameError, BackendSpecificError, StreamError, PlayStreamError","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":694},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":6537,"byte_end":6546,"line_start":154,"line_end":154,"column_start":5,"column_end":14},"alias_span":null,"name":"ALL_HOSTS","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":698},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":6548,"byte_end":6554,"line_start":154,"line_end":154,"column_start":16,"column_end":22},"alias_span":null,"name":"Device","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":701},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":6556,"byte_end":6563,"line_start":154,"line_end":154,"column_start":24,"column_end":31},"alias_span":null,"name":"Devices","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":704},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":6565,"byte_end":6574,"line_start":154,"line_end":154,"column_start":33,"column_end":42},"alias_span":null,"name":"EventLoop","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":695},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":6576,"byte_end":6580,"line_start":154,"line_end":154,"column_start":44,"column_end":48},"alias_span":null,"name":"Host","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":811},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":6582,"byte_end":6588,"line_start":154,"line_end":154,"column_start":50,"column_end":56},"alias_span":null,"name":"HostId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":707},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":6590,"byte_end":6611,"line_start":154,"line_end":154,"column_start":58,"column_end":79},"alias_span":null,"name":"SupportedInputFormats","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":710},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":6617,"byte_end":6639,"line_start":155,"line_end":155,"column_start":5,"column_end":27},"alias_span":null,"name":"SupportedOutputFormats","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":794},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":6641,"byte_end":6649,"line_start":155,"line_end":155,"column_start":29,"column_end":37},"alias_span":null,"name":"StreamId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":792},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":6651,"byte_end":6666,"line_start":155,"line_end":155,"column_start":39,"column_end":54},"alias_span":null,"name":"available_hosts","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":310},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":6668,"byte_end":6680,"line_start":155,"line_end":155,"column_start":56,"column_end":68},"alias_span":null,"name":"default_host","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":793},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":6682,"byte_end":6694,"line_start":155,"line_end":155,"column_start":70,"column_end":82},"alias_span":null,"name":"host_from_id","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":316},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":6725,"byte_end":6731,"line_start":157,"line_end":157,"column_start":27,"column_end":33},"alias_span":null,"name":"Sample","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":846},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":6733,"byte_end":6745,"line_start":157,"line_end":157,"column_start":35,"column_end":47},"alias_span":null,"name":"SampleFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/platform/mod.rs","byte_start":66176,"byte_end":66177,"line_start":8,"line_end":8,"column_start":30,"column_end":31},"alias_span":null,"name":"*","value":"default_host, SupportedOutputFormats, Host, Device, host_from_id, StreamId, HostId, Devices, available_hosts, SupportedInputFormats, EventLoop, ALL_HOSTS","parent":{"krate":0,"index":298}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":0,"byte_end":15155,"line_start":1,"line_end":435,"column_start":1,"column_end":3},"name":"","qualname":"::","value":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":298},{"krate":0,"index":311},{"krate":0,"index":344},{"krate":0,"index":394},{"krate":0,"index":396},{"krate":0,"index":398},{"krate":0,"index":864},{"krate":0,"index":885},{"krate":0,"index":883},{"krate":0,"index":882},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":869},{"krate":0,"index":867},{"krate":0,"index":887},{"krate":0,"index":900},{"krate":0,"index":898},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":902},{"krate":0,"index":916},{"krate":0,"index":914},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":399},{"krate":0,"index":405},{"krate":0,"index":407},{"krate":0,"index":411},{"krate":0,"index":415},{"krate":0,"index":426},{"krate":0,"index":437},{"krate":0,"index":446},{"krate":0,"index":451},{"krate":0,"index":456},{"krate":0,"index":460},{"krate":0,"index":463},{"krate":0,"index":466}],"decl_id":null,"docs":" # How to use cpal","sig":null,"attributes":[{"value":"/ # How to use cpal","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":0,"byte_end":21,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":22,"byte_end":25,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Here are some concepts cpal exposes:","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":26,"byte_end":66,"line_start":3,"line_end":3,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":67,"byte_end":70,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - A [**Host**](./trait.Host.html) provides access to the available audio devices on the system.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":71,"byte_end":170,"line_start":5,"line_end":5,"column_start":1,"column_end":100}},{"value":"/   Some platforms have more than one host available, but every platform supported by CPAL has at","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":171,"byte_end":270,"line_start":6,"line_end":6,"column_start":1,"column_end":100}},{"value":"/   least one [**DefaultHost**](./trait.Host.html) that is guaranteed to be available.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":271,"byte_end":359,"line_start":7,"line_end":7,"column_start":1,"column_end":89}},{"value":"/ - A [**Device**](./trait.Device.html) is an audio device that may have any number of input and","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":360,"byte_end":458,"line_start":8,"line_end":8,"column_start":1,"column_end":99}},{"value":"/   output streams.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":459,"byte_end":480,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/ - A stream is an open flow of audio data. Input streams allow you to receive audio data, output","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":481,"byte_end":580,"line_start":10,"line_end":10,"column_start":1,"column_end":100}},{"value":"/   streams allow you to play audio data. You must choose which **Device** will run your stream","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":581,"byte_end":678,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"/   before you can create one. Often, a default device can be retrieved via the **Host**.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":679,"byte_end":770,"line_start":12,"line_end":12,"column_start":1,"column_end":92}},{"value":"/ - An [**EventLoop**](./trait.EventLoop.html) is a collection of streams being run by one or","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":771,"byte_end":866,"line_start":13,"line_end":13,"column_start":1,"column_end":96}},{"value":"/   more **Device**s under a single **Host**. Each stream must belong to an **EventLoop**, and","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":867,"byte_end":963,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/   all the streams that belong to an **EventLoop** are managed together.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":964,"byte_end":1039,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":1040,"byte_end":1043,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The first step is to initialise the `Host` (for accessing audio devices) and create an","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":1044,"byte_end":1134,"line_start":17,"line_end":17,"column_start":1,"column_end":91}},{"value":"/ `EventLoop`:","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":1135,"byte_end":1151,"line_start":18,"line_end":18,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":1152,"byte_end":1155,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":1156,"byte_end":1163,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use cpal::traits::HostTrait;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":1164,"byte_end":1196,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"/ let host = cpal::default_host();","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":1197,"byte_end":1233,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/ let event_loop = host.event_loop();","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":1234,"byte_end":1273,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":1274,"byte_end":1281,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":1282,"byte_end":1285,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Then choose a `Device`. The easiest way is to use the default input or output `Device` via the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":1286,"byte_end":1384,"line_start":26,"line_end":26,"column_start":1,"column_end":99}},{"value":"/ `default_input_device()` or `default_output_device()` functions. Alternatively you can","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":1385,"byte_end":1475,"line_start":27,"line_end":27,"column_start":1,"column_end":91}},{"value":"/ enumerate all the available devices with the `devices()` function. Beware that the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":1476,"byte_end":1562,"line_start":28,"line_end":28,"column_start":1,"column_end":87}},{"value":"/ `default_*_device()` functions return an `Option` in case no device is available for that","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":1563,"byte_end":1656,"line_start":29,"line_end":29,"column_start":1,"column_end":94}},{"value":"/ stream type on the system.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":1657,"byte_end":1687,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":1688,"byte_end":1691,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":1692,"byte_end":1705,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/ # use cpal::traits::HostTrait;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":1706,"byte_end":1740,"line_start":33,"line_end":33,"column_start":1,"column_end":35}},{"value":"/ # let host = cpal::default_host();","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":1741,"byte_end":1779,"line_start":34,"line_end":34,"column_start":1,"column_end":39}},{"value":"/ let device = host.default_output_device().expect(\"no output device available\");","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":1780,"byte_end":1863,"line_start":35,"line_end":35,"column_start":1,"column_end":84}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":1864,"byte_end":1871,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":1872,"byte_end":1875,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Before we can create a stream, we must decide what the format of the audio samples is going to","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":1876,"byte_end":1974,"line_start":38,"line_end":38,"column_start":1,"column_end":99}},{"value":"/ be. You can query all the supported formats with the `supported_input_formats()` and","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":1975,"byte_end":2063,"line_start":39,"line_end":39,"column_start":1,"column_end":89}},{"value":"/ `supported_output_formats()` methods. These produce a list of `SupportedFormat` structs which","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":2064,"byte_end":2161,"line_start":40,"line_end":40,"column_start":1,"column_end":98}},{"value":"/ can later be turned into actual `Format` structs. If you don't want to query the list of","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":2162,"byte_end":2254,"line_start":41,"line_end":41,"column_start":1,"column_end":93}},{"value":"/ formats, you can also build your own `Format` manually, but doing so could lead to an error","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":2255,"byte_end":2350,"line_start":42,"line_end":42,"column_start":1,"column_end":96}},{"value":"/ when building the stream if the format is not supported by the device.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":2351,"byte_end":2425,"line_start":43,"line_end":43,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":2426,"byte_end":2429,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ > **Note**: the `supported_formats()` method could return an error for example if the device","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":2430,"byte_end":2526,"line_start":45,"line_end":45,"column_start":1,"column_end":97}},{"value":"/ > has been disconnected.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":2527,"byte_end":2555,"line_start":46,"line_end":46,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":2556,"byte_end":2559,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":2560,"byte_end":2573,"line_start":48,"line_end":48,"column_start":1,"column_end":14}},{"value":"/ use cpal::traits::{DeviceTrait, HostTrait};","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":2574,"byte_end":2621,"line_start":49,"line_end":49,"column_start":1,"column_end":48}},{"value":"/ # let host = cpal::default_host();","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":2622,"byte_end":2660,"line_start":50,"line_end":50,"column_start":1,"column_end":39}},{"value":"/ # let device = host.default_output_device().unwrap();","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":2661,"byte_end":2718,"line_start":51,"line_end":51,"column_start":1,"column_end":58}},{"value":"/ let mut supported_formats_range = device.supported_output_formats()","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":2719,"byte_end":2790,"line_start":52,"line_end":52,"column_start":1,"column_end":72}},{"value":"/     .expect(\"error while querying formats\");","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":2791,"byte_end":2839,"line_start":53,"line_end":53,"column_start":1,"column_end":49}},{"value":"/ let format = supported_formats_range.next()","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":2840,"byte_end":2887,"line_start":54,"line_end":54,"column_start":1,"column_end":48}},{"value":"/     .expect(\"no supported format?!\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":2888,"byte_end":2928,"line_start":55,"line_end":55,"column_start":1,"column_end":41}},{"value":"/     .with_max_sample_rate();","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":2929,"byte_end":2961,"line_start":56,"line_end":56,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":2962,"byte_end":2969,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":2970,"byte_end":2973,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ Now that we have everything for the stream, we can create it from our event loop:","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":2974,"byte_end":3059,"line_start":59,"line_end":59,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":3060,"byte_end":3063,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":3064,"byte_end":3077,"line_start":61,"line_end":61,"column_start":1,"column_end":14}},{"value":"/ use cpal::traits::{DeviceTrait, EventLoopTrait, HostTrait};","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":3078,"byte_end":3141,"line_start":62,"line_end":62,"column_start":1,"column_end":64}},{"value":"/ # let host = cpal::default_host();","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":3142,"byte_end":3180,"line_start":63,"line_end":63,"column_start":1,"column_end":39}},{"value":"/ # let event_loop = host.event_loop();","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":3181,"byte_end":3222,"line_start":64,"line_end":64,"column_start":1,"column_end":42}},{"value":"/ # let device = host.default_output_device().unwrap();","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":3223,"byte_end":3280,"line_start":65,"line_end":65,"column_start":1,"column_end":58}},{"value":"/ # let format = device.supported_output_formats().unwrap().next().unwrap().with_max_sample_rate();","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":3281,"byte_end":3382,"line_start":66,"line_end":66,"column_start":1,"column_end":102}},{"value":"/ let stream_id = event_loop.build_output_stream(&device, &format).unwrap();","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":3383,"byte_end":3461,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":3462,"byte_end":3469,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":3470,"byte_end":3473,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ The value returned by `build_output_stream()` is of type `StreamId` and is an identifier that","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":3474,"byte_end":3571,"line_start":70,"line_end":70,"column_start":1,"column_end":98}},{"value":"/ will allow you to control the stream.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":3572,"byte_end":3613,"line_start":71,"line_end":71,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":3614,"byte_end":3617,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ Now we must start the stream. This is done with the `play_stream()` method on the event loop.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":3618,"byte_end":3715,"line_start":73,"line_end":73,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":3716,"byte_end":3719,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":3720,"byte_end":3733,"line_start":75,"line_end":75,"column_start":1,"column_end":14}},{"value":"/ # use cpal::traits::{EventLoopTrait, HostTrait};","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":3734,"byte_end":3786,"line_start":76,"line_end":76,"column_start":1,"column_end":53}},{"value":"/ # let host = cpal::default_host();","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":3787,"byte_end":3825,"line_start":77,"line_end":77,"column_start":1,"column_end":39}},{"value":"/ # let event_loop = host.event_loop();","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":3826,"byte_end":3867,"line_start":78,"line_end":78,"column_start":1,"column_end":42}},{"value":"/ # let stream_id = unimplemented!();","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":3868,"byte_end":3907,"line_start":79,"line_end":79,"column_start":1,"column_end":40}},{"value":"/ event_loop.play_stream(stream_id).expect(\"failed to play_stream\");","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":3908,"byte_end":3978,"line_start":80,"line_end":80,"column_start":1,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":3979,"byte_end":3986,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":3987,"byte_end":3990,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Now everything is ready! We call `run()` on the `event_loop` to begin processing.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":3991,"byte_end":4076,"line_start":83,"line_end":83,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":4077,"byte_end":4080,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":4081,"byte_end":4094,"line_start":85,"line_end":85,"column_start":1,"column_end":14}},{"value":"/ # use cpal::traits::{EventLoopTrait, HostTrait};","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":4095,"byte_end":4147,"line_start":86,"line_end":86,"column_start":1,"column_end":53}},{"value":"/ # let host = cpal::default_host();","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":4148,"byte_end":4186,"line_start":87,"line_end":87,"column_start":1,"column_end":39}},{"value":"/ # let event_loop = host.event_loop();","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":4187,"byte_end":4228,"line_start":88,"line_end":88,"column_start":1,"column_end":42}},{"value":"/ event_loop.run(move |_stream_id, _stream_result| {","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":4229,"byte_end":4283,"line_start":89,"line_end":89,"column_start":1,"column_end":55}},{"value":"/     // react to stream events and read or write stream data here","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":4284,"byte_end":4352,"line_start":90,"line_end":90,"column_start":1,"column_end":69}},{"value":"/ });","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":4353,"byte_end":4360,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":4361,"byte_end":4368,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":4369,"byte_end":4372,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ > **Note**: Calling `run()` will block the thread forever, so it's usually best done in a","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":4373,"byte_end":4466,"line_start":94,"line_end":94,"column_start":1,"column_end":94}},{"value":"/ > separate thread.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":4467,"byte_end":4489,"line_start":95,"line_end":95,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":4490,"byte_end":4493,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ While `run()` is running, the audio device of the user will from time to time call the callback","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":4494,"byte_end":4593,"line_start":97,"line_end":97,"column_start":1,"column_end":100}},{"value":"/ that you passed to this function. The callback gets passed the stream ID and an instance of type","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":4594,"byte_end":4694,"line_start":98,"line_end":98,"column_start":1,"column_end":101}},{"value":"/ `StreamData` that represents the data that must be read from or written to. The inner","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":4695,"byte_end":4784,"line_start":99,"line_end":99,"column_start":1,"column_end":90}},{"value":"/ `UnknownTypeOutputBuffer` can be one of `I16`, `U16` or `F32` depending on the format that was","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":4785,"byte_end":4883,"line_start":100,"line_end":100,"column_start":1,"column_end":99}},{"value":"/ passed to `build_output_stream`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":4884,"byte_end":4920,"line_start":101,"line_end":101,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":4921,"byte_end":4924,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ In this example, we simply fill the given output buffer with zeroes.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":4925,"byte_end":4997,"line_start":103,"line_end":103,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":4998,"byte_end":5001,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":5002,"byte_end":5015,"line_start":105,"line_end":105,"column_start":1,"column_end":14}},{"value":"/ use cpal::{StreamData, UnknownTypeOutputBuffer};","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":5016,"byte_end":5068,"line_start":106,"line_end":106,"column_start":1,"column_end":53}},{"value":"/ use cpal::traits::{EventLoopTrait, HostTrait};","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":5069,"byte_end":5119,"line_start":107,"line_end":107,"column_start":1,"column_end":51}},{"value":"/ # let host = cpal::default_host();","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":5120,"byte_end":5158,"line_start":108,"line_end":108,"column_start":1,"column_end":39}},{"value":"/ # let event_loop = host.event_loop();","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":5159,"byte_end":5200,"line_start":109,"line_end":109,"column_start":1,"column_end":42}},{"value":"/ event_loop.run(move |stream_id, stream_result| {","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":5201,"byte_end":5253,"line_start":110,"line_end":110,"column_start":1,"column_end":53}},{"value":"/     let stream_data = match stream_result {","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":5254,"byte_end":5301,"line_start":111,"line_end":111,"column_start":1,"column_end":48}},{"value":"/         Ok(data) => data,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":5302,"byte_end":5331,"line_start":112,"line_end":112,"column_start":1,"column_end":30}},{"value":"/         Err(err) => {","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":5332,"byte_end":5357,"line_start":113,"line_end":113,"column_start":1,"column_end":26}},{"value":"/             eprintln!(\"an error occurred on stream {:?}: {}\", stream_id, err);","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":5358,"byte_end":5440,"line_start":114,"line_end":114,"column_start":1,"column_end":83}},{"value":"/             return;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":5441,"byte_end":5464,"line_start":115,"line_end":115,"column_start":1,"column_end":24}},{"value":"/         }","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":5465,"byte_end":5478,"line_start":116,"line_end":116,"column_start":1,"column_end":14}},{"value":"/         _ => return,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":5479,"byte_end":5503,"line_start":117,"line_end":117,"column_start":1,"column_end":25}},{"value":"/     };","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":5504,"byte_end":5514,"line_start":118,"line_end":118,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":5515,"byte_end":5518,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/     match stream_data {","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":5519,"byte_end":5546,"line_start":120,"line_end":120,"column_start":1,"column_end":28}},{"value":"/         StreamData::Output { buffer: UnknownTypeOutputBuffer::U16(mut buffer) } => {","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":5547,"byte_end":5635,"line_start":121,"line_end":121,"column_start":1,"column_end":89}},{"value":"/             for elem in buffer.iter_mut() {","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":5636,"byte_end":5683,"line_start":122,"line_end":122,"column_start":1,"column_end":48}},{"value":"/                 *elem = u16::max_value() / 2;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":5684,"byte_end":5733,"line_start":123,"line_end":123,"column_start":1,"column_end":50}},{"value":"/             }","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":5734,"byte_end":5751,"line_start":124,"line_end":124,"column_start":1,"column_end":18}},{"value":"/         },","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":5752,"byte_end":5766,"line_start":125,"line_end":125,"column_start":1,"column_end":15}},{"value":"/         StreamData::Output { buffer: UnknownTypeOutputBuffer::I16(mut buffer) } => {","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":5767,"byte_end":5855,"line_start":126,"line_end":126,"column_start":1,"column_end":89}},{"value":"/             for elem in buffer.iter_mut() {","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":5856,"byte_end":5903,"line_start":127,"line_end":127,"column_start":1,"column_end":48}},{"value":"/                 *elem = 0;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":5904,"byte_end":5934,"line_start":128,"line_end":128,"column_start":1,"column_end":31}},{"value":"/             }","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":5935,"byte_end":5952,"line_start":129,"line_end":129,"column_start":1,"column_end":18}},{"value":"/         },","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":5953,"byte_end":5967,"line_start":130,"line_end":130,"column_start":1,"column_end":15}},{"value":"/         StreamData::Output { buffer: UnknownTypeOutputBuffer::F32(mut buffer) } => {","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":5968,"byte_end":6056,"line_start":131,"line_end":131,"column_start":1,"column_end":89}},{"value":"/             for elem in buffer.iter_mut() {","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":6057,"byte_end":6104,"line_start":132,"line_end":132,"column_start":1,"column_end":48}},{"value":"/                 *elem = 0.0;","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":6105,"byte_end":6137,"line_start":133,"line_end":133,"column_start":1,"column_end":33}},{"value":"/             }","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":6138,"byte_end":6155,"line_start":134,"line_end":134,"column_start":1,"column_end":18}},{"value":"/         },","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":6156,"byte_end":6170,"line_start":135,"line_end":135,"column_start":1,"column_end":15}},{"value":"/         _ => (),","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":6171,"byte_end":6191,"line_start":136,"line_end":136,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":6192,"byte_end":6201,"line_start":137,"line_end":137,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":6202,"byte_end":6209,"line_start":138,"line_end":138,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":6210,"byte_end":6217,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"recursion_limit = \"512\"","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":6219,"byte_end":6246,"line_start":141,"line_end":141,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":468},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":15345,"byte_end":15360,"line_start":6,"line_end":6,"column_start":12,"column_end":27},"name":"HostUnavailable","qualname":"::error::HostUnavailable","value":"","parent":null,"children":[],"decl_id":null,"docs":" The requested host, although supported on this platform, is unavailable.\n","sig":null,"attributes":[{"value":"/ The requested host, although supported on this platform, is unavailable.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":15180,"byte_end":15256,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"error(\"the requested host is unavailable\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":15288,"byte_end":15333,"line_start":5,"line_end":5,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":477},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":16199,"byte_end":16219,"line_start":22,"line_end":22,"column_start":12,"column_end":32},"name":"BackendSpecificError","qualname":"::error::BackendSpecificError","value":"BackendSpecificError { description }","parent":null,"children":[{"krate":0,"index":478}],"decl_id":null,"docs":" Some error has occurred that is specific to the backend from which it was produced.","sig":null,"attributes":[{"value":"/ Some error has occurred that is specific to the backend from which it was produced.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":15363,"byte_end":15450,"line_start":8,"line_end":8,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":15451,"byte_end":15454,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This error is often used as a catch-all in cases where:","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":15455,"byte_end":15514,"line_start":10,"line_end":10,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":15515,"byte_end":15518,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ - It is unclear exactly what error might be produced by the backend API.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":15519,"byte_end":15595,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ - It does not make sense to add a variant to the enclosing error type.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":15596,"byte_end":15670,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/ - No error was expected to occur at all, but we return an error to avoid the possibility of a","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":15671,"byte_end":15768,"line_start":14,"line_end":14,"column_start":1,"column_end":98}},{"value":"/   `panic!` caused by some unforseen or unknown reason.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":15769,"byte_end":15827,"line_start":15,"line_end":15,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":15828,"byte_end":15831,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ **Note:** If you notice a `BackendSpecificError` that you believe could be better handled in a","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":15832,"byte_end":15930,"line_start":17,"line_end":17,"column_start":1,"column_end":99}},{"value":"/ cross-platform manner, please create an issue or submit a pull request with a patch that adds","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":15931,"byte_end":16028,"line_start":18,"line_end":18,"column_start":1,"column_end":98}},{"value":"/ the necessary error variant to the appropriate error enum.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":16029,"byte_end":16091,"line_start":19,"line_end":19,"column_start":1,"column_end":63}},{"value":"error(\"A backend-specific error has occurred: {description}\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":16123,"byte_end":16187,"line_start":21,"line_end":21,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":478},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":16230,"byte_end":16241,"line_start":23,"line_end":23,"column_start":9,"column_end":20},"name":"description","qualname":"::error::BackendSpecificError::description","value":"std::string::String","parent":{"krate":0,"index":477},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":490},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":16514,"byte_end":16529,"line_start":31,"line_end":31,"column_start":5,"column_end":20},"name":"BackendSpecific","qualname":"::error::DevicesError::BackendSpecific","value":"DevicesError::BackendSpecific { err }","parent":{"krate":0,"index":489},"children":[],"decl_id":null,"docs":" See the `BackendSpecificError` docs for more information about this error variant.\n","sig":null,"attributes":[{"value":"/ See the `BackendSpecificError` docs for more information about this error variant.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":16401,"byte_end":16487,"line_start":29,"line_end":29,"column_start":5,"column_end":91}},{"value":"error(\"{err}\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":16492,"byte_end":16509,"line_start":30,"line_end":30,"column_start":5,"column_end":22}}]},{"kind":"Enum","id":{"krate":0,"index":489},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":16382,"byte_end":16394,"line_start":28,"line_end":28,"column_start":10,"column_end":22},"name":"DevicesError","qualname":"::error::DevicesError","value":"pub enum DevicesError {\n\n    /// See the `BackendSpecificError` docs for more information about this error variant.\n    #[error(\"{err}\")]\n    BackendSpecific {\n        #[from]\n        err: BackendSpecificError,\n    },\n}","parent":null,"children":[{"krate":0,"index":490}],"decl_id":null,"docs":" An error that might occur while attempting to enumerate the available devices on a system.\n","sig":null,"attributes":[{"value":"/ An error that might occur while attempting to enumerate the available devices on a system.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":16254,"byte_end":16348,"line_start":26,"line_end":26,"column_start":1,"column_end":95}}]},{"kind":"StructVariant","id":{"krate":0,"index":505},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":16833,"byte_end":16848,"line_start":42,"line_end":42,"column_start":5,"column_end":20},"name":"BackendSpecific","qualname":"::error::DeviceNameError::BackendSpecific","value":"DeviceNameError::BackendSpecific { err }","parent":{"krate":0,"index":504},"children":[],"decl_id":null,"docs":" See the `BackendSpecificError` docs for more information about this error variant.\n","sig":null,"attributes":[{"value":"/ See the `BackendSpecificError` docs for more information about this error variant.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":16720,"byte_end":16806,"line_start":40,"line_end":40,"column_start":5,"column_end":91}},{"value":"error(\"{err}\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":16811,"byte_end":16828,"line_start":41,"line_end":41,"column_start":5,"column_end":22}}]},{"kind":"Enum","id":{"krate":0,"index":504},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":16698,"byte_end":16713,"line_start":39,"line_end":39,"column_start":10,"column_end":25},"name":"DeviceNameError","qualname":"::error::DeviceNameError","value":"pub enum DeviceNameError {\n\n    /// See the `BackendSpecificError` docs for more information about this error variant.\n    #[error(\"{err}\")]\n    BackendSpecific {\n        #[from]\n        err: BackendSpecificError,\n    },\n}","parent":null,"children":[{"krate":0,"index":505}],"decl_id":null,"docs":" An error that may occur while attempting to retrieve a device name.\n","sig":null,"attributes":[{"value":"/ An error that may occur while attempting to retrieve a device name.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":16593,"byte_end":16664,"line_start":37,"line_end":37,"column_start":1,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":520},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":17265,"byte_end":17283,"line_start":54,"line_end":54,"column_start":5,"column_end":23},"name":"DeviceNotAvailable","qualname":"::error::SupportedFormatsError::DeviceNotAvailable","value":"SupportedFormatsError::DeviceNotAvailable","parent":{"krate":0,"index":519},"children":[],"decl_id":null,"docs":" The device no longer exists. This can happen if the device is disconnected while the\n program is running.\n","sig":null,"attributes":[{"value":"/ The device no longer exists. This can happen if the device is disconnected while the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":17047,"byte_end":17135,"line_start":51,"line_end":51,"column_start":5,"column_end":93}},{"value":"/ program is running.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":17140,"byte_end":17163,"line_start":52,"line_end":52,"column_start":5,"column_end":28}},{"value":"error(\"The requested device is no longer available. For example, it has been unplugged.\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":17168,"byte_end":17260,"line_start":53,"line_end":53,"column_start":5,"column_end":97}}]},{"kind":"TupleVariant","id":{"krate":0,"index":522},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":17522,"byte_end":17537,"line_start":59,"line_end":59,"column_start":5,"column_end":20},"name":"InvalidArgument","qualname":"::error::SupportedFormatsError::InvalidArgument","value":"SupportedFormatsError::InvalidArgument","parent":{"krate":0,"index":519},"children":[],"decl_id":null,"docs":" We called something the C-Layer did not understand\n","sig":null,"attributes":[{"value":"/ We called something the C-Layer did not understand","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":17289,"byte_end":17343,"line_start":55,"line_end":55,"column_start":5,"column_end":59}},{"value":"error(\"Invalid argument passed to the backend. For example, this happens when trying to read capture capabilities when the device does not support it.\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":17348,"byte_end":17517,"line_start":56,"line_end":58,"column_start":5,"column_end":7}}]},{"kind":"StructVariant","id":{"krate":0,"index":524},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":17656,"byte_end":17671,"line_start":62,"line_end":62,"column_start":5,"column_end":20},"name":"BackendSpecific","qualname":"::error::SupportedFormatsError::BackendSpecific","value":"SupportedFormatsError::BackendSpecific { err }","parent":{"krate":0,"index":519},"children":[],"decl_id":null,"docs":" See the `BackendSpecificError` docs for more information about this error variant.\n","sig":null,"attributes":[{"value":"/ See the `BackendSpecificError` docs for more information about this error variant.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":17543,"byte_end":17629,"line_start":60,"line_end":60,"column_start":5,"column_end":91}},{"value":"error(\"{err}\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":17634,"byte_end":17651,"line_start":61,"line_end":61,"column_start":5,"column_end":22}}]},{"kind":"Enum","id":{"krate":0,"index":519},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":17019,"byte_end":17040,"line_start":50,"line_end":50,"column_start":10,"column_end":31},"name":"SupportedFormatsError","qualname":"::error::SupportedFormatsError","value":"pub enum SupportedFormatsError {\n\n    /// The device no longer exists. This can happen if the device is disconnected while the\n    /// program is running.\n    #[error(\"The requested device is no longer available. For example, it has been unplugged.\")]\n    DeviceNotAvailable,\n\n    /// We called something the C-Layer did not understand\n    #[error(\"Invalid argument passed to the backend. For example, this happens when trying to read capture capabilities when the device does not support it.\")]\n    InvalidArgument,\n\n    /// See the `BackendSpecificError` docs for more information about this error variant.\n    #[error(\"{err}\")]\n    BackendSpecific {\n        #[from]\n        err: BackendSpecificError,\n    },\n}","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":522},{"krate":0,"index":524}],"decl_id":null,"docs":" Error that can happen when enumerating the list of supported formats.\n","sig":null,"attributes":[{"value":"/ Error that can happen when enumerating the list of supported formats.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":16912,"byte_end":16985,"line_start":48,"line_end":48,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":539},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":18111,"byte_end":18129,"line_start":74,"line_end":74,"column_start":5,"column_end":23},"name":"DeviceNotAvailable","qualname":"::error::DefaultFormatError::DeviceNotAvailable","value":"DefaultFormatError::DeviceNotAvailable","parent":{"krate":0,"index":538},"children":[],"decl_id":null,"docs":" The device no longer exists. This can happen if the device is disconnected while the\n program is running.\n","sig":null,"attributes":[{"value":"/ The device no longer exists. This can happen if the device is disconnected while the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":17893,"byte_end":17981,"line_start":71,"line_end":71,"column_start":5,"column_end":93}},{"value":"/ program is running.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":17986,"byte_end":18009,"line_start":72,"line_end":72,"column_start":5,"column_end":28}},{"value":"error(\"The requested device is no longer available. For example, it has been unplugged.\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":18014,"byte_end":18106,"line_start":73,"line_end":73,"column_start":5,"column_end":97}}]},{"kind":"TupleVariant","id":{"krate":0,"index":541},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":18305,"byte_end":18327,"line_start":77,"line_end":77,"column_start":5,"column_end":27},"name":"StreamTypeNotSupported","qualname":"::error::DefaultFormatError::StreamTypeNotSupported","value":"DefaultFormatError::StreamTypeNotSupported","parent":{"krate":0,"index":538},"children":[],"decl_id":null,"docs":" Returned if e.g. the default input format was requested on an output-only audio device.\n","sig":null,"attributes":[{"value":"/ Returned if e.g. the default input format was requested on an output-only audio device.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":18135,"byte_end":18226,"line_start":75,"line_end":75,"column_start":5,"column_end":96}},{"value":"error(\"The requested stream type is not supported by the device.\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":18231,"byte_end":18300,"line_start":76,"line_end":76,"column_start":5,"column_end":74}}]},{"kind":"StructVariant","id":{"krate":0,"index":543},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":18446,"byte_end":18461,"line_start":80,"line_end":80,"column_start":5,"column_end":20},"name":"BackendSpecific","qualname":"::error::DefaultFormatError::BackendSpecific","value":"DefaultFormatError::BackendSpecific { err }","parent":{"krate":0,"index":538},"children":[],"decl_id":null,"docs":" See the `BackendSpecificError` docs for more information about this error variant.\n","sig":null,"attributes":[{"value":"/ See the `BackendSpecificError` docs for more information about this error variant.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":18333,"byte_end":18419,"line_start":78,"line_end":78,"column_start":5,"column_end":91}},{"value":"error(\"{err}\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":18424,"byte_end":18441,"line_start":79,"line_end":79,"column_start":5,"column_end":22}}]},{"kind":"Enum","id":{"krate":0,"index":538},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":17868,"byte_end":17886,"line_start":70,"line_end":70,"column_start":10,"column_end":28},"name":"DefaultFormatError","qualname":"::error::DefaultFormatError","value":"pub enum DefaultFormatError {\n\n    /// The device no longer exists. This can happen if the device is disconnected while the\n    /// program is running.\n    #[error(\"The requested device is no longer available. For example, it has been unplugged.\")]\n    DeviceNotAvailable,\n\n    /// Returned if e.g. the default input format was requested on an output-only audio device.\n    #[error(\"The requested stream type is not supported by the device.\")]\n    StreamTypeNotSupported,\n\n    /// See the `BackendSpecificError` docs for more information about this error variant.\n    #[error(\"{err}\")]\n    BackendSpecific {\n        #[from]\n        err: BackendSpecificError,\n    },\n}","parent":null,"children":[{"krate":0,"index":539},{"krate":0,"index":541},{"krate":0,"index":543}],"decl_id":null,"docs":" May occur when attempting to request the default input or output stream format from a `Device`.\n","sig":null,"attributes":[{"value":"/ May occur when attempting to request the default input or output stream format from a `Device`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":17735,"byte_end":17834,"line_start":68,"line_end":68,"column_start":1,"column_end":100}}]},{"kind":"TupleVariant","id":{"krate":0,"index":558},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":18851,"byte_end":18869,"line_start":92,"line_end":92,"column_start":5,"column_end":23},"name":"DeviceNotAvailable","qualname":"::error::BuildStreamError::DeviceNotAvailable","value":"BuildStreamError::DeviceNotAvailable","parent":{"krate":0,"index":557},"children":[],"decl_id":null,"docs":" The device no longer exists. This can happen if the device is disconnected while the\n program is running.\n","sig":null,"attributes":[{"value":"/ The device no longer exists. This can happen if the device is disconnected while the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":18633,"byte_end":18721,"line_start":89,"line_end":89,"column_start":5,"column_end":93}},{"value":"/ program is running.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":18726,"byte_end":18749,"line_start":90,"line_end":90,"column_start":5,"column_end":28}},{"value":"error(\"The requested device is no longer available. For example, it has been unplugged.\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":18754,"byte_end":18846,"line_start":91,"line_end":91,"column_start":5,"column_end":97}}]},{"kind":"TupleVariant","id":{"krate":0,"index":560},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":18997,"byte_end":19015,"line_start":95,"line_end":95,"column_start":5,"column_end":23},"name":"FormatNotSupported","qualname":"::error::BuildStreamError::FormatNotSupported","value":"BuildStreamError::FormatNotSupported","parent":{"krate":0,"index":557},"children":[],"decl_id":null,"docs":" The required format is not supported.\n","sig":null,"attributes":[{"value":"/ The required format is not supported.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":18875,"byte_end":18916,"line_start":93,"line_end":93,"column_start":5,"column_end":46}},{"value":"error(\"The requested stream format is not supported by the device.\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":18921,"byte_end":18992,"line_start":94,"line_end":94,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":562},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":19355,"byte_end":19370,"line_start":101,"line_end":101,"column_start":5,"column_end":20},"name":"InvalidArgument","qualname":"::error::BuildStreamError::InvalidArgument","value":"BuildStreamError::InvalidArgument","parent":{"krate":0,"index":557},"children":[],"decl_id":null,"docs":" We called something the C-Layer did not understand","sig":null,"attributes":[{"value":"/ We called something the C-Layer did not understand","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":19021,"byte_end":19075,"line_start":96,"line_end":96,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":19080,"byte_end":19083,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ On ALSA device functions called with a feature they do not support will yield this. E.g.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":19088,"byte_end":19180,"line_start":98,"line_end":98,"column_start":5,"column_end":97}},{"value":"/ Trying to use capture capabilities on an output only format yields this.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":19185,"byte_end":19261,"line_start":99,"line_end":99,"column_start":5,"column_end":81}},{"value":"error(\"The requested device does not support this capability (invalid argument)\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":19266,"byte_end":19350,"line_start":100,"line_end":100,"column_start":5,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":564},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":19513,"byte_end":19529,"line_start":104,"line_end":104,"column_start":5,"column_end":21},"name":"StreamIdOverflow","qualname":"::error::BuildStreamError::StreamIdOverflow","value":"BuildStreamError::StreamIdOverflow","parent":{"krate":0,"index":557},"children":[],"decl_id":null,"docs":" Occurs if adding a new Stream ID would cause an integer overflow.\n","sig":null,"attributes":[{"value":"/ Occurs if adding a new Stream ID would cause an integer overflow.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":19376,"byte_end":19445,"line_start":102,"line_end":102,"column_start":5,"column_end":74}},{"value":"error(\"Adding a new stream ID would cause an overflow\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":19450,"byte_end":19508,"line_start":103,"line_end":103,"column_start":5,"column_end":63}}]},{"kind":"StructVariant","id":{"krate":0,"index":566},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":19648,"byte_end":19663,"line_start":107,"line_end":107,"column_start":5,"column_end":20},"name":"BackendSpecific","qualname":"::error::BuildStreamError::BackendSpecific","value":"BuildStreamError::BackendSpecific { err }","parent":{"krate":0,"index":557},"children":[],"decl_id":null,"docs":" See the `BackendSpecificError` docs for more information about this error variant.\n","sig":null,"attributes":[{"value":"/ See the `BackendSpecificError` docs for more information about this error variant.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":19535,"byte_end":19621,"line_start":105,"line_end":105,"column_start":5,"column_end":91}},{"value":"error(\"{err}\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":19626,"byte_end":19643,"line_start":106,"line_end":106,"column_start":5,"column_end":22}}]},{"kind":"Enum","id":{"krate":0,"index":557},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":18610,"byte_end":18626,"line_start":88,"line_end":88,"column_start":10,"column_end":26},"name":"BuildStreamError","qualname":"::error::BuildStreamError","value":"pub enum BuildStreamError {\n\n    /// The device no longer exists. This can happen if the device is disconnected while the\n    /// program is running.\n    #[error(\"The requested device is no longer available. For example, it has been unplugged.\")]\n    DeviceNotAvailable,\n\n    /// The required format is not supported.\n    #[error(\"The requested stream format is not supported by the device.\")]\n    FormatNotSupported,\n\n    /// We called something the C-Layer did not understand\n    ///\n    /// On ALSA device functions called with a feature they do not support will yield this. E.g.\n    /// Trying to use capture capabilities on an output only format yields this.\n    #[error(\"The requested device does not support this capability (invalid argument)\")]\n    InvalidArgument,\n\n    /// Occurs if adding a new Stream ID would cause an integer overflow.\n    #[error(\"Adding a new stream ID would cause an overflow\")]\n    StreamIdOverflow,\n\n    /// See the `BackendSpecificError` docs for more information about this error variant.\n    #[error(\"{err}\")]\n    BackendSpecific {\n        #[from]\n        err: BackendSpecificError,\n    },\n}","parent":null,"children":[{"krate":0,"index":558},{"krate":0,"index":560},{"krate":0,"index":562},{"krate":0,"index":564},{"krate":0,"index":566}],"decl_id":null,"docs":" Error that can happen when creating a `Stream`.\n","sig":null,"attributes":[{"value":"/ Error that can happen when creating a `Stream`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":18525,"byte_end":18576,"line_start":86,"line_end":86,"column_start":1,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":581},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":20206,"byte_end":20224,"line_start":122,"line_end":122,"column_start":5,"column_end":23},"name":"DeviceNotAvailable","qualname":"::error::PlayStreamError::DeviceNotAvailable","value":"PlayStreamError::DeviceNotAvailable","parent":{"krate":0,"index":580},"children":[],"decl_id":null,"docs":" The device associated with the stream is no longer available.\n","sig":null,"attributes":[{"value":"/ The device associated with the stream is no longer available.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":20059,"byte_end":20124,"line_start":120,"line_end":120,"column_start":5,"column_end":70}},{"value":"error(\"the device associated with the stream is no longer available\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":20129,"byte_end":20201,"line_start":121,"line_end":121,"column_start":5,"column_end":77}}]},{"kind":"StructVariant","id":{"krate":0,"index":583},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":20343,"byte_end":20358,"line_start":125,"line_end":125,"column_start":5,"column_end":20},"name":"BackendSpecific","qualname":"::error::PlayStreamError::BackendSpecific","value":"PlayStreamError::BackendSpecific { err }","parent":{"krate":0,"index":580},"children":[],"decl_id":null,"docs":" See the `BackendSpecificError` docs for more information about this error variant.\n","sig":null,"attributes":[{"value":"/ See the `BackendSpecificError` docs for more information about this error variant.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":20230,"byte_end":20316,"line_start":123,"line_end":123,"column_start":5,"column_end":91}},{"value":"error(\"{err}\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":20321,"byte_end":20338,"line_start":124,"line_end":124,"column_start":5,"column_end":22}}]},{"kind":"Enum","id":{"krate":0,"index":580},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":20037,"byte_end":20052,"line_start":119,"line_end":119,"column_start":10,"column_end":25},"name":"PlayStreamError","qualname":"::error::PlayStreamError","value":"pub enum PlayStreamError {\n\n    /// The device associated with the stream is no longer available.\n    #[error(\"the device associated with the stream is no longer available\")]\n    DeviceNotAvailable,\n\n    /// See the `BackendSpecificError` docs for more information about this error variant.\n    #[error(\"{err}\")]\n    BackendSpecific {\n        #[from]\n        err: BackendSpecificError,\n    },\n}","parent":null,"children":[{"krate":0,"index":581},{"krate":0,"index":583}],"decl_id":null,"docs":" Errors that might occur when calling `play_stream`.","sig":null,"attributes":[{"value":"/ Errors that might occur when calling `play_stream`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":19727,"byte_end":19782,"line_start":113,"line_end":113,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":19783,"byte_end":19786,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ As of writing this, only macOS may immediately return an error while calling this method. This","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":19787,"byte_end":19885,"line_start":115,"line_end":115,"column_start":1,"column_end":99}},{"value":"/ is because both the alsa and wasapi backends only enqueue these commands and do not process","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":19886,"byte_end":19981,"line_start":116,"line_end":116,"column_start":1,"column_end":96}},{"value":"/ them immediately.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":19982,"byte_end":20003,"line_start":117,"line_end":117,"column_start":1,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":598},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":20903,"byte_end":20921,"line_start":140,"line_end":140,"column_start":5,"column_end":23},"name":"DeviceNotAvailable","qualname":"::error::PauseStreamError::DeviceNotAvailable","value":"PauseStreamError::DeviceNotAvailable","parent":{"krate":0,"index":597},"children":[],"decl_id":null,"docs":" The device associated with the stream is no longer available.\n","sig":null,"attributes":[{"value":"/ The device associated with the stream is no longer available.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":20756,"byte_end":20821,"line_start":138,"line_end":138,"column_start":5,"column_end":70}},{"value":"error(\"the device associated with the stream is no longer available\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":20826,"byte_end":20898,"line_start":139,"line_end":139,"column_start":5,"column_end":77}}]},{"kind":"StructVariant","id":{"krate":0,"index":600},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":21040,"byte_end":21055,"line_start":143,"line_end":143,"column_start":5,"column_end":20},"name":"BackendSpecific","qualname":"::error::PauseStreamError::BackendSpecific","value":"PauseStreamError::BackendSpecific { err }","parent":{"krate":0,"index":597},"children":[],"decl_id":null,"docs":" See the `BackendSpecificError` docs for more information about this error variant.\n","sig":null,"attributes":[{"value":"/ See the `BackendSpecificError` docs for more information about this error variant.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":20927,"byte_end":21013,"line_start":141,"line_end":141,"column_start":5,"column_end":91}},{"value":"error(\"{err}\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":21018,"byte_end":21035,"line_start":142,"line_end":142,"column_start":5,"column_end":22}}]},{"kind":"Enum","id":{"krate":0,"index":597},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":20733,"byte_end":20749,"line_start":137,"line_end":137,"column_start":10,"column_end":26},"name":"PauseStreamError","qualname":"::error::PauseStreamError","value":"pub enum PauseStreamError {\n\n    /// The device associated with the stream is no longer available.\n    #[error(\"the device associated with the stream is no longer available\")]\n    DeviceNotAvailable,\n\n    /// See the `BackendSpecificError` docs for more information about this error variant.\n    #[error(\"{err}\")]\n    BackendSpecific {\n        #[from]\n        err: BackendSpecificError,\n    },\n}","parent":null,"children":[{"krate":0,"index":598},{"krate":0,"index":600}],"decl_id":null,"docs":" Errors that might occur when calling `pause_stream`.","sig":null,"attributes":[{"value":"/ Errors that might occur when calling `pause_stream`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":20422,"byte_end":20478,"line_start":131,"line_end":131,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":20479,"byte_end":20482,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ As of writing this, only macOS may immediately return an error while calling this method. This","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":20483,"byte_end":20581,"line_start":133,"line_end":133,"column_start":1,"column_end":99}},{"value":"/ is because both the alsa and wasapi backends only enqueue these commands and do not process","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":20582,"byte_end":20677,"line_start":134,"line_end":134,"column_start":1,"column_end":96}},{"value":"/ them immediately.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":20678,"byte_end":20699,"line_start":135,"line_end":135,"column_start":1,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":615},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":21443,"byte_end":21461,"line_start":155,"line_end":155,"column_start":5,"column_end":23},"name":"DeviceNotAvailable","qualname":"::error::StreamError::DeviceNotAvailable","value":"StreamError::DeviceNotAvailable","parent":{"krate":0,"index":614},"children":[],"decl_id":null,"docs":" The device no longer exists. This can happen if the device is disconnected while the\n program is running.\n","sig":null,"attributes":[{"value":"/ The device no longer exists. This can happen if the device is disconnected while the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":21225,"byte_end":21313,"line_start":152,"line_end":152,"column_start":5,"column_end":93}},{"value":"/ program is running.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":21318,"byte_end":21341,"line_start":153,"line_end":153,"column_start":5,"column_end":28}},{"value":"error(\"The requested device is no longer available. For example, it has been unplugged.\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":21346,"byte_end":21438,"line_start":154,"line_end":154,"column_start":5,"column_end":97}}]},{"kind":"StructVariant","id":{"krate":0,"index":617},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":21580,"byte_end":21595,"line_start":158,"line_end":158,"column_start":5,"column_end":20},"name":"BackendSpecific","qualname":"::error::StreamError::BackendSpecific","value":"StreamError::BackendSpecific { err }","parent":{"krate":0,"index":614},"children":[],"decl_id":null,"docs":" See the `BackendSpecificError` docs for more information about this error variant.\n","sig":null,"attributes":[{"value":"/ See the `BackendSpecificError` docs for more information about this error variant.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":21467,"byte_end":21553,"line_start":156,"line_end":156,"column_start":5,"column_end":91}},{"value":"error(\"{err}\")","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":21558,"byte_end":21575,"line_start":157,"line_end":157,"column_start":5,"column_end":22}}]},{"kind":"Enum","id":{"krate":0,"index":614},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":21207,"byte_end":21218,"line_start":151,"line_end":151,"column_start":10,"column_end":21},"name":"StreamError","qualname":"::error::StreamError","value":"pub enum StreamError {\n\n    /// The device no longer exists. This can happen if the device is disconnected while the\n    /// program is running.\n    #[error(\"The requested device is no longer available. For example, it has been unplugged.\")]\n    DeviceNotAvailable,\n\n    /// See the `BackendSpecificError` docs for more information about this error variant.\n    #[error(\"{err}\")]\n    BackendSpecific {\n        #[from]\n        err: BackendSpecificError,\n    },\n}","parent":null,"children":[{"krate":0,"index":615},{"krate":0,"index":617}],"decl_id":null,"docs":" Errors that might occur while a stream is running.\n","sig":null,"attributes":[{"value":"/ Errors that might occur while a stream is running.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/error.rs","byte_start":21119,"byte_end":21173,"line_start":149,"line_end":149,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":130},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/coreaudio/enumerate.rs","byte_start":59734,"byte_end":59741,"line_start":65,"line_end":65,"column_start":12,"column_end":19},"name":"Devices","qualname":"::host::coreaudio::enumerate::Devices","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/coreaudio/enumerate.rs","byte_start":59798,"byte_end":59801,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"new","qualname":"<Devices>::new","value":"pub fn new() -> Result<Self, DevicesError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":143},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/coreaudio/enumerate.rs","byte_start":62171,"byte_end":62192,"line_start":153,"line_end":153,"column_start":10,"column_end":31},"name":"SupportedInputFormats","qualname":"::host::coreaudio::enumerate::SupportedInputFormats","value":"VecIntoIter<SupportedFormat>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":144},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/coreaudio/enumerate.rs","byte_start":62234,"byte_end":62256,"line_start":154,"line_end":154,"column_start":10,"column_end":32},"name":"SupportedOutputFormats","qualname":"::host::coreaudio::enumerate::SupportedOutputFormats","value":"VecIntoIter<SupportedFormat>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":631},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/coreaudio/mod.rs","byte_start":24173,"byte_end":24177,"line_start":79,"line_end":79,"column_start":12,"column_end":16},"name":"Host","qualname":"::host::coreaudio::Host","value":"","parent":null,"children":[],"decl_id":null,"docs":" Coreaudio host, the default host on macOS and iOS.\n","sig":null,"attributes":[{"value":"/ Coreaudio host, the default host on macOS and iOS.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/coreaudio/mod.rs","byte_start":24090,"byte_end":24144,"line_start":77,"line_end":77,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/coreaudio/mod.rs","byte_start":24203,"byte_end":24206,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"new","qualname":"<Host>::new","value":"pub fn new() -> Result<Self, crate::HostUnavailable>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":635},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/coreaudio/mod.rs","byte_start":26836,"byte_end":26842,"line_start":182,"line_end":182,"column_start":12,"column_end":18},"name":"Device","qualname":"::host::coreaudio::Device","value":"Device {  }","parent":null,"children":[{"krate":0,"index":636}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":646},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/coreaudio/mod.rs","byte_start":36385,"byte_end":36393,"line_start":425,"line_end":425,"column_start":12,"column_end":20},"name":"StreamId","qualname":"::host::coreaudio::StreamId","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":192},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/coreaudio/mod.rs","byte_start":36414,"byte_end":36423,"line_start":427,"line_end":427,"column_start":12,"column_end":21},"name":"EventLoop","qualname":"::host::coreaudio::EventLoop","value":"EventLoop {  }","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":298},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/platform/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"platform","qualname":"::platform","value":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/platform/mod.rs","parent":null,"children":[{"krate":0,"index":299},{"krate":0,"index":301}],"decl_id":null,"docs":" Platform-specific items.","sig":null,"attributes":[{"value":"/ Platform-specific items.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/platform/mod.rs","byte_start":65807,"byte_end":65835,"line_start":1,"line_end":1,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/platform/mod.rs","byte_start":65836,"byte_end":65839,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module also contains the implementation of the platform's dynamically dispatched `Host`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/platform/mod.rs","byte_start":65840,"byte_end":65936,"line_start":3,"line_end":3,"column_start":1,"column_end":97}},{"value":"/ type and its associated `EventLoop`, `Device`, `StreamId` and other associated types. These","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/platform/mod.rs","byte_start":65937,"byte_end":66032,"line_start":4,"line_end":4,"column_start":1,"column_end":96}},{"value":"/ types are useful in the case that users require switching between audio host APIs at runtime.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/platform/mod.rs","byte_start":66033,"byte_end":66130,"line_start":5,"line_end":5,"column_start":1,"column_end":98}}]},{"kind":"Function","id":{"krate":0,"index":310},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/platform/mod.rs","byte_start":83622,"byte_end":83634,"line_start":507,"line_end":507,"column_start":12,"column_end":24},"name":"default_host","qualname":"::platform::platform_impl::default_host","value":"pub fn default_host() -> Host","parent":null,"children":[],"decl_id":null,"docs":" The default host for the current compilation target platform.\n","sig":null,"attributes":[{"value":"/ The default host for the current compilation target platform.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/platform/mod.rs","byte_start":83545,"byte_end":83610,"line_start":506,"line_end":506,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":847},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/samples_formats.rs","byte_start":86539,"byte_end":86542,"line_start":7,"line_end":7,"column_start":5,"column_end":8},"name":"I16","qualname":"::samples_formats::SampleFormat::I16","value":"SampleFormat::I16","parent":{"krate":0,"index":846},"children":[],"decl_id":null,"docs":" The value 0 corresponds to 0.\n","sig":null,"attributes":[{"value":"/ The value 0 corresponds to 0.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/samples_formats.rs","byte_start":86501,"byte_end":86534,"line_start":6,"line_end":6,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":849},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/samples_formats.rs","byte_start":86590,"byte_end":86593,"line_start":9,"line_end":9,"column_start":5,"column_end":8},"name":"U16","qualname":"::samples_formats::SampleFormat::U16","value":"SampleFormat::U16","parent":{"krate":0,"index":846},"children":[],"decl_id":null,"docs":" The value 0 corresponds to 32768.\n","sig":null,"attributes":[{"value":"/ The value 0 corresponds to 32768.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/samples_formats.rs","byte_start":86548,"byte_end":86585,"line_start":8,"line_end":8,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":851},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/samples_formats.rs","byte_start":86639,"byte_end":86642,"line_start":11,"line_end":11,"column_start":5,"column_end":8},"name":"F32","qualname":"::samples_formats::SampleFormat::F32","value":"SampleFormat::F32","parent":{"krate":0,"index":846},"children":[],"decl_id":null,"docs":" The boundaries are (-1.0, 1.0).\n","sig":null,"attributes":[{"value":"/ The boundaries are (-1.0, 1.0).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/samples_formats.rs","byte_start":86599,"byte_end":86634,"line_start":10,"line_end":10,"column_start":5,"column_end":40}}]},{"kind":"Enum","id":{"krate":0,"index":846},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/samples_formats.rs","byte_start":86482,"byte_end":86494,"line_start":5,"line_end":5,"column_start":10,"column_end":22},"name":"SampleFormat","qualname":"::samples_formats::SampleFormat","value":"pub enum SampleFormat {\n\n    /// The value 0 corresponds to 0.\n    I16,\n\n    /// The value 0 corresponds to 32768.\n    U16,\n\n    /// The boundaries are (-1.0, 1.0).\n    F32,\n}","parent":null,"children":[{"krate":0,"index":847},{"krate":0,"index":849},{"krate":0,"index":851}],"decl_id":null,"docs":" Format that each sample has.\n","sig":null,"attributes":[{"value":"/ Format that each sample has.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/samples_formats.rs","byte_start":86395,"byte_end":86427,"line_start":3,"line_end":3,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/samples_formats.rs","byte_start":86754,"byte_end":86765,"line_start":17,"line_end":17,"column_start":12,"column_end":23},"name":"sample_size","qualname":"<SampleFormat>::sample_size","value":"pub fn sample_size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the size in bytes of a sample of this format.\n","sig":null,"attributes":[{"value":"/ Returns the size in bytes of a sample of this format.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/samples_formats.rs","byte_start":86671,"byte_end":86728,"line_start":15,"line_end":15,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/samples_formats.rs","byte_start":86733,"byte_end":86742,"line_start":16,"line_end":16,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/samples_formats.rs","byte_start":87083,"byte_end":87098,"line_start":28,"line_end":28,"column_start":12,"column_end":27},"name":"get_sample_size","qualname":"<SampleFormat>::get_sample_size","value":"pub fn get_sample_size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Deprecated. Use `sample_size` instead.\n","sig":null,"attributes":[{"value":"/ Deprecated. Use `sample_size` instead.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/samples_formats.rs","byte_start":86997,"byte_end":87039,"line_start":25,"line_end":25,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/samples_formats.rs","byte_start":87044,"byte_end":87053,"line_start":26,"line_end":26,"column_start":5,"column_end":14}},{"value":"deprecated","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/samples_formats.rs","byte_start":87058,"byte_end":87071,"line_start":27,"line_end":27,"column_start":5,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":316},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/samples_formats.rs","byte_start":87218,"byte_end":87224,"line_start":34,"line_end":34,"column_start":18,"column_end":24},"name":"Sample","qualname":"::samples_formats::Sample","value":"Sample: Copy + Clone","parent":null,"children":[{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321}],"decl_id":null,"docs":" Trait for containers that contain PCM data.\n","sig":null,"attributes":[{"value":"/ Trait for containers that contain PCM data.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/samples_formats.rs","byte_start":87153,"byte_end":87200,"line_start":33,"line_end":33,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/samples_formats.rs","byte_start":87379,"byte_end":87389,"line_start":37,"line_end":37,"column_start":8,"column_end":18},"name":"get_format","qualname":"::samples_formats::Sample::get_format","value":"pub fn get_format() -> SampleFormat","parent":{"krate":0,"index":316},"children":[],"decl_id":null,"docs":" Returns the `SampleFormat` corresponding to this data type.\n","sig":null,"attributes":[{"value":"/ Returns the `SampleFormat` corresponding to this data type.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/samples_formats.rs","byte_start":87245,"byte_end":87308,"line_start":35,"line_end":35,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/samples_formats.rs","byte_start":87483,"byte_end":87489,"line_start":40,"line_end":40,"column_start":8,"column_end":14},"name":"to_f32","qualname":"::samples_formats::Sample::to_f32","value":"pub fn to_f32(&Self) -> f32","parent":{"krate":0,"index":316},"children":[],"decl_id":null,"docs":" Turns the sample into its equivalent as a floating-point.\n","sig":null,"attributes":[{"value":"/ Turns the sample into its equivalent as a floating-point.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/samples_formats.rs","byte_start":87414,"byte_end":87475,"line_start":39,"line_end":39,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/samples_formats.rs","byte_start":87569,"byte_end":87575,"line_start":42,"line_end":42,"column_start":8,"column_end":14},"name":"to_i16","qualname":"::samples_formats::Sample::to_i16","value":"pub fn to_i16(&Self) -> i16","parent":{"krate":0,"index":316},"children":[],"decl_id":null,"docs":" Converts this sample into a standard i16 sample.\n","sig":null,"attributes":[{"value":"/ Converts this sample into a standard i16 sample.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/samples_formats.rs","byte_start":87509,"byte_end":87561,"line_start":41,"line_end":41,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/samples_formats.rs","byte_start":87655,"byte_end":87661,"line_start":44,"line_end":44,"column_start":8,"column_end":14},"name":"to_u16","qualname":"::samples_formats::Sample::to_u16","value":"pub fn to_u16(&Self) -> u16","parent":{"krate":0,"index":316},"children":[],"decl_id":null,"docs":" Converts this sample into a standard u16 sample.\n","sig":null,"attributes":[{"value":"/ Converts this sample into a standard u16 sample.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/samples_formats.rs","byte_start":87595,"byte_end":87647,"line_start":43,"line_end":43,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/samples_formats.rs","byte_start":87773,"byte_end":87777,"line_start":47,"line_end":47,"column_start":8,"column_end":12},"name":"from","qualname":"::samples_formats::Sample::from","value":"pub fn from<S>(&S) -> Self where S: Sample","parent":{"krate":0,"index":316},"children":[],"decl_id":null,"docs":" Converts any sample type to this one by calling `to_i16`, `to_u16` or `to_f32`.\n","sig":null,"attributes":[{"value":"/ Converts any sample type to this one by calling `to_i16`, `to_u16` or `to_f32`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/samples_formats.rs","byte_start":87682,"byte_end":87765,"line_start":46,"line_end":46,"column_start":5,"column_end":88}}]},{"kind":"Mod","id":{"krate":0,"index":344},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"traits","qualname":"::traits","value":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","parent":null,"children":[{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":375},{"krate":0,"index":383},{"krate":0,"index":393}],"decl_id":null,"docs":" The suite of traits allowing CPAL to abstract over hosts, devices, event loops and stream IDs.\n","sig":null,"attributes":[{"value":"/ The suite of traits allowing CPAL to abstract over hosts, devices, event loops and stream IDs.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":91586,"byte_end":91684,"line_start":1,"line_end":1,"column_start":1,"column_end":99}}]},{"kind":"Trait","id":{"krate":0,"index":358},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":93308,"byte_end":93317,"line_start":37,"line_end":37,"column_start":11,"column_end":20},"name":"HostTrait","qualname":"::traits::HostTrait","value":"HostTrait","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":371}],"decl_id":null,"docs":" A **Host** provides access to the available audio devices on the system.","sig":null,"attributes":[{"value":"/ A **Host** provides access to the available audio devices on the system.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":91943,"byte_end":92019,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":92020,"byte_end":92023,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Each platform may have a number of available hosts depending on the system, each with their own","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":92024,"byte_end":92123,"line_start":20,"line_end":20,"column_start":1,"column_end":100}},{"value":"/ pros and cons.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":92124,"byte_end":92142,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":92143,"byte_end":92146,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ For example, WASAPI is the standard audio host API that ships with the Windows operating","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":92147,"byte_end":92239,"line_start":23,"line_end":23,"column_start":1,"column_end":93}},{"value":"/ system. However, due to historical limitations with respect to performance and flexibility,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":92240,"byte_end":92335,"line_start":24,"line_end":24,"column_start":1,"column_end":96}},{"value":"/ Steinberg created the ASIO API providing better audio device support for pro audio and","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":92336,"byte_end":92426,"line_start":25,"line_end":25,"column_start":1,"column_end":91}},{"value":"/ low-latency applications. As a result, it is common for some devices and device capabilities to","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":92427,"byte_end":92526,"line_start":26,"line_end":26,"column_start":1,"column_end":100}},{"value":"/ only be available via ASIO, while others are only available via WASAPI.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":92527,"byte_end":92602,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":92603,"byte_end":92606,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Another great example is the Linux platform. While the ALSA host API is the lowest-level API","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":92607,"byte_end":92703,"line_start":29,"line_end":29,"column_start":1,"column_end":97}},{"value":"/ available to almost all distributions of Linux, its flexibility is limited as it requires that","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":92704,"byte_end":92802,"line_start":30,"line_end":30,"column_start":1,"column_end":99}},{"value":"/ each process have exclusive access to the devices with which they establish streams. PulseAudio","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":92803,"byte_end":92902,"line_start":31,"line_end":31,"column_start":1,"column_end":100}},{"value":"/ is another popular host API that aims to solve this issue by providing user-space mixing,","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":92903,"byte_end":92996,"line_start":32,"line_end":32,"column_start":1,"column_end":94}},{"value":"/ however it has its own limitations w.r.t. low-latency and high-performance audio applications.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":92997,"byte_end":93095,"line_start":33,"line_end":33,"column_start":1,"column_end":99}},{"value":"/ JACK is yet another host API that is more suitable to pro-audio applications, however it is","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":93096,"byte_end":93191,"line_start":34,"line_end":34,"column_start":1,"column_end":96}},{"value":"/ less readily available by default in many Linux distributions and is known to be tricky to","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":93192,"byte_end":93286,"line_start":35,"line_end":35,"column_start":1,"column_end":95}},{"value":"/ setup.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":93287,"byte_end":93297,"line_start":36,"line_end":36,"column_start":1,"column_end":11}}]},{"kind":"Type","id":{"krate":0,"index":359},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":93398,"byte_end":93405,"line_start":39,"line_end":39,"column_start":10,"column_end":17},"name":"Devices","qualname":"::traits::HostTrait::Devices","value":"type Devices: Iterator<Item = Self::Device>;","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":" The type used for enumerating available devices by the host.\n","sig":null,"attributes":[{"value":"/ The type used for enumerating available devices by the host.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":93324,"byte_end":93388,"line_start":38,"line_end":38,"column_start":5,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":360},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":93494,"byte_end":93500,"line_start":41,"line_end":41,"column_start":10,"column_end":16},"name":"Device","qualname":"::traits::HostTrait::Device","value":"type Device: DeviceTrait;","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":" The `Device` type yielded by the host.\n","sig":null,"attributes":[{"value":"/ The `Device` type yielded by the host.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":93442,"byte_end":93484,"line_start":40,"line_end":40,"column_start":5,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":361},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":93571,"byte_end":93580,"line_start":43,"line_end":43,"column_start":10,"column_end":19},"name":"EventLoop","qualname":"::traits::HostTrait::EventLoop","value":"type EventLoop: EventLoopTrait<Device = Self::Device>;","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":" The event loop type used by the `Host`\n","sig":null,"attributes":[{"value":"/ The event loop type used by the `Host`","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":93519,"byte_end":93561,"line_start":42,"line_end":42,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":93689,"byte_end":93701,"line_start":46,"line_end":46,"column_start":8,"column_end":20},"name":"is_available","qualname":"::traits::HostTrait::is_available","value":"pub fn is_available() -> bool","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":" Whether or not the host is available on the system.\n","sig":null,"attributes":[{"value":"/ Whether or not the host is available on the system.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":93626,"byte_end":93681,"line_start":45,"line_end":45,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":93889,"byte_end":93896,"line_start":51,"line_end":51,"column_start":8,"column_end":15},"name":"devices","qualname":"::traits::HostTrait::devices","value":"pub fn devices(&Self) -> Result<Self::Devices, DevicesError>","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":" An iterator yielding all `Device`s currently available to the host on the system.","sig":null,"attributes":[{"value":"/ An iterator yielding all `Device`s currently available to the host on the system.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":93718,"byte_end":93803,"line_start":48,"line_end":48,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":93808,"byte_end":93811,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Can be empty if the system does not support audio in general.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":93816,"byte_end":93881,"line_start":50,"line_end":50,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":94070,"byte_end":94090,"line_start":56,"line_end":56,"column_start":8,"column_end":28},"name":"default_input_device","qualname":"::traits::HostTrait::default_input_device","value":"pub fn default_input_device(&Self) -> Option<Self::Device>","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":" The default input audio device on the system.","sig":null,"attributes":[{"value":"/ The default input audio device on the system.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":93949,"byte_end":93998,"line_start":53,"line_end":53,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":94003,"byte_end":94006,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if no input device is available.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":94011,"byte_end":94062,"line_start":55,"line_end":55,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":94251,"byte_end":94272,"line_start":61,"line_end":61,"column_start":8,"column_end":29},"name":"default_output_device","qualname":"::traits::HostTrait::default_output_device","value":"pub fn default_output_device(&Self) -> Option<Self::Device>","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":" The default output audio device on the system.","sig":null,"attributes":[{"value":"/ The default output audio device on the system.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":94128,"byte_end":94178,"line_start":58,"line_end":58,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":94183,"byte_end":94186,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if no output device is available.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":94191,"byte_end":94243,"line_start":60,"line_end":60,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":94382,"byte_end":94392,"line_start":64,"line_end":64,"column_start":8,"column_end":18},"name":"event_loop","qualname":"::traits::HostTrait::event_loop","value":"pub fn event_loop(&Self) -> Self::EventLoop","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":" Initialise the event loop, ready for managing audio streams.\n","sig":null,"attributes":[{"value":"/ Initialise the event loop, ready for managing audio streams.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":94310,"byte_end":94374,"line_start":63,"line_end":63,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":94633,"byte_end":94646,"line_start":70,"line_end":70,"column_start":8,"column_end":21},"name":"input_devices","qualname":"::traits::HostTrait::input_devices","value":"pub fn input_devices(&Self)\n-> Result<InputDevices<Self::Devices>, DevicesError>","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":" An iterator yielding all `Device`s currently available to the system that support one or more\n input stream formats.","sig":null,"attributes":[{"value":"/ An iterator yielding all `Device`s currently available to the system that support one or more","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":94425,"byte_end":94522,"line_start":66,"line_end":66,"column_start":5,"column_end":102}},{"value":"/ input stream formats.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":94527,"byte_end":94552,"line_start":67,"line_end":67,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":94557,"byte_end":94560,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ Can be empty if the system does not support audio input.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":94565,"byte_end":94625,"line_start":69,"line_end":69,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":95205,"byte_end":95219,"line_start":83,"line_end":83,"column_start":8,"column_end":22},"name":"output_devices","qualname":"::traits::HostTrait::output_devices","value":"pub fn output_devices(&Self)\n-> Result<OutputDevices<Self::Devices>, DevicesError>","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":" An iterator yielding all `Device`s currently available to the system that support one or more\n output stream formats.","sig":null,"attributes":[{"value":"/ An iterator yielding all `Device`s currently available to the system that support one or more","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":94995,"byte_end":95092,"line_start":79,"line_end":79,"column_start":5,"column_end":102}},{"value":"/ output stream formats.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":95097,"byte_end":95123,"line_start":80,"line_end":80,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":95128,"byte_end":95131,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ Can be empty if the system does not support audio output.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":95136,"byte_end":95197,"line_start":82,"line_end":82,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":375},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":95828,"byte_end":95839,"line_start":97,"line_end":97,"column_start":11,"column_end":22},"name":"DeviceTrait","qualname":"::traits::DeviceTrait","value":"DeviceTrait","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382}],"decl_id":null,"docs":" A device that is capable of audio input and/or output.","sig":null,"attributes":[{"value":"/ A device that is capable of audio input and/or output.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":95570,"byte_end":95628,"line_start":93,"line_end":93,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":95629,"byte_end":95632,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Please note that `Device`s may become invalid if they get disconnected. Therefore all the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":95633,"byte_end":95726,"line_start":95,"line_end":95,"column_start":1,"column_end":94}},{"value":"/ methods that involve a device return a `Result` allowing the user to handle this case.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":95727,"byte_end":95817,"line_start":96,"line_end":96,"column_start":1,"column_end":91}}]},{"kind":"Type","id":{"krate":0,"index":376},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":95918,"byte_end":95939,"line_start":99,"line_end":99,"column_start":10,"column_end":31},"name":"SupportedInputFormats","qualname":"::traits::DeviceTrait::SupportedInputFormats","value":"type SupportedInputFormats: Iterator<Item = SupportedFormat>;","parent":{"krate":0,"index":375},"children":[],"decl_id":null,"docs":" The iterator type yielding supported input stream formats.\n","sig":null,"attributes":[{"value":"/ The iterator type yielding supported input stream formats.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":95846,"byte_end":95908,"line_start":98,"line_end":98,"column_start":5,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":377},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":96052,"byte_end":96074,"line_start":101,"line_end":101,"column_start":10,"column_end":32},"name":"SupportedOutputFormats","qualname":"::traits::DeviceTrait::SupportedOutputFormats","value":"type SupportedOutputFormats: Iterator<Item = SupportedFormat>;","parent":{"krate":0,"index":375},"children":[],"decl_id":null,"docs":" The iterator type yielding supported output stream formats.\n","sig":null,"attributes":[{"value":"/ The iterator type yielding supported output stream formats.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":95979,"byte_end":96042,"line_start":100,"line_end":100,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":96165,"byte_end":96169,"line_start":104,"line_end":104,"column_start":8,"column_end":12},"name":"name","qualname":"::traits::DeviceTrait::name","value":"pub fn name(&Self) -> Result<String, DeviceNameError>","parent":{"krate":0,"index":375},"children":[],"decl_id":null,"docs":" The human-readable name of the device.\n","sig":null,"attributes":[{"value":"/ The human-readable name of the device.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":96115,"byte_end":96157,"line_start":103,"line_end":103,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":96394,"byte_end":96417,"line_start":109,"line_end":109,"column_start":8,"column_end":31},"name":"supported_input_formats","qualname":"::traits::DeviceTrait::supported_input_formats","value":"pub fn supported_input_formats(&Self)\n-> Result<Self::SupportedInputFormats, SupportedFormatsError>","parent":{"krate":0,"index":375},"children":[],"decl_id":null,"docs":" An iterator yielding formats that are supported by the backend.","sig":null,"attributes":[{"value":"/ An iterator yielding formats that are supported by the backend.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":96218,"byte_end":96285,"line_start":106,"line_end":106,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":96290,"byte_end":96293,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ Can return an error if the device is no longer valid (eg. it has been disconnected).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":96298,"byte_end":96386,"line_start":108,"line_end":108,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":96682,"byte_end":96706,"line_start":114,"line_end":114,"column_start":8,"column_end":32},"name":"supported_output_formats","qualname":"::traits::DeviceTrait::supported_output_formats","value":"pub fn supported_output_formats(&Self)\n-> Result<Self::SupportedOutputFormats, SupportedFormatsError>","parent":{"krate":0,"index":375},"children":[],"decl_id":null,"docs":" An iterator yielding output stream formats that are supported by the device.","sig":null,"attributes":[{"value":"/ An iterator yielding output stream formats that are supported by the device.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":96493,"byte_end":96573,"line_start":111,"line_end":111,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":96578,"byte_end":96581,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ Can return an error if the device is no longer valid (eg. it has been disconnected).","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":96586,"byte_end":96674,"line_start":113,"line_end":113,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":96842,"byte_end":96862,"line_start":117,"line_end":117,"column_start":8,"column_end":28},"name":"default_input_format","qualname":"::traits::DeviceTrait::default_input_format","value":"pub fn default_input_format(&Self) -> Result<Format, DefaultFormatError>","parent":{"krate":0,"index":375},"children":[],"decl_id":null,"docs":" The default input stream format for the device.\n","sig":null,"attributes":[{"value":"/ The default input stream format for the device.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":96783,"byte_end":96834,"line_start":116,"line_end":116,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":96974,"byte_end":96995,"line_start":120,"line_end":120,"column_start":8,"column_end":29},"name":"default_output_format","qualname":"::traits::DeviceTrait::default_output_format","value":"pub fn default_output_format(&Self) -> Result<Format, DefaultFormatError>","parent":{"krate":0,"index":375},"children":[],"decl_id":null,"docs":" The default output stream format for the device.\n","sig":null,"attributes":[{"value":"/ The default output stream format for the device.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":96914,"byte_end":96966,"line_start":119,"line_end":119,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":383},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":97151,"byte_end":97165,"line_start":126,"line_end":126,"column_start":11,"column_end":25},"name":"EventLoopTrait","qualname":"::traits::EventLoopTrait","value":"EventLoopTrait","parent":null,"children":[{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391}],"decl_id":null,"docs":" Collection of streams managed together.","sig":null,"attributes":[{"value":"/ Collection of streams managed together.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":97045,"byte_end":97088,"line_start":123,"line_end":123,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":97089,"byte_end":97092,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ Created with the `Host::event_loop` method.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":97093,"byte_end":97140,"line_start":125,"line_end":125,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":384},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":97224,"byte_end":97230,"line_start":128,"line_end":128,"column_start":10,"column_end":16},"name":"Device","qualname":"::traits::EventLoopTrait::Device","value":"type Device: DeviceTrait;","parent":{"krate":0,"index":383},"children":[],"decl_id":null,"docs":" The `Device` type yielded by the host.\n","sig":null,"attributes":[{"value":"/ The `Device` type yielded by the host.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":97172,"byte_end":97214,"line_start":127,"line_end":127,"column_start":5,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":385},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":97317,"byte_end":97325,"line_start":130,"line_end":130,"column_start":10,"column_end":18},"name":"StreamId","qualname":"::traits::EventLoopTrait::StreamId","value":"type StreamId: StreamIdTrait;","parent":{"krate":0,"index":383},"children":[],"decl_id":null,"docs":" The type used to uniquely distinguish between streams.\n","sig":null,"attributes":[{"value":"/ The type used to uniquely distinguish between streams.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":97249,"byte_end":97307,"line_start":129,"line_end":129,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":97654,"byte_end":97672,"line_start":138,"line_end":138,"column_start":8,"column_end":26},"name":"build_input_stream","qualname":"::traits::EventLoopTrait::build_input_stream","value":"pub fn build_input_stream(&Self, &Self::Device, &Format)\n-> Result<Self::StreamId, BuildStreamError>","parent":{"krate":0,"index":383},"children":[],"decl_id":null,"docs":" Creates a new input stream that will run from the given device and with the given format.","sig":null,"attributes":[{"value":"/ Creates a new input stream that will run from the given device and with the given format.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":97347,"byte_end":97440,"line_start":132,"line_end":132,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":97445,"byte_end":97448,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ On success, returns an identifier for the stream.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":97453,"byte_end":97506,"line_start":134,"line_end":134,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":97511,"byte_end":97514,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Can return an error if the device is no longer valid, or if the input stream format is not","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":97519,"byte_end":97613,"line_start":136,"line_end":136,"column_start":5,"column_end":99}},{"value":"/ supported by the device.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":97618,"byte_end":97646,"line_start":137,"line_end":137,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":98109,"byte_end":98128,"line_start":150,"line_end":150,"column_start":8,"column_end":27},"name":"build_output_stream","qualname":"::traits::EventLoopTrait::build_output_stream","value":"pub fn build_output_stream(&Self, &Self::Device, &Format)\n-> Result<Self::StreamId, BuildStreamError>","parent":{"krate":0,"index":383},"children":[],"decl_id":null,"docs":" Creates a new output stream that will play on the given device and with the given format.","sig":null,"attributes":[{"value":"/ Creates a new output stream that will play on the given device and with the given format.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":97801,"byte_end":97894,"line_start":144,"line_end":144,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":97899,"byte_end":97902,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ On success, returns an identifier for the stream.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":97907,"byte_end":97960,"line_start":146,"line_end":146,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":97965,"byte_end":97968,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Can return an error if the device is no longer valid, or if the output stream format is not","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":97973,"byte_end":98068,"line_start":148,"line_end":148,"column_start":5,"column_end":100}},{"value":"/ supported by the device.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":98073,"byte_end":98101,"line_start":149,"line_end":149,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":98640,"byte_end":98651,"line_start":165,"line_end":165,"column_start":8,"column_end":19},"name":"play_stream","qualname":"::traits::EventLoopTrait::play_stream","value":"pub fn play_stream(&Self, Self::StreamId) -> Result<(), PlayStreamError>","parent":{"krate":0,"index":383},"children":[],"decl_id":null,"docs":" Instructs the audio device that it should start playing the stream with the given ID.","sig":null,"attributes":[{"value":"/ Instructs the audio device that it should start playing the stream with the given ID.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":98257,"byte_end":98346,"line_start":156,"line_end":156,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":98351,"byte_end":98354,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Has no effect is the stream was already playing.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":98359,"byte_end":98411,"line_start":158,"line_end":158,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":98416,"byte_end":98419,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Only call this after you have submitted some data, otherwise you may hear some glitches.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":98424,"byte_end":98516,"line_start":160,"line_end":160,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":98521,"byte_end":98524,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":98529,"byte_end":98540,"line_start":162,"line_end":162,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":98545,"byte_end":98548,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ If the stream does not exist, this function can either panic or be a no-op.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":98553,"byte_end":98632,"line_start":164,"line_end":164,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":99082,"byte_end":99094,"line_start":176,"line_end":176,"column_start":8,"column_end":20},"name":"pause_stream","qualname":"::traits::EventLoopTrait::pause_stream","value":"pub fn pause_stream(&Self, Self::StreamId) -> Result<(), PauseStreamError>","parent":{"krate":0,"index":383},"children":[],"decl_id":null,"docs":" Instructs the audio device that it should stop playing the stream with the given ID.","sig":null,"attributes":[{"value":"/ Instructs the audio device that it should stop playing the stream with the given ID.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":98720,"byte_end":98808,"line_start":167,"line_end":167,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":98813,"byte_end":98816,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Has no effect is the stream was already paused.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":98821,"byte_end":98872,"line_start":169,"line_end":169,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":98877,"byte_end":98880,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If you call `play` afterwards, the playback will resume where it was.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":98885,"byte_end":98958,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":98963,"byte_end":98966,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":98971,"byte_end":98982,"line_start":173,"line_end":173,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":98987,"byte_end":98990,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ If the stream does not exist, this function can either panic or be a no-op.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":98995,"byte_end":99074,"line_start":175,"line_end":175,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":99320,"byte_end":99334,"line_start":183,"line_end":183,"column_start":8,"column_end":22},"name":"destroy_stream","qualname":"::traits::EventLoopTrait::destroy_stream","value":"pub fn destroy_stream(&Self, Self::StreamId)","parent":{"krate":0,"index":383},"children":[],"decl_id":null,"docs":" Destroys an existing stream.","sig":null,"attributes":[{"value":"/ Destroys an existing stream.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":99164,"byte_end":99196,"line_start":178,"line_end":178,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":99201,"byte_end":99204,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":99209,"byte_end":99220,"line_start":180,"line_end":180,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":99225,"byte_end":99228,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ If the stream does not exist, this function can either panic or be a no-op.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":99233,"byte_end":99312,"line_start":182,"line_end":182,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":99764,"byte_end":99767,"line_start":192,"line_end":192,"column_start":8,"column_end":11},"name":"run","qualname":"::traits::EventLoopTrait::run","value":"pub fn run<F>(&Self, F) -> ! where F: FnMut(Self::StreamId, StreamDataResult)\n-> () + Send","parent":{"krate":0,"index":383},"children":[],"decl_id":null,"docs":" Takes control of the current thread and begins the stream processing.","sig":null,"attributes":[{"value":"/ Takes control of the current thread and begins the stream processing.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":99372,"byte_end":99445,"line_start":185,"line_end":185,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":99450,"byte_end":99453,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ > **Note**: Since it takes control of the thread, this method is best called on a separate","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":99458,"byte_end":99552,"line_start":187,"line_end":187,"column_start":5,"column_end":99}},{"value":"/ > thread.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":99557,"byte_end":99570,"line_start":188,"line_end":188,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":99575,"byte_end":99578,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Whenever a stream needs to be fed some data, the closure passed as parameter is called.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":99583,"byte_end":99674,"line_start":190,"line_end":190,"column_start":5,"column_end":96}},{"value":"/ You can call the other methods of `EventLoop` without getting a deadlock.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":99679,"byte_end":99756,"line_start":191,"line_end":191,"column_start":5,"column_end":82}}]},{"kind":"Trait","id":{"krate":0,"index":393},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":99936,"byte_end":99949,"line_start":198,"line_end":198,"column_start":11,"column_end":24},"name":"StreamIdTrait","qualname":"::traits::StreamIdTrait","value":"StreamIdTrait: Clone + std::fmt::Debug + std::hash::Hash + PartialEq + Eq","parent":null,"children":[],"decl_id":null,"docs":" The set of required bounds for host `StreamId` types.\n","sig":null,"attributes":[{"value":"/ The set of required bounds for host `StreamId` types.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":99868,"byte_end":99925,"line_start":197,"line_end":197,"column_start":1,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":394},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":6929,"byte_end":6941,"line_start":168,"line_end":168,"column_start":10,"column_end":22},"name":"InputDevices","qualname":"::InputDevices","value":"std::iter::Filter<I, fn(: &<I as Iterator>::Item) -> bool>","parent":null,"children":[],"decl_id":null,"docs":" A host's device iterator yielding only *input* devices.\n","sig":null,"attributes":[{"value":"/ A host's device iterator yielding only *input* devices.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":6860,"byte_end":6919,"line_start":167,"line_end":167,"column_start":1,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":396},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":7076,"byte_end":7089,"line_start":171,"line_end":171,"column_start":10,"column_end":23},"name":"OutputDevices","qualname":"::OutputDevices","value":"std::iter::Filter<I, fn(: &<I as Iterator>::Item) -> bool>","parent":null,"children":[],"decl_id":null,"docs":" A host's device iterator yielding only *output* devices.\n","sig":null,"attributes":[{"value":"/ A host's device iterator yielding only *output* devices.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":7006,"byte_end":7066,"line_start":170,"line_end":170,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":398},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":7187,"byte_end":7199,"line_start":174,"line_end":174,"column_start":10,"column_end":22},"name":"ChannelCount","qualname":"::ChannelCount","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" Number of channels.\n","sig":null,"attributes":[{"value":"/ Number of channels.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":7154,"byte_end":7177,"line_start":173,"line_end":173,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":864},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":7359,"byte_end":7369,"line_start":178,"line_end":178,"column_start":12,"column_end":22},"name":"SampleRate","qualname":"::SampleRate","value":"","parent":null,"children":[],"decl_id":null,"docs":" The number of samples processed per second for a single channel of audio.\n","sig":null,"attributes":[{"value":"/ The number of samples processed per second for a single channel of audio.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":7208,"byte_end":7285,"line_start":176,"line_end":176,"column_start":1,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":866},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":7370,"byte_end":7377,"line_start":178,"line_end":178,"column_start":23,"column_end":30},"name":"0","qualname":"::SampleRate::0","value":"u32","parent":{"krate":0,"index":864},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":887},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":7482,"byte_end":7488,"line_start":182,"line_end":182,"column_start":12,"column_end":18},"name":"Format","qualname":"::Format","value":"Format { channels, sample_rate, data_type }","parent":null,"children":[{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890}],"decl_id":null,"docs":" The format of an input or output audio stream.\n","sig":null,"attributes":[{"value":"/ The format of an input or output audio stream.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":7381,"byte_end":7431,"line_start":180,"line_end":180,"column_start":1,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":888},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":7499,"byte_end":7507,"line_start":183,"line_end":183,"column_start":9,"column_end":17},"name":"channels","qualname":"::Format::channels","value":"u16","parent":{"krate":0,"index":887},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":889},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":7531,"byte_end":7542,"line_start":184,"line_end":184,"column_start":9,"column_end":20},"name":"sample_rate","qualname":"::Format::sample_rate","value":"SampleRate","parent":{"krate":0,"index":887},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":890},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":7564,"byte_end":7573,"line_start":185,"line_end":185,"column_start":9,"column_end":18},"name":"data_type","qualname":"::Format::data_type","value":"samples_formats::SampleFormat","parent":{"krate":0,"index":887},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":902},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":7693,"byte_end":7708,"line_start":190,"line_end":190,"column_start":12,"column_end":27},"name":"SupportedFormat","qualname":"::SupportedFormat","value":"SupportedFormat { channels, min_sample_rate, max_sample_rate, data_type }","parent":null,"children":[{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":906}],"decl_id":null,"docs":" Describes a range of supported stream formats.\n","sig":null,"attributes":[{"value":"/ Describes a range of supported stream formats.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":7592,"byte_end":7642,"line_start":188,"line_end":188,"column_start":1,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":903},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":7719,"byte_end":7727,"line_start":191,"line_end":191,"column_start":9,"column_end":17},"name":"channels","qualname":"::SupportedFormat::channels","value":"u16","parent":{"krate":0,"index":902},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":904},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":7820,"byte_end":7835,"line_start":193,"line_end":193,"column_start":9,"column_end":24},"name":"min_sample_rate","qualname":"::SupportedFormat::min_sample_rate","value":"SampleRate","parent":{"krate":0,"index":902},"children":[],"decl_id":null,"docs":" Minimum value for the samples rate of the supported formats.\n","sig":null,"attributes":[{"value":"/ Minimum value for the samples rate of the supported formats.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":7747,"byte_end":7811,"line_start":192,"line_end":192,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":905},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":7926,"byte_end":7941,"line_start":195,"line_end":195,"column_start":9,"column_end":24},"name":"max_sample_rate","qualname":"::SupportedFormat::max_sample_rate","value":"SampleRate","parent":{"krate":0,"index":902},"children":[],"decl_id":null,"docs":" Maximum value for the samples rate of the supported formats.\n","sig":null,"attributes":[{"value":"/ Maximum value for the samples rate of the supported formats.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":7853,"byte_end":7917,"line_start":194,"line_end":194,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":906},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":8008,"byte_end":8017,"line_start":197,"line_end":197,"column_start":9,"column_end":18},"name":"data_type","qualname":"::SupportedFormat::data_type","value":"samples_formats::SampleFormat","parent":{"krate":0,"index":902},"children":[],"decl_id":null,"docs":" Type of data expected by the device.\n","sig":null,"attributes":[{"value":"/ Type of data expected by the device.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":7959,"byte_end":7999,"line_start":196,"line_end":196,"column_start":5,"column_end":45}}]},{"kind":"StructVariant","id":{"krate":0,"index":401},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":8123,"byte_end":8128,"line_start":202,"line_end":202,"column_start":5,"column_end":10},"name":"Input","qualname":"::StreamData::Input","value":"StreamData::Input { buffer }","parent":{"krate":0,"index":399},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":403},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":8186,"byte_end":8192,"line_start":205,"line_end":205,"column_start":5,"column_end":11},"name":"Output","qualname":"::StreamData::Output","value":"StreamData::Output { buffer }","parent":{"krate":0,"index":399},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":399},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":8102,"byte_end":8112,"line_start":201,"line_end":201,"column_start":10,"column_end":20},"name":"StreamData","qualname":"::StreamData","value":"pub enum StreamData<'a> {\n    Input {\n        buffer: UnknownTypeInputBuffer,\n    },\n    Output {\n        buffer: UnknownTypeOutputBuffer,\n    },\n}","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":403}],"decl_id":null,"docs":" Stream data passed to the `EventLoop::run` callback.\n","sig":null,"attributes":[{"value":"/ Stream data passed to the `EventLoop::run` callback.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":8036,"byte_end":8092,"line_start":200,"line_end":200,"column_start":1,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":405},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":8417,"byte_end":8433,"line_start":212,"line_end":212,"column_start":10,"column_end":26},"name":"StreamDataResult","qualname":"::StreamDataResult","value":"Result<StreamData, StreamError>","parent":null,"children":[],"decl_id":null,"docs":" Stream data passed to the `EventLoop::run` callback, or an error in the case that the device\n was invalidated or some backend-specific error occurred.\n","sig":null,"attributes":[{"value":"/ Stream data passed to the `EventLoop::run` callback, or an error in the case that the device","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":8250,"byte_end":8346,"line_start":210,"line_end":210,"column_start":1,"column_end":97}},{"value":"/ was invalidated or some backend-specific error occurred.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":8347,"byte_end":8407,"line_start":211,"line_end":211,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":407},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":8837,"byte_end":8848,"line_start":220,"line_end":220,"column_start":12,"column_end":23},"name":"InputBuffer","qualname":"::InputBuffer","value":"InputBuffer {  }","parent":null,"children":[{"krate":0,"index":410}],"decl_id":null,"docs":" Represents a buffer containing audio data that may be read.","sig":null,"attributes":[{"value":"/ Represents a buffer containing audio data that may be read.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":8478,"byte_end":8541,"line_start":214,"line_end":214,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":8542,"byte_end":8545,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ This struct implements the `Deref` trait targeting `[T]`. Therefore this buffer can be read the","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":8546,"byte_end":8645,"line_start":216,"line_end":216,"column_start":1,"column_end":100}},{"value":"/ same way as reading from a `Vec` or any other kind of Rust array.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":8646,"byte_end":8715,"line_start":217,"line_end":217,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":411},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":9331,"byte_end":9343,"line_start":235,"line_end":235,"column_start":12,"column_end":24},"name":"OutputBuffer","qualname":"::OutputBuffer","value":"OutputBuffer {  }","parent":null,"children":[{"krate":0,"index":414}],"decl_id":null,"docs":" Represents a buffer that must be filled with audio data. The buffer in unfilled state may\n contain garbage values.","sig":null,"attributes":[{"value":"/ Represents a buffer that must be filled with audio data. The buffer in unfilled state may","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":8907,"byte_end":9000,"line_start":227,"line_end":227,"column_start":1,"column_end":94}},{"value":"/ contain garbage values.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":9001,"byte_end":9028,"line_start":228,"line_end":228,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":9029,"byte_end":9032,"line_start":229,"line_end":229,"column_start":1,"column_end":4}},{"value":"/ This struct implements the `Deref` and `DerefMut` traits to `[T]`. Therefore writing to this","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":9033,"byte_end":9129,"line_start":230,"line_end":230,"column_start":1,"column_end":97}},{"value":"/ buffer is done in the same way as writing to a `Vec` or any other kind of Rust array.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":9130,"byte_end":9219,"line_start":231,"line_end":231,"column_start":1,"column_end":90}},{"value":"must_use","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":9308,"byte_end":9319,"line_start":234,"line_end":234,"column_start":1,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":417},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":9679,"byte_end":9682,"line_start":247,"line_end":247,"column_start":5,"column_end":8},"name":"U16","qualname":"::UnknownTypeInputBuffer::U16","value":"UnknownTypeInputBuffer::U16(InputBuffer)","parent":{"krate":0,"index":415},"children":[],"decl_id":null,"docs":" Samples whose format is `u16`.\n","sig":null,"attributes":[{"value":"/ Samples whose format is `u16`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":9640,"byte_end":9674,"line_start":246,"line_end":246,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":420},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":9749,"byte_end":9752,"line_start":249,"line_end":249,"column_start":5,"column_end":8},"name":"I16","qualname":"::UnknownTypeInputBuffer::I16","value":"UnknownTypeInputBuffer::I16(InputBuffer)","parent":{"krate":0,"index":415},"children":[],"decl_id":null,"docs":" Samples whose format is `i16`.\n","sig":null,"attributes":[{"value":"/ Samples whose format is `i16`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":9710,"byte_end":9744,"line_start":248,"line_end":248,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":423},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":9819,"byte_end":9822,"line_start":251,"line_end":251,"column_start":5,"column_end":8},"name":"F32","qualname":"::UnknownTypeInputBuffer::F32","value":"UnknownTypeInputBuffer::F32(InputBuffer)","parent":{"krate":0,"index":415},"children":[],"decl_id":null,"docs":" Samples whose format is `f32`.\n","sig":null,"attributes":[{"value":"/ Samples whose format is `f32`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":9780,"byte_end":9814,"line_start":250,"line_end":250,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":415},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":9607,"byte_end":9629,"line_start":245,"line_end":245,"column_start":10,"column_end":32},"name":"UnknownTypeInputBuffer","qualname":"::UnknownTypeInputBuffer","value":"pub enum UnknownTypeInputBuffer<'a> {\n\n    /// Samples whose format is `u16`.\n    U16(InputBuffer),\n\n    /// Samples whose format is `i16`.\n    I16(InputBuffer),\n\n    /// Samples whose format is `f32`.\n    F32(InputBuffer),\n}","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":420},{"krate":0,"index":423}],"decl_id":null,"docs":" This is the struct that is provided to you by cpal when you want to read samples from a buffer.","sig":null,"attributes":[{"value":"/ This is the struct that is provided to you by cpal when you want to read samples from a buffer.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":9406,"byte_end":9505,"line_start":242,"line_end":242,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":9506,"byte_end":9509,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ Since the type of data is only known at runtime, you have to read the right buffer.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":9510,"byte_end":9597,"line_start":244,"line_end":244,"column_start":1,"column_end":88}}]},{"kind":"TupleVariant","id":{"krate":0,"index":428},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":10122,"byte_end":10125,"line_start":259,"line_end":259,"column_start":5,"column_end":8},"name":"U16","qualname":"::UnknownTypeOutputBuffer::U16","value":"UnknownTypeOutputBuffer::U16(OutputBuffer)","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Samples whose format is `u16`.\n","sig":null,"attributes":[{"value":"/ Samples whose format is `u16`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":10083,"byte_end":10117,"line_start":258,"line_end":258,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":431},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":10193,"byte_end":10196,"line_start":261,"line_end":261,"column_start":5,"column_end":8},"name":"I16","qualname":"::UnknownTypeOutputBuffer::I16","value":"UnknownTypeOutputBuffer::I16(OutputBuffer)","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Samples whose format is `i16`.\n","sig":null,"attributes":[{"value":"/ Samples whose format is `i16`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":10154,"byte_end":10188,"line_start":260,"line_end":260,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":434},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":10264,"byte_end":10267,"line_start":263,"line_end":263,"column_start":5,"column_end":8},"name":"F32","qualname":"::UnknownTypeOutputBuffer::F32","value":"UnknownTypeOutputBuffer::F32(OutputBuffer)","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Samples whose format is `f32`.\n","sig":null,"attributes":[{"value":"/ Samples whose format is `f32`.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":10225,"byte_end":10259,"line_start":262,"line_end":262,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":426},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":10049,"byte_end":10072,"line_start":257,"line_end":257,"column_start":10,"column_end":33},"name":"UnknownTypeOutputBuffer","qualname":"::UnknownTypeOutputBuffer","value":"pub enum UnknownTypeOutputBuffer<'a> {\n\n    /// Samples whose format is `u16`.\n    U16(OutputBuffer),\n\n    /// Samples whose format is `i16`.\n    I16(OutputBuffer),\n\n    /// Samples whose format is `f32`.\n    F32(OutputBuffer),\n}","parent":null,"children":[{"krate":0,"index":428},{"krate":0,"index":431},{"krate":0,"index":434}],"decl_id":null,"docs":" This is the struct that is provided to you by cpal when you want to write samples to a buffer.","sig":null,"attributes":[{"value":"/ This is the struct that is provided to you by cpal when you want to write samples to a buffer.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":9849,"byte_end":9947,"line_start":254,"line_end":254,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":9948,"byte_end":9951,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ Since the type of data is only known at runtime, you have to fill the right buffer.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":9952,"byte_end":10039,"line_start":256,"line_end":256,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":10439,"byte_end":10459,"line_start":269,"line_end":269,"column_start":12,"column_end":32},"name":"with_max_sample_rate","qualname":"<SupportedFormat>::with_max_sample_rate","value":"pub fn with_max_sample_rate(Self) -> Format","parent":null,"children":[],"decl_id":null,"docs":" Turns this `SupportedFormat` into a `Format` corresponding to the maximum samples rate.\n","sig":null,"attributes":[{"value":"/ Turns this `SupportedFormat` into a `Format` corresponding to the maximum samples rate.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":10322,"byte_end":10413,"line_start":267,"line_end":267,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":10418,"byte_end":10427,"line_start":268,"line_end":268,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":11421,"byte_end":11443,"line_start":301,"line_end":301,"column_start":12,"column_end":34},"name":"cmp_default_heuristics","qualname":"<SupportedFormat>::cmp_default_heuristics","value":"pub fn cmp_default_heuristics(&Self, &Self) -> std::cmp::Ordering","parent":null,"children":[],"decl_id":null,"docs":" A comparison function which compares two `SupportedFormat`s in terms of their priority of\n use as a default stream format.","sig":null,"attributes":[{"value":"/ A comparison function which compares two `SupportedFormat`s in terms of their priority of","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":10639,"byte_end":10732,"line_start":277,"line_end":277,"column_start":5,"column_end":98}},{"value":"/ use as a default stream format.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":10737,"byte_end":10772,"line_start":278,"line_end":278,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":10777,"byte_end":10780,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ Some backends do not provide a default stream format for their audio devices. In these","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":10785,"byte_end":10875,"line_start":280,"line_end":280,"column_start":5,"column_end":95}},{"value":"/ cases, CPAL attempts to decide on a reasonable default format for the user. To do this we","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":10880,"byte_end":10973,"line_start":281,"line_end":281,"column_start":5,"column_end":98}},{"value":"/ use the \"greatest\" of all supported stream formats when compared with this method.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":10978,"byte_end":11064,"line_start":282,"line_end":282,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":11069,"byte_end":11072,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ Formats are prioritised by the following heuristics:","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":11077,"byte_end":11133,"line_start":284,"line_end":284,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":11138,"byte_end":11141,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ **Channels**:","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":11146,"byte_end":11163,"line_start":286,"line_end":286,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":11168,"byte_end":11171,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ - Stereo","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":11176,"byte_end":11188,"line_start":288,"line_end":288,"column_start":5,"column_end":17}},{"value":"/ - Mono","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":11193,"byte_end":11203,"line_start":289,"line_end":289,"column_start":5,"column_end":15}},{"value":"/ - Max available channels","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":11208,"byte_end":11236,"line_start":290,"line_end":290,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":11241,"byte_end":11244,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ **Sample format**:","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":11249,"byte_end":11271,"line_start":292,"line_end":292,"column_start":5,"column_end":27}},{"value":"/ - f32","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":11276,"byte_end":11285,"line_start":293,"line_end":293,"column_start":5,"column_end":14}},{"value":"/ - i16","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":11290,"byte_end":11299,"line_start":294,"line_end":294,"column_start":5,"column_end":14}},{"value":"/ - u16","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":11304,"byte_end":11313,"line_start":295,"line_end":295,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":11318,"byte_end":11321,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ **Sample rate**:","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":11326,"byte_end":11346,"line_start":297,"line_end":297,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":11351,"byte_end":11354,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ - 44100 (cd quality)","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":11359,"byte_end":11383,"line_start":299,"line_end":299,"column_start":5,"column_end":29}},{"value":"/ - Max sample rate","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":11388,"byte_end":11409,"line_start":300,"line_end":300,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":13534,"byte_end":13537,"line_start":383,"line_end":383,"column_start":12,"column_end":15},"name":"len","qualname":"<UnknownTypeInputBuffer>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of the buffer in number of samples.\n","sig":null,"attributes":[{"value":"/ Returns the length of the buffer in number of samples.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":13450,"byte_end":13508,"line_start":381,"line_end":381,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":13513,"byte_end":13522,"line_start":382,"line_end":382,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":13915,"byte_end":13918,"line_start":395,"line_end":395,"column_start":12,"column_end":15},"name":"len","qualname":"<UnknownTypeOutputBuffer>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of the buffer in number of samples.\n","sig":null,"attributes":[{"value":"/ Returns the length of the buffer in number of samples.","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":13831,"byte_end":13889,"line_start":393,"line_end":393,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":13894,"byte_end":13903,"line_start":394,"line_end":394,"column_start":5,"column_end":14}}]}],"impls":[{"id":28,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/coreaudio/enumerate.rs","byte_start":59777,"byte_end":59784,"line_start":67,"line_end":67,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/coreaudio/enumerate.rs","byte_start":60269,"byte_end":60276,"line_start":83,"line_end":83,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/coreaudio/enumerate.rs","byte_start":60302,"byte_end":60309,"line_start":85,"line_end":85,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/coreaudio/enumerate.rs","byte_start":60333,"byte_end":60340,"line_start":88,"line_end":88,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/coreaudio/mod.rs","byte_start":24185,"byte_end":24189,"line_start":81,"line_end":81,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/coreaudio/mod.rs","byte_start":24296,"byte_end":24300,"line_start":87,"line_end":87,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/coreaudio/mod.rs","byte_start":24902,"byte_end":24908,"line_start":114,"line_end":114,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/coreaudio/mod.rs","byte_start":25707,"byte_end":25716,"line_start":139,"line_end":139,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/coreaudio/mod.rs","byte_start":26780,"byte_end":26788,"line_start":179,"line_end":179,"column_start":24,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/coreaudio/mod.rs","byte_start":26889,"byte_end":26895,"line_start":186,"line_end":186,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":188},{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/coreaudio/mod.rs","byte_start":36013,"byte_end":36019,"line_start":414,"line_end":414,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/coreaudio/mod.rs","byte_start":37660,"byte_end":37676,"line_start":459,"line_end":459,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/coreaudio/mod.rs","byte_start":40607,"byte_end":40616,"line_start":543,"line_end":543,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":223},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/null/mod.rs","byte_start":62874,"byte_end":62878,"line_start":31,"line_end":31,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/null/mod.rs","byte_start":62971,"byte_end":62978,"line_start":37,"line_end":37,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/null/mod.rs","byte_start":63064,"byte_end":63073,"line_start":43,"line_end":43,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/null/mod.rs","byte_start":63156,"byte_end":63162,"line_start":49,"line_end":49,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/null/mod.rs","byte_start":63942,"byte_end":63951,"line_start":79,"line_end":79,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/null/mod.rs","byte_start":64839,"byte_end":64843,"line_start":116,"line_end":116,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/null/mod.rs","byte_start":65333,"byte_end":65341,"line_start":142,"line_end":142,"column_start":24,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/null/mod.rs","byte_start":65364,"byte_end":65371,"line_start":144,"line_end":144,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/null/mod.rs","byte_start":65496,"byte_end":65517,"line_start":153,"line_end":153,"column_start":19,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/null/mod.rs","byte_start":65660,"byte_end":65682,"line_start":162,"line_end":162,"column_start":19,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/samples_formats.rs","byte_start":86652,"byte_end":86664,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":10300,"byte_end":10315,"line_start":266,"line_end":266,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":12957,"byte_end":12968,"line_start":349,"line_end":349,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":13117,"byte_end":13129,"line_start":360,"line_end":360,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":13281,"byte_end":13293,"line_start":371,"line_end":371,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":13417,"byte_end":13439,"line_start":380,"line_end":380,"column_start":10,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":13797,"byte_end":13820,"line_start":392,"line_end":392,"column_start":10,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":14194,"byte_end":14209,"line_start":404,"line_end":404,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":6812,"byte_end":6820,"line_start":163,"line_end":163,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":298}},{"kind":"Mod","span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":6851,"byte_end":6857,"line_start":165,"line_end":165,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":344}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/coreaudio/enumerate.rs","byte_start":59777,"byte_end":59784,"line_start":67,"line_end":67,"column_start":6,"column_end":13},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/coreaudio/enumerate.rs","byte_start":60269,"byte_end":60276,"line_start":83,"line_end":83,"column_start":22,"column_end":29},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":130},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/coreaudio/enumerate.rs","byte_start":60302,"byte_end":60309,"line_start":85,"line_end":85,"column_start":22,"column_end":29},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":130},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/coreaudio/enumerate.rs","byte_start":60333,"byte_end":60340,"line_start":88,"line_end":88,"column_start":19,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":130},"to":{"krate":2,"index":5040}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/coreaudio/mod.rs","byte_start":24185,"byte_end":24189,"line_start":81,"line_end":81,"column_start":6,"column_end":10},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":631},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/coreaudio/mod.rs","byte_start":24296,"byte_end":24300,"line_start":87,"line_end":87,"column_start":20,"column_end":24},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":631},"to":{"krate":0,"index":358}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/coreaudio/mod.rs","byte_start":24902,"byte_end":24908,"line_start":114,"line_end":114,"column_start":22,"column_end":28},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":635},"to":{"krate":0,"index":375}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/coreaudio/mod.rs","byte_start":25707,"byte_end":25716,"line_start":139,"line_end":139,"column_start":25,"column_end":34},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":192},"to":{"krate":0,"index":383}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/coreaudio/mod.rs","byte_start":26780,"byte_end":26788,"line_start":179,"line_end":179,"column_start":24,"column_end":32},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":646},"to":{"krate":0,"index":393}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/coreaudio/mod.rs","byte_start":26889,"byte_end":26895,"line_start":186,"line_end":186,"column_start":6,"column_end":12},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/coreaudio/mod.rs","byte_start":36013,"byte_end":36019,"line_start":414,"line_end":414,"column_start":21,"column_end":27},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":635},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/coreaudio/mod.rs","byte_start":37660,"byte_end":37676,"line_start":459,"line_end":459,"column_start":33,"column_end":49},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":557},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/coreaudio/mod.rs","byte_start":40607,"byte_end":40616,"line_start":543,"line_end":543,"column_start":6,"column_end":15},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/null/mod.rs","byte_start":62874,"byte_end":62878,"line_start":31,"line_end":31,"column_start":6,"column_end":10},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/null/mod.rs","byte_start":62971,"byte_end":62978,"line_start":37,"line_end":37,"column_start":6,"column_end":13},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":663},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/null/mod.rs","byte_start":63064,"byte_end":63073,"line_start":43,"line_end":43,"column_start":6,"column_end":15},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/null/mod.rs","byte_start":63156,"byte_end":63162,"line_start":49,"line_end":49,"column_start":22,"column_end":28},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":667},"to":{"krate":0,"index":375}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/null/mod.rs","byte_start":63942,"byte_end":63951,"line_start":79,"line_end":79,"column_start":25,"column_end":34},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":247},"to":{"krate":0,"index":383}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/null/mod.rs","byte_start":64839,"byte_end":64843,"line_start":116,"line_end":116,"column_start":20,"column_end":24},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":249},"to":{"krate":0,"index":358}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/null/mod.rs","byte_start":65333,"byte_end":65341,"line_start":142,"line_end":142,"column_start":24,"column_end":32},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":679},"to":{"krate":0,"index":393}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/null/mod.rs","byte_start":65364,"byte_end":65371,"line_start":144,"line_end":144,"column_start":19,"column_end":26},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":663},"to":{"krate":2,"index":5040}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/null/mod.rs","byte_start":65496,"byte_end":65517,"line_start":153,"line_end":153,"column_start":19,"column_end":40},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":251},"to":{"krate":2,"index":5040}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/host/null/mod.rs","byte_start":65660,"byte_end":65682,"line_start":162,"line_end":162,"column_start":19,"column_end":41},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":253},"to":{"krate":2,"index":5040}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/samples_formats.rs","byte_start":86652,"byte_end":86664,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":846},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/samples_formats.rs","byte_start":87226,"byte_end":87230,"line_start":34,"line_end":34,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1981},"to":{"krate":0,"index":316}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/samples_formats.rs","byte_start":87233,"byte_end":87238,"line_start":34,"line_end":34,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":1669},"to":{"krate":0,"index":316}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":99951,"byte_end":99956,"line_start":198,"line_end":198,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1669},"to":{"krate":0,"index":393}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":99969,"byte_end":99974,"line_start":198,"line_end":198,"column_start":44,"column_end":49},"kind":"SuperTrait","from":{"krate":2,"index":6315},"to":{"krate":0,"index":393}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":99988,"byte_end":99992,"line_start":198,"line_end":198,"column_start":63,"column_end":67},"kind":"SuperTrait","from":{"krate":2,"index":6503},"to":{"krate":0,"index":393}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":99995,"byte_end":100004,"line_start":198,"line_end":198,"column_start":70,"column_end":79},"kind":"SuperTrait","from":{"krate":2,"index":1697},"to":{"krate":0,"index":393}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/traits.rs","byte_start":100007,"byte_end":100009,"line_start":198,"line_end":198,"column_start":82,"column_end":84},"kind":"SuperTrait","from":{"krate":2,"index":1702},"to":{"krate":0,"index":393}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":10300,"byte_end":10315,"line_start":266,"line_end":266,"column_start":6,"column_end":21},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":902},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":12957,"byte_end":12968,"line_start":349,"line_end":349,"column_start":23,"column_end":34},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":407},"to":{"krate":2,"index":2142}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":13117,"byte_end":13129,"line_start":360,"line_end":360,"column_start":23,"column_end":35},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":2142}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":13281,"byte_end":13293,"line_start":371,"line_end":371,"column_start":26,"column_end":38},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":2155}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":13417,"byte_end":13439,"line_start":380,"line_end":380,"column_start":10,"column_end":32},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":415},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":13797,"byte_end":13820,"line_start":392,"line_end":392,"column_start":10,"column_end":33},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/marcpartensky/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.11.0/src/lib.rs","byte_start":14194,"byte_end":14209,"line_start":404,"line_end":404,"column_start":23,"column_end":38},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":902},"to":{"krate":2,"index":1889}}]}